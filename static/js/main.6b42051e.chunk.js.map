{"version":3,"sources":["assets/dashboard-empty-state.svg","routes/dashboard/chart-wizard/icons/stacked-bar-icon.svg","routes/dashboard/chart-wizard/icons/donut-icon.svg","routes/dashboard/chart-wizard/icons/grouped-bar-icon.svg","routes/dashboard/chart-wizard/icons/grouped-bar-horizontal-icon.svg","routes/dashboard/chart-wizard/icons/scatter-icon.svg","routes/dashboard/chart-wizard/icons/simple-bar-icon.svg","routes/dashboard/chart-wizard/icons/stacked-bar-horizontal-icon.svg","routes/dashboard/chart-wizard/icons/simple-bar-horizontal-icon.svg","routes/dashboard/chart-wizard/icons/pie-icon.svg","routes/dashboard/chart-wizard/icons/line-icon.svg","routes/dashboard/chart-wizard/icons/area-icon.svg","routes/dashboard/chart-wizard/icons/stacked-area-icon.svg","assets/chart-404.svg","components/header.tsx","components/header-menu-item-link.tsx","context/notification-context.tsx","styles.ts","components/link-button.tsx","components/main.tsx","components/chart.tsx","components/grid.tsx","context/modal-context.tsx","components/notification.tsx","utils/chart-tools.ts","components/chart-options-pane.tsx","context/charts-context.tsx","routes/edit/share-options/exports/create-chart-sandbox.ts","routes/edit/share-options/exports/frameworks/react-chart.ts","routes/edit/share-options/exports/frameworks/angular-chart.ts","routes/edit/share-options/exports/frameworks/vanilla-chart.ts","routes/edit/share-options/exports/frameworks/vue-chart.ts","routes/edit/share-options/exports/export-code-modal.tsx","components/selection-tile.tsx","utils/file-tools.ts","routes/edit/share-options/share-options-modal.tsx","routes/edit/share-options/exports/export-image-modal.tsx","routes/dashboard/dashboard-search.tsx","routes/edit/duplicate-chart-modal.tsx","routes/edit/delete-chart-modal.tsx","routes/edit/settings-chart-modal.tsx","routes/edit/chart-modal.tsx","routes/edit/edit-header.tsx","routes/edit/data-table/data-table-tools.ts","routes/edit/data-table/data-table-header/header-overflow.tsx","routes/edit/data-table/data-table-header/data-table-header.tsx","routes/edit/data-table/data-table-body/dataset-input-cell.tsx","routes/edit/data-table/data-table-body/datapoint-input-cell.tsx","routes/edit/data-table/data-table-body/data-table-body.tsx","routes/edit/data-table/data-table-toolbar.tsx","routes/edit/data-table/data-table.tsx","components/edit-chart.tsx","routes/edit/index.tsx","routes/add-data.tsx","routes/dashboard/dashboard-header.tsx","routes/dashboard/chart-wizard/create-chart-modal.tsx","routes/dashboard/chart-tile.tsx","routes/dashboard/chart-tile-list.tsx","interfaces.ts","routes/dashboard/chart-wizard/upload-data-modal.tsx","routes/dashboard/chart-wizard/chart-wizard.tsx","routes/dashboard/chart-wizard/placeholder-data/bar.ts","routes/dashboard/chart-wizard/placeholder-data/pie.ts","routes/dashboard/chart-wizard/placeholder-data/donut.ts","routes/dashboard/chart-wizard/placeholder-data/line.ts","routes/dashboard/chart-wizard/placeholder-data/area.ts","routes/dashboard/chart-wizard/placeholder-data/scatter.ts","routes/dashboard/chart-wizard/generate-new-chart.ts","routes/dashboard/chart-wizard/choose-chart-modal.tsx","charts.version.ts","routes/dashboard/index.tsx","routes/not-found.tsx","routes/error-boundary.tsx","components/ui-shell.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","isSideNavExpanded","setIsSideNavExpanded","history","useHistory","headerName","css","aria-label","role","tabIndex","isActive","onClick","prefix","title","className","push","onKeyDown","event","key","HeaderMenuItemLinkBase","this","props","to","rest","staticContext","Component","HeaderMenuItemLinkRouter","withRouter","forwardRef","ref","displayName","NotificationActionType","main","Button","cx","Main","chartWrapperStyle","Chart","chart","chartOptions","options","rawChartOptions","legend","axes","legendPosition","position","legendClickable","clickable","axesScaleTypeLeft","left","scaleType","axesScaleTypeRight","right","axesScaleTypeTop","top","axesScaleTypeBottom","bottom","useState","shouldRender","setShouldRender","useEffect","setTimeout","data","SkeletonPlaceholder","chartData","chartTheme","theme","type","getChartType","style","height","Row","styles","children","Col","cols","render","sm","md","lg","NotificationContext","createContext","ModalActionType","ModalType","initialState","notifications","notificationCounter","NotificationReducer","state","action","REMOVE_NOTIFICATION","filter","notification","id","ADD_NOTIFICATION","NotificationContextProvider","useReducer","Provider","value","notificationStyle","minWidth","notificationAreaStyle","Notification","useContext","dispatch","map","index","lowContrast","aria-live","kind","subtitle","message","caption","onCloseButtonClick","onNotificationClose","actions","actionFunction","actionText","undefined","restoreChartData","datapoint","date","Date","sleep","ms","Promise","resolve","getChartPreview","a","element","document","createElement","animations","zIndex","width","minHeight","ReactDOM","React","body","appendChild","domtoimage","toBlob","imageBlob","remove","getGroupNames","group","groupName","self","indexOf","inputWrap","accordionCss","ChartOptionsPane","setChart","XAxisContentSwitch","YAxisContentSwitch","setState","overrideVariantsCount","doSetOverrideVariantsCount","setOverrideVariantsCount","override","updatedChart","JSON","parse","stringify","color","pairing","numberOfVariants","getFieldValue","defaultValue","inputID","Array","isArray","split","unshift","get","getVariantCount","fv","Number","length","handleChange","inputValue","objectPath","set","stacked","setStacked","includes","endsWith","startsWith","mapsTo","mapsToPath","splice","SwitchAxisType","axisType","TextInput","labelText","capitalize","onChange","placeholder","Select","SelectItem","disabled","text","getNoneAxisOption","imaginaryTarget","target","Accordion","AccordionItem","FormGroup","marginLeft","marginRight","marginTop","legendText","Checkbox","checked","Tooltip","triggerText","direction","NumberInput","label","min","max","optionCount","fill","_","getPaletteOptions","toString","ContentSwitcher","name","selectedIndex","Switch","ModalContext","ChartActionType","ShowModal","ChartID","modalReducer","setDuplicationModal","DUPLICATION","setDeletionModal","DELETION","setShareModal","SHARING","setSettingsModal","SETTINGS","setExportModal","EXPORT","closeModal","ModalContextProvider","modal","createChartSandbox","chartTemplate","files","Object","keys","forEach","filePath","content","LZString","compressToBase64","replace","chartTagMap","dataAndOptions","codeSnippetWrapper","titleWrapper","codeSnippet","ExportCode","displayedModal","setDisplayedModal","modalState","dispatchModal","vanillaCode","chartType","dependencies","d3","createVanillaChartApp","reactCode","react","emotion","createReactChartApp","angularCode","rxjs","createAngularChartApp","vueCode","vue","createVueChartApp","generateSandboxUrl","parameters","Modal","hasForm","open","ShareOptionsModals","CODE_EXPORTS","onRequestClose","primaryButtonText","secondaryButtonText","onRequestSubmit","onSecondarySubmit","SHARE_OPTIONS","modalHeading","Tabs","Tab","href","rel","fileName","CodeSnippet","light","copyButtonDescription","tileFooter","SelectionTile","selected","icon","tag","getFullFileName","mimeType","extension","saveBlob","blob","url","URL","createObjectURL","anchor","download","click","saveFile","revokeObjectURL","processDataFile","file","reject","reader","FileReader","onloadend","uploadedData","result","restoredUploadedData","isDataInvalid","groupNames","uniqueKeys","i","counters","j","groupDuplicateKeys","headerDuplicateKeys","header","wasDataModified","restoreUploadedJsonData","originalData","Papa","maxRowLength","reduce","maxLength","row","Math","rowIndex","concat","columnIndex","groupIndex","some","toLowerCase","findIndex","slice","rowItem","parseFloat","isNaN","onerror","err","console","log","readAsText","warningNotificationProps","notificationType","errorNotificationProps","ChartsContext","Exports","useFetchOne","FETCH_ONE","chartsReducer","currentId","loaded","UPDATE_ALL","charts","updatedCharts","actionChart","find","assign","every","UPDATE_ONE","updatedChartState","updateOne","REMOVE_CHART","TOGGLE_VISIBILITY","hidden","REMOVE_CHARTS","remainingCharts","ids","ADD_ONE","duplicate","expandedCharts","ChartsContextProvider","localCharts","localStorage","getItem","store","filteredCharts","setItem","exportSettingForm","exportSettingFormGroup","previewContainer","selectInputWH","selectInput","chartImage","updatePreviewUrl","handleResize","doInputChange","debounce","doUpdatePreviewSize","ExportImageModal","chartState","pathSegments","location","pathname","exportSettings","unit","ratioLock","chartName","format","curRatio","inputs","setInputs","preview","previewUrl","setPreviewUrl","isPerformingAction","setIsPerformingAction","previewContainerRef","useRef","imageContainerSize","setImageContainerSize","current","offsetWidth","offsetHeight","window","addEventListener","removeEventListener","getPreviewSize","fitRatio","previewSize","renderProps","readAsDataURL","Blob","imageUrl","onSubmit","then","IMAGE_EXPORTS","display","src","alt","Loading","active","ExportModalSettings","onDimensionChange","toFixed","numInputOnchange","numInputOnClick","inputChange","Form","defaultChecked","exportOptionTileWrapper","exportOptionsWrapper","SortDirection","ShareOptionsModal","selectedExportOption","shareOptionsState","setShareOptionsState","CODE","IMAGE","primaryButtonDisabled","shareModalSwitcher","DuplicateChartModal","dispatchNotification","chartsState","useLocation","duplicateChart","currentlyProcessing","chartCopy","nameRegEx","RegExp","String","raw","nameMatch","match","count","nameBase","parseInt","names","highestNumber","n","sort","b","shift","getUniqueName","random","size","DeleteChartModal","undoHideChart","doDeleteChart","danger","SettingsChartModal","setTitle","labels","isTemplate","setIsTemplate","updateChartSettings","TooltipDefinition","tooltipText","ChartModal","editHeader","toolBarAction","chartEditToolBar","EditHeader","lastModified","InlineLoading","description","iconDescription","status","getTableBody","headers","tableHeaders","getTableHeaders","table","headerIndex","item","array","fn","counter","findNth","tableHeader","addColumn","column","updateData","newChartData","previousDuplicates","generateColumn","labelSuffix","findDuplicateKey","addRow","generateRow","groupSuffix","findDuplicateGroup","updateDatapoint","newDatapoint","keyIndex","groupToUpdate","HeaderOverflow","OverflowMenu","ariaLabel","stopPropagation","OverflowMenuItem","itemText","isDelete","removeColumn","labelInput","DataTableHeader","TableHead","TableRow","TableHeader","columnKeys","newKey","updateKey","datasetInputCell","datasetInput","DatasetInputCell","TableCell","rowKeys","newGroup","newData","updateGroup","margin","groupNameToRemove","removeRow","datapointInput","tableDatePicker","DatapointInputCell","isTimeSeries","DatePicker","datePickerType","DatePickerInput","DataTableBody","TableBody","datasetName","toolbarContent","DataTableToolbar","setNotificationState","downloadFile","fileContent","TableToolbar","TableToolbarContent","TableToolbarSearch","TableToolbarMenu","background","renderIcon","TableToolbarAction","primaryFocus","generatedCsvString","join","datasetString","generatedString","generateCsvFile","FileUploaderButton","multiple","from","fileUploaded","notificationProps","visible","backupData","catch","handleUpload","dataTable","tableWrapper","tableContainer","doValueChange","DataTable","inputCounter","notificationState","axisPosition","TableContainer","Table","editChartStyle","EditChart","editPageContent","Edit","params","dashboardSearchWrapper","searchInput","sortButton","sortOverflowItem","ChartGroupDisplayed","DashboardSearch","onSearchHandler","onSortHandler","displayWizard","setDisplayWizard","sortDirection","Search","placeHolderText","Ascending","Descending","CreateOptions","dashboardHeaderWrapper","chartTitle","contentSwitcher","DashboardHeader","onDisplayedSwitchHandler","chartGroupDisplayed","AllCharts","Templates","tileWrapper","tileStyle","tileInnerWrapperBase","tileInnerWrapper","chartOverflow","chartInfo","ChartTile","setModalChart","handleModalState","modalAction","resetPreview","Tile","loading","SkeletonChartTile","SkeletonText","heading","svgStyle","placeholderContainer","chartRowWrapper","ChartTileList","v","textAlign","createChartTiles","createChartTile","ChartType","CreateChartModal","selectedCreateOption","setSelectedCreateOption","shouldDisplay","shouldSubmitOnEnter","selectorPrimaryFocus","setShouldDisplay","setLastVisitedModal","ChartWizardModals","CREATE_CHART_MODAL","UPLOAD_DATA","UPLOAD_DATA_MODAL","CHOOSE_CHART_MODAL","CHOOSE_TYPE","fileUploaderModal","fileUploaderHeading","UploadDataModal","uploadedFile","setUploadedFile","isFileInvalid","errorMessage","fileErrorState","setFileErrorState","generateChartRecommendations","chartRecommendations","apply","DONUT_CHART","PIE_CHART","SCATTER_CHART","SIMPLE_BAR_CHART","STACKED_BAR_CHART","HORIZONTAL_BAR_CHART","GROUPED_BAR_CHART","LINE_CHART","AREA_CHART","STACKED_AREA_CHART","setRecommendedCharts","handleFileUpload","setUploadedData","accept","onFileAdded","FileUploaderItem","invalid","errorSubject","onDelete","groupedBarData","groupedBarOptions","groupedBarHorizontalOptions","simpleBarData","simpleBarOptions","simpleBarHorizontalOptions","stackedBarData","stackedBarOptions","stackedBarHorizontalOptions","pieData","pieOptions","resizable","groupMapsTo","donutData","donutOptions","donut","center","lineData","audienceSize","lineOptions","areaData","areaOptions","curve","stackedAreaData","stackedAreaOptions","scatterData","scatterOptions","defaultOptions","primary","secondary","chartOptionTile","ChooseChartModal","selectedChartType","doSetSelectedChartType","horizontal","setHorizontal","setSelectedChartType","isRecommended","recommendedCharts","recommendation","generateChart","generatedChart","chartID","scatterDemos","donutDemos","lineDemos","areaDemos","barDemos","pieDemos","merge","toISOString","chartsVersion","generateNewChart","lastVisitedModal","simpleBarIcon","Tag","simpleBarHorizontalIcon","scatterIcon","donutIcon","stackedBarIcon","stackedBarHorizontalIcon","lineIcon","areaIcon","stackedAreaIcon","groupedBarIcon","groupedBarHorizontalIcon","pieIcon","ChartWizard","modalSwitcher","headerRowSyles","searchRowStyles","Dashboard","setChartGroupDisplayed","chartTitleFilter","setChartTitleFilter","setSortDirection","displayedCharts","filterCharts","chartSort","modalChart","NotFound","goBack","component","errorHandler","ErrorBoundary","error","info","UIShell","HeaderContainer","app","Boolean","hostname","path","exact","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b42051e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dashboard-empty-state.5e050054.svg\";","module.exports = __webpack_public_path__ + \"static/media/stacked-bar-icon.5c579391.svg\";","module.exports = __webpack_public_path__ + \"static/media/donut-icon.ff1c7075.svg\";","module.exports = __webpack_public_path__ + \"static/media/grouped-bar-icon.ddb016d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/grouped-bar-horizontal-icon.322a0393.svg\";","module.exports = __webpack_public_path__ + \"static/media/scatter-icon.07d3aad8.svg\";","module.exports = __webpack_public_path__ + \"static/media/simple-bar-icon.4fbae6e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/stacked-bar-horizontal-icon.c796e82c.svg\";","module.exports = __webpack_public_path__ + \"static/media/simple-bar-horizontal-icon.7b17f5b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/pie-icon.a6725325.svg\";","module.exports = __webpack_public_path__ + \"static/media/line-icon.105fdb12.svg\";","module.exports = __webpack_public_path__ + \"static/media/area-icon.06ae15c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/stacked-area-icon.6acc9cb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/chart-404.9bc8debd.svg\";","import React from 'react';\nimport {\n\tHeaderMenuButton,\n\tHeaderName,\n\tHeader as ShellHeader\n} from 'carbon-components-react/lib/components/UIShell';\nimport { css } from 'emotion';\nimport { useHistory } from 'react-router-dom';\n\nexport const Header = ({ isSideNavExpanded, setIsSideNavExpanded }: any) => {\n\tconst history = useHistory();\n\n\tconst headerName = css`\n\t\t&:hover {\n\t\t\tcursor: pointer;\n\t\t}\n\t`;\n\n\treturn (\n\t\t<ShellHeader aria-label=\"IBM Carbon Charts Builder\" role='banner' tabIndex={0}>\n\t\t\t<HeaderMenuButton\n\t\t\t\taria-label={`${isSideNavExpanded ? 'Close menu' : 'Open menu'}`}\n\t\t\t\tisActive={isSideNavExpanded}\n\t\t\t\tonClick={() => setIsSideNavExpanded(!isSideNavExpanded)} />\n\t\t\t<HeaderName\n\t\t\t\tprefix=\"IBM\"\n\t\t\t\ttabIndex={0}\n\t\t\t\ttitle='Carbon Charts Builder home'\n\t\t\t\tclassName={headerName}\n\t\t\t\tonClick={() => history.push('/')}\n\t\t\t\tonKeyDown={(event: any) => event.key === 'Enter' && history.push('/')}>\n\t\t\t\tCarbon Charts Builder {process.env.NODE_ENV === 'development' ? 'Dev' : ''}\n\t\t\t</HeaderName>\n\t\t</ShellHeader>\n\t);\n};\n","import React, {\n\tComponent, ComponentPropsWithRef, forwardRef\n} from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { HeaderMenuItem } from 'carbon-components-react/lib/components/UIShell';\n\ninterface HeaderMenuItemLinkInterface extends RouteComponentProps, ComponentPropsWithRef<any> { }\n\nclass HeaderMenuItemLinkBase extends Component<HeaderMenuItemLinkInterface> {\n\trender() {\n\t\tconst {\n\t\t\thistory,\n\t\t\tto,\n\t\t\tstaticContext,\n\t\t\t...rest\n\t\t} = this.props as any;\n\t\treturn (\n\t\t\t<HeaderMenuItem\n\t\t\t\tonClick={() => history.push(to)}\n\t\t\t\tonKeyDown={(event: any) => {if (event.key === 'Enter') history.push(to);}}\n\t\t\t\t{...rest} />\n\t\t);\n\t}\n}\n\nexport const HeaderMenuItemLinkRouter = withRouter(HeaderMenuItemLinkBase);\n\nexport const HeaderMenuItemLink = forwardRef<HTMLElement, HeaderMenuItemLinkInterface>(\n\t(props, ref) => <HeaderMenuItemLinkRouter {...props} />\n);\n\n// explicitly set display name\nHeaderMenuItemLink.displayName = 'HeaderMenuItemLink';\n","import React, { createContext, useReducer } from 'react';\n\nconst NotificationContext: React.Context<any> = createContext({});\n\nNotificationContext.displayName = 'NotificationContext';\n\nexport type NotificationData = {\n\tkind: string;\n\ttitle: string;\n\tmessage: string;\n\tid: number,\n\taction?: any;\n}\nexport interface BaseNotificationAction {\n\ttype: NotificationActionType,\n\tdata: NotificationData;\n\taction?: Action\n}\n\nexport type NotificationAction =\n\tNotificationActionAdd |\n\tNotificationActionRemove;\n\n\nexport enum NotificationActionType {\n\tADD_NOTIFICATION,\n\tREMOVE_NOTIFICATION\n}\n\nexport interface NotificationActionAdd extends BaseNotificationAction {\n\ttype: NotificationActionType.ADD_NOTIFICATION;\n}\n\nexport interface NotificationActionRemove extends BaseNotificationAction {\n\ttype: NotificationActionType.REMOVE_NOTIFICATION;\n}\n\ninterface Action {\n\tactionText: string,\n\tactionFunction: any,\n\tonNotificationClose: any\n}\n\n\nexport interface NotificationState {\n\tnotifications: NotificationData[]\n}\n\nconst initialState = { notifications: [] };\nlet notificationCounter = 0;\n\nconst NotificationReducer = (state: NotificationState, action: NotificationAction) => {\n\tswitch (action.type) {\n\t\tcase NotificationActionType.REMOVE_NOTIFICATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: state.notifications.filter(\n\t\t\t\t\t(notification: NotificationData) => notification.id !== action.data.id\n\t\t\t\t)\n\t\t\t};\n\t\tcase NotificationActionType.ADD_NOTIFICATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: [\n\t\t\t\t\t...state.notifications,\n\t\t\t\t\t{\n\t\t\t\t\t\t...action.data,\n\t\t\t\t\t\tid: notificationCounter++\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\tdefault: return state;\n\t}\n};\n\nconst NotificationContextProvider = ({ children }: any) => {\n\tconst notification = useReducer(NotificationReducer, initialState);\n\treturn (\n\t\t<NotificationContext.Provider value={notification}>\n\t\t\t{children}\n\t\t</NotificationContext.Provider>\n\t);\n};\n\nexport {\n\tNotificationContext,\n\tNotificationContextProvider\n};\n","import { css, cx } from 'emotion';\n\nexport const main = cx(\n\t'bx--content',\n\t'bx--grid',\n\tcss`\n\t\tpadding-top: 0;\n\t\tbackground: #f4f4f4;\n\t\tmin-height: 100vh;\n\t\tmax-width: unset;\n`);\n\nexport const marginTop = (margin = '1rem') => css`margin-top: ${margin};`;\n","import React from 'react';\nimport { Button } from 'carbon-components-react';\nimport { withRouter } from 'react-router-dom';\n\nexport const LinkButton = withRouter((props: any) => {\n\tconst {\n\t\thistory,\n\t\tto,\n\t\tstaticContext,\n\t\t...rest\n\t} = props;\n\treturn <Button onClick={() => history.push(to)} {...rest} />;\n});\n","import React from 'react';\nimport { main } from '../styles';\n\nexport const Main = ({ ...props }) => (\n\t<main className={main} {...props}/>\n);\n","import React, { useEffect, useState } from 'react';\nimport {\n\tSimpleBarChart,\n\tGroupedBarChart,\n\tStackedBarChart,\n\tLineChart,\n\tScatterChart,\n\tPieChart,\n\tDonutChart,\n\tAreaChart,\n\tStackedAreaChart\n} from '@carbon/charts-react';\nimport { SkeletonPlaceholder } from 'carbon-components-react';\nimport '@carbon/charts/styles.css';\nimport './chart-preview.scss';\nimport { css } from 'emotion';\n\nconst chartWrapperStyle = css`\n\twidth: 100%;\n`;\n\n/* eslint-disable react/prop-types */\n// https://github.com/yannickcr/eslint-plugin-react/issues/2135\nexport const Chart = ({ chart }: any) => {\n\tconst chartOptions = chart?.options?.rawChartOptions;\n\tconst legend = chartOptions?.legend;\n\tconst axes = chartOptions?.axes;\n\tconst legendPosition = legend?.position;\n\tconst legendClickable = legend?.clickable;\n\t// TODO this should only be necessary if it adds or removes an axes\n\tconst axesScaleTypeLeft = axes?.left?.scaleType;\n\tconst axesScaleTypeRight = axes?.right?.scaleType;\n\tconst axesScaleTypeTop = axes?.top?.scaleType;\n\tconst axesScaleTypeBottom = axes?.bottom?.scaleType;\n\n\tconst [shouldRender, setShouldRender] = useState(true);\n\n\tuseEffect(() => {\n\t\t// force re-render for things affecting layout\n\t\tsetShouldRender(false);\n\t\tsetTimeout(() => setShouldRender(true));\n\t}, [\n\t\tlegendPosition,\n\t\tlegendClickable,\n\t\taxesScaleTypeLeft,\n\t\taxesScaleTypeRight,\n\t\taxesScaleTypeTop,\n\t\taxesScaleTypeBottom\n\t]);\n\n\tif (!chart || !chart.data) { return <SkeletonPlaceholder />; }\n\tchartOptions.title = chart.title;\n\tconst chartData = chart.data;\n\tconst chartTheme = chartOptions.theme;\n\n\tconst getChartType = (type: any) => {\n\t\tswitch (type) {\n\t\t\tcase 'simple-bar-chart':\n\t\t\t\treturn (\n\t\t\t\t\t<div className={chartTheme}>\n\t\t\t\t\t\t<SimpleBarChart data={chartData} options={chartOptions} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\tcase 'grouped-bar-chart':\n\t\t\t\treturn (\n\t\t\t\t\t<div className={chartTheme}>\n\t\t\t\t\t\t<GroupedBarChart data={chartData} options={chartOptions} />\n\t\t\t\t\t</div>);\n\t\t\tcase 'stacked-bar-chart':\n\t\t\t\treturn (\n\t\t\t\t\t<div className={chartTheme}>\n\t\t\t\t\t\t<StackedBarChart data={chartData} options={chartOptions} />\n\t\t\t\t\t</div>);\n\t\t\tcase 'line-chart':\n\t\t\t\treturn (\n\t\t\t\t\t<div className={chartTheme}>\n\t\t\t\t\t\t<LineChart data={chartData} options={chartOptions} />\n\t\t\t\t\t</div>);\n\t\t\tcase 'area-chart':\n\t\t\t\treturn (\n\t\t\t\t\t<div className={chartTheme}>\n\t\t\t\t\t\t<AreaChart data={chartData} options={chartOptions} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\tcase 'stacked-area-chart':\n\t\t\t\treturn (\n\t\t\t\t\t<div className={chartTheme}>\n\t\t\t\t\t\t<StackedAreaChart data={chartData} options={chartOptions} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\tcase 'scatter-chart':\n\t\t\t\treturn (\n\t\t\t\t\t<div className={chartTheme}>\n\t\t\t\t\t\t<ScatterChart data={chartData} options={chartOptions} />\n\t\t\t\t\t</div>);\n\t\t\tcase 'pie-chart':\n\t\t\t\treturn (\n\t\t\t\t\t<div className={chartTheme}>\n\t\t\t\t\t\t<PieChart data={chartData} options={chartOptions} />\n\t\t\t\t\t</div>);\n\t\t\tcase 'donut-chart':\n\t\t\t\treturn (\n\t\t\t\t\t<div className={chartTheme}>\n\t\t\t\t\t\t<DonutChart data={chartData} options={chartOptions} />\n\t\t\t\t\t</div>);\n\t\t\tdefault:\n\t\t\t\treturn <h3>This chart could not be properly displayed.</h3>;\n\t\t}\n\t};\n\n\treturn (\n\t\tshouldRender\n\t\t\t? <div className={chartWrapperStyle}>\n\t\t\t\t{getChartType(chart.type)}\n\t\t\t</div>\n\t\t\t: <div className={chartWrapperStyle}>\n\t\t\t\t<div className={chartTheme}>\n\t\t\t\t\t<div className='chart-holder bx--chart-holder' style={{ height: '533px' }}>\n\t\t\t\t\tBlink!\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t);\n};\n","// TODO: Delete this when the carbon grid components are actually available\nimport React, { PropsWithChildren } from 'react';\nimport { cx } from 'emotion';\n\nexport type RowProps = PropsWithChildren<{\n\tstyles?: any\n}>;\n\nexport const Row = ({ styles, children }: RowProps) => (\n\t<div className={cx('bx--row', styles)}>{children}</div>\n);\n\nexport interface ColDefinition {\n\tsm?: number;\n\tmd?: number;\n\tlg?: number;\n}\n\nexport type ColProps = PropsWithChildren<{\n\tcols?: ColDefinition,\n\trender?: (props: PropsWithChildren<any>) => JSX.Element\n}>;\n\nexport const Col = ({ cols, render, children }: ColProps) => {\n\tconst baseRender = render ?? ((props) => <div {...props} />);\n\tconst classes = cx({\n\t\t[`bx--col-sm-${cols?.sm}`]: !!cols?.sm ?? false,\n\t\t[`bx--col-md-${cols?.md}`]: !!cols?.md ?? false,\n\t\t[`bx--col-lg-${cols?.lg}`]: !!cols?.lg ?? false,\n\t\t'bx--col': !!cols\n\t});\n\treturn baseRender({\n\t\tclassName: classes,\n\t\tchildren\n\t});\n};\n","import React, { createContext, useReducer } from 'react';\n\nconst ModalContext: React.Context<any> = createContext({});\n\nModalContext.displayName = 'ModalContext';\n\nexport enum ModalActionType {\n\tsetDuplicationModal,\n\tsetDeletionModal,\n\tsetShareModal,\n\tsetSettingsModal,\n\tsetExportModal,\n\tcloseModal\n}\n\nexport enum ModalType {\n\tDUPLICATION,\n\tDELETION,\n\tSHARING,\n\tSETTINGS,\n\tEXPORT\n}\n\nexport type ModalAction = BaseModalAction\n\nexport interface BaseModalAction {\n\ttype: ModalActionType,\n\tid: string\n}\n\nexport interface ModalState {\n\tShowModal: boolean,\n\tModalType: any,\n\tChartID: string\n}\n\nconst initialState = {\n\tShowModal: false,\n\tModalType: null,\n\tChartID: ''\n};\n\nconst modalReducer = (state: ModalState, action: BaseModalAction) => {\n\tswitch(action.type) {\n\t\tcase ModalActionType.setDuplicationModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.DUPLICATION,\n\t\t\t\tChartID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setDeletionModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.DELETION,\n\t\t\t\tChartID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setShareModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.SHARING,\n\t\t\t\tChartID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setSettingsModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.SETTINGS,\n\t\t\t\tChartID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setExportModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.EXPORT,\n\t\t\t\tChartID: action.id\n\t\t\t};\n\t\tcase ModalActionType.closeModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst ModalContextProvider = ({ children }: any) => {\n\tconst modal = useReducer(modalReducer, initialState);\n\n\treturn (\n\t\t<ModalContext.Provider value={modal}>\n\t\t\t{children}\n\t\t</ModalContext.Provider>\n\t);\n};\n\nexport {\n\tModalContext,\n\tModalContextProvider\n};\n","import React, { useContext } from 'react';\nimport { InlineNotification, NotificationActionButton } from 'carbon-components-react';\nimport {\n\tNotificationContext,\n\tNotificationActionType,\n\tNotificationData\n} from '../context/notification-context';\nimport { css } from 'emotion';\n\nconst notificationStyle = { minWidth: '30rem' };\n\nconst notificationAreaStyle = css`\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tposition: absolute;\n\tz-index: 2;\n\tmin-width: 30rem;\n\ttop: 2rem;\n`;\n\nexport const Notification = () => {\n\tconst [state, dispatch] = useContext(NotificationContext);\n\treturn (\n\t\t<div className={notificationAreaStyle} role=\"alert\">\n\t\t\t{state.notifications.map((notification: NotificationData, index: number) => (\n\t\t\t\t<InlineNotification\n\t\t\t\t\tlowContrast\n\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\tkind={notification.kind}\n\t\t\t\t\ttitle={notification.title}\n\t\t\t\t\tsubtitle={notification.message}\n\t\t\t\t\tcaption={null}\n\t\t\t\t\tkey={notification.id}\n\t\t\t\t\tonCloseButtonClick={() => {\n\t\t\t\t\t\tif (notification.action) {\n\t\t\t\t\t\t\tnotification.action.onNotificationClose();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: NotificationActionType.REMOVE_NOTIFICATION,\n\t\t\t\t\t\t\tdata: notification\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={notificationStyle}\n\t\t\t\t\tactions={notification.action\n\t\t\t\t\t\t? <NotificationActionButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tnotification.action.actionFunction();\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: NotificationActionType.REMOVE_NOTIFICATION,\n\t\t\t\t\t\t\t\t\tdata: notification\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{notification.action.actionText}\n\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t: undefined}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport domtoimage from 'dom-to-image';\nimport ReactDOM from 'react-dom';\nimport { Chart } from '../components';\n\nexport const restoreChartData = (chartData: any) => (\n\tchartData.map((datapoint: any) => ({\n\t\t...datapoint,\n\t\tdate: new Date(datapoint.date)\n\t}))\n);\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport interface RenderProps {\n\tid: string,\n\tname: string,\n\twidth?: number,\n\theight?: number,\n\tformat?: string,\n\tpreview?: { // only sent for preview\n\t\tformat?: string, // optional\n\t\twidth: number,\n\t\theight: number\n\t}\n}\n\nexport const getChartPreview = async(chart: any, props: RenderProps) => {\n\tconst element = document.createElement('div');\n\telement.className = 'render-preview';\n\tchart.options.rawChartOptions.height = `${props.height || 400}px`;\n\tchart.options.rawChartOptions.animations = false;\n\n\t(element as HTMLElement).style.position = 'absolute';\n\t(element as HTMLElement).style.top = '0';\n\t(element as HTMLElement).style.left = '0';\n\t(element as HTMLElement).style.zIndex = '-1';\n\t(element as HTMLElement).style.width = `${props.width || 800}px`;\n\t(element as HTMLElement).style.height = `${props.height || 400}px`;\n\t(element as HTMLElement).style.minHeight = `${props.height || 400}px`;\n\tReactDOM.render(React.createElement(Chart, {chart}), element);\n\tdocument.body.appendChild(element);\n\n\tawait sleep(100); // wait for render to finish\n\t\n\tconst imageBlob = await domtoimage.toBlob(element as Node);\n\t(element as HTMLElement).remove();\n\treturn imageBlob;\n};\nexport const getGroupNames = (chartData: any[]) => {\n\tif (!chartData) {\n\t\treturn [];\n\t}\n\n\treturn chartData\n\t\t.map((datapoint: any) => datapoint.group)\n\t\t.filter((groupName: string, index: number, self: any) => self.indexOf(groupName) === index);\n};\n","import React, {\n\tuseState,\n\tuseEffect\n} from 'react';\nimport { css, cx } from 'emotion';\nimport {\n\tAccordion,\n\tAccordionItem,\n\tButton,\n\tCheckbox,\n\tContentSwitcher,\n\tFormGroup,\n\tNumberInput,\n\tSelect,\n\tSelectItem,\n\tSwitch,\n\tTextInput,\n\tTooltip\n} from 'carbon-components-react';\nimport capitalize from 'lodash/capitalize';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport { getGroupNames, restoreChartData } from '../utils/chart-tools';\n\n\nconst inputWrap = css`\n\tmargin-bottom: 1rem;\n`;\n\nconst accordionCss = css`\n\tborder-right: 1px solid #D6D6D6;\n    max-width: 256px;\n    display: inline-block;\n\n\t.bx--accordion__item--active .bx--accordion__content {\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ChartOptionsPane = ({ chart, setChart }: any) => {\n\tconst [state, setState] = useState<any>({\n\t\tXAxisContentSwitch: null,\n\t\tYAxisContentSwitch: null\n\t});\n\n\tconst [overrideVariantsCount, doSetOverrideVariantsCount] = useState(false);\n\n\tconst setOverrideVariantsCount = (override: boolean) => {\n\t\tif (!override) {\n\t\t\tconst updatedChart = JSON.parse(JSON.stringify(chart));\n\t\t\tdelete updatedChart.options?.rawChartOptions?.color?.pairing?.numberOfVariants;\n\n\t\t\tsetChart(updatedChart);\n\t\t}\n\n\t\tdoSetOverrideVariantsCount(override);\n\t};\n\n\tconst getFieldValue = (id: string, defaultValue: any) => {\n\t\tconst inputID = Array.isArray(id) ? id : id.split('-');\n\t\tif (id !== 'title' && id !== 'type') {\n\t\t\tinputID.unshift('options', 'rawChartOptions');\n\t\t}\n\t\t// Cannot use lodash get with default value because existance of null values in chart data\n\t\tconst value = get(chart, inputID);\n\t\treturn value !== undefined ? value : defaultValue;\n\t};\n\n\tconst getVariantCount = () => {\n\t\tconst fv = Number(getFieldValue('color-pairing-numberOfVariants', 0));\n\n\t\tif (!overrideVariantsCount || !fv) {\n\t\t\treturn getGroupNames(chart.data).length;\n\t\t}\n\n\t\treturn fv;\n\t};\n\n\tconst getPaletteOptions = () => {\n\t\tlet optionCount = 1;\n\n\t\tswitch (getVariantCount()) {\n\t\t\tcase 1:\n\t\t\t\toptionCount = 4;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\toptionCount = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\toptionCount = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 4:\n\t\t\t\toptionCount = 3;\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\t\toptionCount = 2;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\toptionCount = 1;\n\t\t}\n\n\t\treturn Array(optionCount).fill(0).map((_: any, index: number) => index + 1);\n\t};\n\n\tuseEffect(() => {\n\t\tconst numberOfVariants = Number(getFieldValue('color-pairing-numberOfVariants', 0));\n\n\t\tif (numberOfVariants && getGroupNames(chart.data).length !== numberOfVariants) {\n\t\t\tsetOverrideVariantsCount(true);\n\t\t}\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [chart]);\n\n\tconst setStacked = (axes: any, stacked: boolean) => {\n\t\tif (axes?.left\n\t\t\t&& (axes?.left.scaleType === 'linear'\n\t\t\t\t|| axes?.left.scaleType === 'log')) {\n\t\t\taxes.left = {\n\t\t\t\t...axes.left,\n\t\t\t\tstacked\n\t\t\t};\n\t\t}\n\t\tif (axes?.right\n\t\t\t&& (axes?.right.scaleType === 'linear'\n\t\t\t\t|| axes?.right.scaleType === 'log')) {\n\t\t\taxes.right = {\n\t\t\t\t...axes.right,\n\t\t\t\tstacked\n\t\t\t};\n\t\t}\n\t\tif (axes?.top\n\t\t\t&& (axes?.top.scaleType === 'linear'\n\t\t\t\t|| axes?.top.scaleType === 'log')) {\n\t\t\taxes.top = {\n\t\t\t\t...axes.top,\n\t\t\t\tstacked\n\t\t\t};\n\t\t}\n\t\tif (axes?.bottom\n\t\t\t&& (axes?.bottom.scaleType === 'linear'\n\t\t\t\t|| axes?.bottom.scaleType === 'log')) {\n\t\t\taxes.bottom = {\n\t\t\t\t...axes.bottom,\n\t\t\t\tstacked\n\t\t\t};\n\t\t}\n\t};\n\n\t// eslint-disable-next-line complexity\n\tconst handleChange = (inputID: string, inputValue: any) => {\n\t\tif (!chart.options || !inputID) { return; }\n\t\tconst objectPath = inputID.split('-');\n\t\tif (inputID !== 'title' && inputID !== 'type') {\n\t\t\tobjectPath.unshift('options', 'rawChartOptions');\n\t\t}\n\n\t\tlet updatedChart = {\n\t\t\t...set(JSON.parse(JSON.stringify(chart)), objectPath, inputValue),\n\t\t\tdata: restoreChartData(chart.data)\n\t\t};\n\n\t\tif (inputID === 'type') {\n\t\t\t// When switching to a grouped bar chart, the bottom axis needs\n\t\t\t// to have a scaleType of `labels`.\n\t\t\tif (inputValue === 'grouped-bar-chart') {\n\t\t\t\tupdatedChart.options.rawChartOptions.axes.bottom = {\n\t\t\t\t\t...updatedChart.options.rawChartOptions.axes.bottom,\n\t\t\t\t\tscaleType: 'labels'\n\t\t\t\t};\n\t\t\t}\n\t\t\t// When switching to a stacked bar chart, the left axis needs\n\t\t\t// to have stacked be `true`, to prevent the bar from going beyond\n\t\t\t// the container.\n\t\t\tsetStacked(updatedChart.options.rawChartOptions.axes, inputValue.includes('stacked'));\n\t\t}\n\t\t// If scale type is changed, this automatically maps data to the correct datapoint key.\n\t\tif (inputID.endsWith('-scaleType')) {\n\t\t\tif (inputValue === 'none') {\n\t\t\t\t// remove the axis\n\t\t\t\tif (inputID.startsWith('axes-left')) {\n\t\t\t\t\tdelete updatedChart.options.rawChartOptions.axes.left;\n\t\t\t\t} else if (inputID.startsWith('axes-right')) {\n\t\t\t\t\tdelete updatedChart.options.rawChartOptions.axes.right;\n\t\t\t\t} else if (inputID.startsWith('axes-top')) {\n\t\t\t\t\tdelete updatedChart.options.rawChartOptions.axes.top;\n\t\t\t\t} else if (inputID.startsWith('axes-bottom')) {\n\t\t\t\t\tdelete updatedChart.options.rawChartOptions.axes.bottom;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst mapsToPath = [...objectPath];\n\t\t\t\tmapsToPath.splice(mapsToPath.length - 1, 1, 'mapsTo');\n\n\t\t\t\tif (chart.type.includes('stacked')) {\n\t\t\t\t\tconst { axes } = updatedChart.options.rawChartOptions;\n\t\t\t\t\tif (axes?.left?.scaleType === 'linear' || axes?.left?.scaleType === 'log') {\n\t\t\t\t\t\taxes.left = {\n\t\t\t\t\t\t\t...axes.left,\n\t\t\t\t\t\t\tstacked: true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif (axes?.right?.scaleType === 'linear' || axes?.right?.scaleType === 'log') {\n\t\t\t\t\t\taxes.right = {\n\t\t\t\t\t\t\t...axes.right,\n\t\t\t\t\t\t\tstacked: true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif (axes?.top?.scaleType === 'linear' || axes?.top?.scaleType === 'log') {\n\t\t\t\t\t\taxes.top = {\n\t\t\t\t\t\t\t...axes.top,\n\t\t\t\t\t\t\tstacked: true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif (axes?.bottom?.scaleType === 'linear' || axes?.bottom?.scaleType === 'log') {\n\t\t\t\t\t\taxes.bottom = {\n\t\t\t\t\t\t\t...axes.bottom,\n\t\t\t\t\t\t\tstacked: true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet mapsTo;\n\t\t\t\tswitch (inputValue) {\n\t\t\t\t\tcase 'time':\n\t\t\t\t\t\tmapsTo = 'date';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'labels':\n\t\t\t\t\t\tmapsTo = 'key';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'linear':\n\t\t\t\t\tcase 'log':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmapsTo = 'value';\n\t\t\t\t}\n\n\t\t\t\tupdatedChart = { ...set(updatedChart, mapsToPath, mapsTo) };\n\t\t\t}\n\t\t}\n\t\tsetChart(updatedChart);\n\t};\n\n\tconst getNoneAxisOption = (axisType: string) => {\n\t\tconst axes = chart?.options?.rawChartOptions?.axes;\n\n\t\tswitch (axisType) {\n\t\t\tcase 'top':\n\t\t\tcase 'bottom':\n\t\t\t\tif (axes?.top && axes?.bottom) {\n\t\t\t\t\treturn <SelectItem text='None' value='none' />;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'left':\n\t\t\tcase 'right':\n\t\t\t\tif (axes?.left && axes?.right) {\n\t\t\t\t\treturn <SelectItem text='None' value='none' />;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst changeOrientation = () => {\n\t\tconst { axes } = chart.options.rawChartOptions;\n\t\tconst updatedChart = {\n\t\t\t...chart,\n\t\t\toptions: {\n\t\t\t\t...chart.options,\n\t\t\t\trawChartOptions: {\n\t\t\t\t\t...chart.options.rawChartOptions,\n\t\t\t\t\taxes: {\n\t\t\t\t\t\tleft: axes.bottom ? { ...axes.bottom } : null,\n\t\t\t\t\t\tbottom: axes.left ? { ...axes.left } : null,\n\t\t\t\t\t\ttop: axes.right ? { ...axes.right } : null,\n\t\t\t\t\t\tright: axes.top ? { ...axes.top } : null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// we don't want the empty axes in the options\n\t\tif (updatedChart.options.rawChartOptions.axes.left === null) {\n\t\t\tdelete updatedChart.options.rawChartOptions.axes.left;\n\t\t}\n\t\tif (updatedChart.options.rawChartOptions.axes.right === null) {\n\t\t\tdelete updatedChart.options.rawChartOptions.axes.right;\n\t\t}\n\t\tif (updatedChart.options.rawChartOptions.axes.top === null) {\n\t\t\tdelete updatedChart.options.rawChartOptions.axes.top;\n\t\t}\n\t\tif (updatedChart.options.rawChartOptions.axes.bottom === null) {\n\t\t\tdelete updatedChart.options.rawChartOptions.axes.bottom;\n\t\t}\n\n\t\tsetChart(updatedChart);\n\t};\n\n\tconst SwitchAxisType = (axisType: string) => (\n\t\t<>\n\t\t\t<TextInput\n\t\t\t\tclassName={inputWrap}\n\t\t\t\tid={`axes-${axisType}-title`}\n\t\t\t\tlabelText={capitalize(`${axisType} axis title`)}\n\t\t\t\tonChange={onChange}\n\t\t\t\tplaceholder={`${axisType} axis title`}\n\t\t\t\ttype='text'\n\t\t\t\tdefaultValue={getFieldValue(`axes-${axisType}-title`, '')} />\n\t\t\t<Select\n\t\t\t\tclassName={inputWrap}\n\t\t\t\tvalue={getFieldValue(`axes-${axisType}-scaleType`, 'default')}\n\t\t\t\tid={`axes-${axisType}-scaleType`}\n\t\t\t\tlabelText='Scale type'\n\t\t\t\tonChange={onChange}>\n\t\t\t\t<SelectItem disabled text='Choose...' value='default' key='default' />\n\t\t\t\t{ getNoneAxisOption(axisType) }\n\t\t\t\t<SelectItem text='Linear' value='linear' />\n\t\t\t\t<SelectItem text='Time' value='time' />\n\t\t\t\t<SelectItem text='Log' value='log' />\n\t\t\t\t<SelectItem text='Labels' value='labels' />\n\t\t\t</Select>\n\t\t\t<Select\n\t\t\t\tclassName={inputWrap}\n\t\t\t\tvalue={getFieldValue(`axes-${axisType}-mapsTo`, 'default')}\n\t\t\t\tid={`axes-${axisType}-mapsTo`}\n\t\t\t\tlabelText='Map data to'\n\t\t\t\tonChange={onChange}>\n\t\t\t\t<SelectItem disabled text='Choose...' value='default' key='default' />\n\t\t\t\t<SelectItem text='Key' value='key' />\n\t\t\t\t<SelectItem text='Group' value='group' />\n\t\t\t\t<SelectItem text='Value' value='value' />\n\t\t\t\t<SelectItem text='Date' value='date' />\n\t\t\t</Select>\n\t\t</>\n\t);\n\n\tconst onChange = (event: any) => {\n\t\tif (event.imaginaryTarget) {\n\t\t\thandleChange(event.imaginaryTarget.id, event.imaginaryTarget.value);\n\t\t} else {\n\t\t\thandleChange(event.target.id, event.target.value);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Accordion\n\t\t\taria-label={chart && chart.title\n\t\t\t\t? `Modify options for '${chart.title}'`\n\t\t\t\t: 'Side navigation'\n\t\t\t}\n\t\t\tclassName={`${accordionCss}`}>\n\t\t\t<AccordionItem title='General'>\n\t\t\t\t<FormGroup style={{\n\t\t\t\t\tmarginLeft: '1rem',\n\t\t\t\t\tmarginRight: '1rem',\n\t\t\t\t\tmarginTop: '2rem'\n\t\t\t\t}}\n\t\t\t\tlegendText=''>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\tid='title'\n\t\t\t\t\t\tlabelText='Chart Title'\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\tplaceholder='Chart Title'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tdefaultValue={getFieldValue('title', '')} />\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\tvalue={getFieldValue('theme', 'default')}\n\t\t\t\t\t\tid='theme'\n\t\t\t\t\t\tlabelText='Theme'\n\t\t\t\t\t\tonChange={onChange}>\n\t\t\t\t\t\t<SelectItem text='White' value='default' key='default' />\n\t\t\t\t\t\t<SelectItem text='G100' value='g100' />\n\t\t\t\t\t\t<SelectItem text='G90' value='g90' />\n\t\t\t\t\t\t<SelectItem text='G10' value='g10' />\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\tvalue={getFieldValue('type', 'default')}\n\t\t\t\t\t\tid='type'\n\t\t\t\t\t\tlabelText='Type'\n\t\t\t\t\t\tonChange={onChange}>\n\t\t\t\t\t\t<SelectItem\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\ttext='Choose...'\n\t\t\t\t\t\t\tvalue='default'\n\t\t\t\t\t\t\tkey='default' />\n\t\t\t\t\t\t<SelectItem text='Simple bar chart' value='simple-bar-chart' />\n\t\t\t\t\t\t<SelectItem text='Grouped bar chart' value='grouped-bar-chart' />\n\t\t\t\t\t\t<SelectItem text='Stacked bar chart' value='stacked-bar-chart' />\n\t\t\t\t\t\t<SelectItem text='Scatter chart' value='scatter-chart' />\n\t\t\t\t\t\t<SelectItem text='Line chart' value='line-chart' />\n\t\t\t\t\t\t<SelectItem text='Area chart' value='area-chart' />\n\t\t\t\t\t\t<SelectItem text='Stacked area chart' value='stacked-area-chart' />\n\t\t\t\t\t\t<SelectItem text='Donut chart' value='donut-chart' />\n\t\t\t\t\t\t<SelectItem text='Pie chart' value='pie-chart' />\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\tid='animations'\n\t\t\t\t\t\tlabelText='Animations'\n\t\t\t\t\t\tchecked={getFieldValue('animations', false)}\n\t\t\t\t\t\tonChange={(event: any) => handleChange('animations', event)} />\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\tid='tooltip-enabled'\n\t\t\t\t\t\tlabelText='Tooltips'\n\t\t\t\t\t\tchecked={getFieldValue('tooltip-enabled', true)}\n\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t(event: any) => handleChange('tooltip-enabled', event)}\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\t(chart.type === 'line-chart'\n\t\t\t\t\t\t|| chart.type === 'area-chart'\n\t\t\t\t\t\t|| chart.type === 'stacked-area-chart')\n\t\t\t\t\t\t&& <Select\n\t\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\t\tvalue={getFieldValue('curve', 'curveLinear')}\n\t\t\t\t\t\t\tid='curve'\n\t\t\t\t\t\t\tlabelText='Curve'\n\t\t\t\t\t\t\tonChange={onChange}>\n\t\t\t\t\t\t\t<SelectItem text='Linear' value='curveLinear' />\n\t\t\t\t\t\t\t<SelectItem text='Linear closed' value='curveLinearClosed' />\n\t\t\t\t\t\t\t<SelectItem text='Basis' value='curveBasis' />\n\t\t\t\t\t\t\t<SelectItem text='Basis closed' value='curveBasisClosed' />\n\t\t\t\t\t\t\t<SelectItem text='Basis open' value='curveBasisOpen' />\n\t\t\t\t\t\t\t<SelectItem text='Bundle' value='curveBundle' />\n\t\t\t\t\t\t\t<SelectItem text='Cardinal' value='curveCardinal' />\n\t\t\t\t\t\t\t<SelectItem text='Cardinal closed' value='curveCardinalClosed' />\n\t\t\t\t\t\t\t<SelectItem text='Cardinal open' value='curveCardinalOpen' />\n\t\t\t\t\t\t\t<SelectItem text='Catmull rom' value='curveCatmullRom' />\n\t\t\t\t\t\t\t{/* eslint-disable-next-line max-len */}\n\t\t\t\t\t\t\t<SelectItem text='Catmull rom closed' value='curveCatmullRomClosed' />\n\t\t\t\t\t\t\t<SelectItem text='Catmull rom open' value='curveCatmullRomOpen' />\n\t\t\t\t\t\t\t<SelectItem text='Monotone X' value='curveMonotoneX' />\n\t\t\t\t\t\t\t<SelectItem text='Monotone Y' value='curveMonotoneY' />\n\t\t\t\t\t\t\t<SelectItem text='Natural' value='curveNatural' />\n\t\t\t\t\t\t\t<SelectItem text='Step' value='curveStep' />\n\t\t\t\t\t\t\t<SelectItem text='Step after' value='curveStepAfter' />\n\t\t\t\t\t\t\t<SelectItem text='Step before' value='curveStepBefore' />\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tchart.type !== 'donut-chart'\n\t\t\t\t\t\t&& chart.type !== 'pie-chart'\n\t\t\t\t\t\t&& <Button onClick={changeOrientation}>Change orientation</Button>\n\t\t\t\t\t}\n\t\t\t\t</FormGroup>\n\t\t\t</AccordionItem>\n\t\t\t<AccordionItem title='Colors'>\n\t\t\t\t<FormGroup style={{\n\t\t\t\t\tmarginLeft: '1rem',\n\t\t\t\t\tmarginRight: '1rem',\n\t\t\t\t\tmarginTop: '2rem'\n\t\t\t\t}}\n\t\t\t\tlegendText=''>\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\ttriggerText='Number of variants'\n\t\t\t\t\t\tdirection='top'>\n\t\t\t\t\t\t\tNumber of distinct colors in the palette.\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<div className={css`\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tflex-direction: row;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tmargin-top: 7px;\n\t\t\t\t\t`}>\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tclassName={cx([\n\t\t\t\t\t\t\t\tinputWrap,\n\t\t\t\t\t\t\t\tcss`input[type=number] { min-width: 120px }`\n\t\t\t\t\t\t\t])}\n\t\t\t\t\t\t\tid='color-pairing-numberOfVariants'\n\t\t\t\t\t\t\tlabel=''\n\t\t\t\t\t\t\tdisabled={!overrideVariantsCount}\n\t\t\t\t\t\t\tmin={getGroupNames(chart.data).length}\n\t\t\t\t\t\t\tmax={14}\n\t\t\t\t\t\t\tvalue={getVariantCount()}\n\t\t\t\t\t\t\tonChange={onChange} />\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\t\tid='override-color-variants'\n\t\t\t\t\t\t\tlabelText='Override'\n\t\t\t\t\t\t\tchecked={overrideVariantsCount}\n\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t(event: any) => setOverrideVariantsCount(event)\n\t\t\t\t\t\t\t} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\tvalue={getFieldValue('color-pairing-option', 1)}\n\t\t\t\t\t\tid='color-pairing-option'\n\t\t\t\t\t\tlabelText='Palette option'\n\t\t\t\t\t\tonChange={onChange}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgetPaletteOptions().map((value) =>\n\t\t\t\t\t\t\t\t<SelectItem\n\t\t\t\t\t\t\t\t\ttext={value.toString()}\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\tkey={value} />)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormGroup>\n\t\t\t</AccordionItem>\n\t\t\t<AccordionItem title='X axis'>\n\t\t\t\t<FormGroup style={{\n\t\t\t\t\tmarginLeft: '1rem',\n\t\t\t\t\tmarginRight: '1rem',\n\t\t\t\t\tmarginTop: '2rem'\n\t\t\t\t}}\n\t\t\t\tlegendText=''>\n\t\t\t\t\t<ContentSwitcher\n\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t(event: any) => setState({ XAxisContentSwitch: event.name })\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectedIndex={0}>\n\t\t\t\t\t\t<Switch name='top' text='Top' />\n\t\t\t\t\t\t<Switch name='bottom' text='Bottom' />\n\t\t\t\t\t</ContentSwitcher>\n\t\t\t\t\t{SwitchAxisType(\n\t\t\t\t\t\tstate.XAxisContentSwitch ? state.XAxisContentSwitch : 'top'\n\t\t\t\t\t)}\n\t\t\t\t</FormGroup>\n\t\t\t</AccordionItem>\n\t\t\t<AccordionItem title='Y axis'>\n\t\t\t\t<FormGroup style={{\n\t\t\t\t\tmarginLeft: '1rem',\n\t\t\t\t\tmarginRight: '1rem',\n\t\t\t\t\tmarginTop: '2rem'\n\t\t\t\t}}\n\t\t\t\tlegendText=''>\n\t\t\t\t\t<ContentSwitcher\n\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t(event: any) => setState({ YAxisContentSwitch: event.name })\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectedIndex={0}>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tname='left'\n\t\t\t\t\t\t\ttext='Left'>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t<Switch name='right' text='Right'>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</ContentSwitcher>\n\t\t\t\t\t{SwitchAxisType(state.YAxisContentSwitch\n\t\t\t\t\t\t? state.YAxisContentSwitch : 'left')}\n\t\t\t\t</FormGroup>\n\t\t\t</AccordionItem>\n\t\t\t<AccordionItem title='Legend'>\n\t\t\t\t<FormGroup style={{\n\t\t\t\t\tmarginLeft: '1rem',\n\t\t\t\t\tmarginRight: '1rem',\n\t\t\t\t\tmarginTop: '2rem'\n\t\t\t\t}}\n\t\t\t\tlegendText=''>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\tvalue={getFieldValue('legend-position', 'default')}\n\t\t\t\t\t\tid='legend-position'\n\t\t\t\t\t\tlabelText='Choose legend position'\n\t\t\t\t\t\tonChange={onChange}>\n\t\t\t\t\t\t<SelectItem\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\ttext='Choose...'\n\t\t\t\t\t\t\tvalue='default'\n\t\t\t\t\t\t\tkey='default' />\n\t\t\t\t\t\t<SelectItem text='Left' value='left' />\n\t\t\t\t\t\t<SelectItem text='Right' value='right' />\n\t\t\t\t\t\t<SelectItem text='Top' value='top' />\n\t\t\t\t\t\t<SelectItem text='Bottom' value='bottom' />\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tclassName={inputWrap}\n\t\t\t\t\t\tid='legend-clickable'\n\t\t\t\t\t\tlabelText='Clickable'\n\t\t\t\t\t\tchecked={getFieldValue('legend-clickable', true)}\n\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t(event: any) => {\n\t\t\t\t\t\t\t\thandleChange('legend-clickable', event.target.checked);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} />\n\t\t\t\t</FormGroup>\n\t\t\t</AccordionItem>\n\t\t</Accordion>\n\t);\n};\n","import React, {\n\tcreateContext,\n\tuseReducer,\n\tuseEffect\n} from 'react';\nimport assign from 'lodash/assign';\n\nconst ChartsContext: React.Context<any> = createContext(null);\nChartsContext.displayName = 'ChartsContext';\n\nexport enum ChartActionType {\n\tADD_ONE,\n\tFETCH_ONE,\n\tTOGGLE_VISIBILITY,\n\tREMOVE_CHART,\n\tREMOVE_CHARTS,\n\tUPDATE_ALL,\n\tUPDATE_ONE\n}\n\nexport type ChartAction =\n\tChartActionAddOne |\n\tChartActionFetchOne |\n\tChartActionRemoveChart |\n\tChartActionToggleVisibility |\n\tChartActionRemoveCharts |\n\tChartActionUpdateAll |\n\tChartActionUpdateOne;\n\nexport interface BaseChartAction {\n\ttype: ChartActionType\n\tloaded: boolean;\n}\n\nexport interface ChartActionAddOne extends BaseChartAction {\n\ttype: ChartActionType.ADD_ONE;\n\tdata: any;\n}\n\nexport interface ChartActionFetchOne extends BaseChartAction {\n\ttype: ChartActionType.FETCH_ONE;\n\tdata: any;\n}\n\nexport interface ChartActionRemoveChart extends BaseChartAction {\n\ttype: ChartActionType.REMOVE_CHART;\n\tid: string;\n}\n\nexport interface ChartActionToggleVisibility extends BaseChartAction {\n\ttype: ChartActionType.TOGGLE_VISIBILITY;\n\tid: string;\n\thidden: boolean;\n}\n\nexport interface ChartActionRemoveCharts extends BaseChartAction {\n\ttype: ChartActionType.REMOVE_CHARTS;\n\tids: string[];\n}\n\nexport interface ChartActionUpdateAll extends BaseChartAction {\n\ttype: ChartActionType.UPDATE_ALL;\n\tdata: any;\n}\n\nexport interface ChartActionUpdateOne extends BaseChartAction {\n\ttype: ChartActionType.UPDATE_ONE;\n\tdata: any;\n}\n\nexport interface ChartState {\n\tcurrentId: string | null,\n\tcharts: any[],\n\tloaded: boolean\n}\n\nexport const useFetchOne = (id: number, dispatch: any) => {\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: ChartActionType.FETCH_ONE,\n\t\t\tdata: id\n\t\t});\n\t}, [dispatch, id]);\n};\n\nconst updateOne = (\n\tstate: ChartState,\n\taction: ChartActionUpdateOne\n) => {\n\tif (!state.charts.length) {\n\t\treturn {\n\t\t\tcharts: [action.data],\n\t\t\tloaded: action.loaded,\n\t\t\tcurrentId: action.data.id\n\t\t};\n\t}\n\tconst updatedChartState = state.charts.map((chart: any) => {\n\t\tif (chart.id === action.data.id) {\n\t\t\t// Cannot use merge because removing datasets or labels will not\n\t\t\t// work since it keeps the values, while assign overwrites past values.\n\t\t\treturn assign({}, chart, action.data);\n\t\t}\n\t\treturn chart;\n\t});\n\n\treturn {\n\t\t...state,\n\t\tcharts: updatedChartState,\n\t\tloaded: action.loaded,\n\t\tcurrentId: action.data.id\n\t};\n};\n\nconst chartsReducer = (state: ChartState, action: ChartAction) => {\n\tswitch (action.type) {\n\t\tcase ChartActionType.FETCH_ONE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentId: action.data,\n\t\t\t\tloaded: true\n\t\t\t};\n\t\tcase ChartActionType.UPDATE_ALL: {\n\t\t\tif (!state.charts || !state.charts.length) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcharts: action.data,\n\t\t\t\t\tloaded: action.loaded,\n\t\t\t\t\tcurrentId: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Remove charts which are in the original state but not in the payload.\n\t\t\tconst filteredCharts = state.charts\n\t\t\t\t.filter((chart: any) => action.data.some((actionChart: any) => actionChart.id === chart.id));\n\t\t\t// If charts already exist in the state, we need to merge any changes to the charts with\n\t\t\t// the current matching charts and add any new charts (if any) to the state.\n\t\t\tconst mergedCharts = filteredCharts.map((chart: any) => {\n\t\t\t// Find the chart in the payload containing the same id as the current state's charts\n\t\t\t// to merge updated changes with.\n\t\t\t\tconst updatedChart = action.data.find((actionChart: any) => chart.id === actionChart.id);\n\t\t\t\t// Can not use merge because removing datasets or labels will not\n\t\t\t\t// work since it keeps the values, while assign overwrites past values.\n\t\t\t\treturn assign({}, chart, updatedChart);\n\t\t\t});\n\t\t\t// Adds any charts in the payload which do not match any id in the current state's charts.\n\t\t\tconst updatedCharts = mergedCharts\n\t\t\t\t.concat(action.data.filter((actionChart: any) => (\n\t\t\t\t\tstate.charts.every((chart: any) => chart.id !== actionChart.id)\n\t\t\t\t)));\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcharts: updatedCharts,\n\t\t\t\tloaded: action.loaded,\n\t\t\t\tcurrentId: null\n\t\t\t};\n\t\t}\n\t\tcase ChartActionType.UPDATE_ONE:\n\t\t\treturn updateOne(state, action);\n\t\tcase ChartActionType.REMOVE_CHART: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcharts: state.charts.filter((chart: any) => chart.id !== action.id),\n\t\t\t\tloaded: action.loaded,\n\t\t\t\tcurrentId: action.id\n\t\t\t};\n\t\t}\n\t\tcase ChartActionType.TOGGLE_VISIBILITY: {\n\t\t\tconst chartToHide = state.charts.find((chart: any) => chart.id === action.id);\n\t\t\tchartToHide.hidden = action.hidden;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloaded: action.loaded,\n\t\t\t\tcurrentId: action.id\n\t\t\t};\n\t\t}\n\t\tcase ChartActionType.REMOVE_CHARTS: {\n\t\t\tconst remainingCharts = state.charts.filter((chart: any) => (\n\t\t\t\t!action.ids.some((actionChart: any) => actionChart.id === chart.id)\n\t\t\t));\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcharts: remainingCharts,\n\t\t\t\tloaded: action.loaded,\n\t\t\t\tcurrentId: null\n\t\t\t};\n\t\t}\n\t\tcase ChartActionType.ADD_ONE: {\n\t\t\tconst duplicate = assign({}, action.data);\n\t\t\tconst expandedCharts = state.charts.concat(duplicate);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcharts: expandedCharts,\n\t\t\t\tloaded: action.loaded,\n\t\t\t\tcurrentId: action.data.id\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst validInitialCharts = (localCharts: any[] | undefined) => {\n\tif (!localCharts || !Array.isArray(localCharts)) {\n\t\treturn [];\n\t}\n\n\treturn localCharts.filter((chart: any) => !!chart.id && typeof chart.id === 'string');\n};\n\nconst ChartsContextProvider = ({ children }: any) => {\n\tconst initialState: any = {\n\t\tcharts: validInitialCharts(JSON.parse(localStorage.getItem('localCharts') as string)),\n\t\tloaded: false,\n\t\tcurrentId: null\n\t};\n\tconst store = useReducer(chartsReducer, initialState);\n\tconst [state, dispatch] = store;\n\n\tuseEffect(() => {\n\t\tconst localCharts = JSON.parse(localStorage.getItem('localCharts') as string || '[]');\n\t\t// clean up the hidden charts (those marked for deletion but failed to be deleted)\n\t\tconst filteredCharts = localCharts.filter((chart: any) => !chart.hidden);\n\t\tdispatch({\n\t\t\ttype: ChartActionType.UPDATE_ALL,\n\t\t\tdata: filteredCharts,\n\t\t\tloaded: true\n\t\t});\n\t\tlocalStorage.setItem('localCharts', JSON.stringify(filteredCharts));\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// store only ids to local storage so we don't get into temptation of using other\n\t\t// props that should really be coming from db\n\t\tlocalStorage.setItem('localCharts', JSON.stringify(state.charts));\n\t}, [state.charts]);\n\n\treturn (\n\t\t<ChartsContext.Provider value={store}>\n\t\t\t{children}\n\t\t</ChartsContext.Provider>\n\t);\n};\n\nexport {\n\tChartsContext,\n\tChartsContextProvider\n};\n","import LZString from 'lz-string';\n\nexport const createChartSandbox = (chartTemplate: any) => {\n\tconst files: Record<string, any> = {};\n\n\tObject.keys(chartTemplate)\n\t\t.forEach((filePath: string) => files[filePath] = { content: chartTemplate[filePath] });\n\n\treturn LZString.compressToBase64(JSON.stringify({ files }))\n\t\t.replace(/\\+/g, `-`) // '+' -> '-'\n\t\t.replace(/\\//g, `_`) // '/' -> '_'\n\t\t.replace(/=+$/, ``); // Remove ending '='\n};\n","const chartTagMap: Record<string, string> = {\n\t'simple-bar-chart': 'SimpleBarChart',\n\t'grouped-bar-chart': 'GroupedBarChart',\n\t'stacked-bar-chart': 'StackedBarChart',\n\t'line-chart': 'LineChart',\n\t'area-chart': 'AreaChart',\n\t'stacked-area-chart': 'StackedAreaChart',\n\t'scatter-chart': 'ScatterChart',\n\t'pie-chart': 'PieChart',\n\t'donut-chart': 'DonutChart'\n};\n\nexport const createReactChartApp = (chart: any) => {\n\tconst chartData = JSON.stringify(chart.data, null, '\\t');\n\tconst chartType = `${chart.type}`;\n\tlet chartOptions = '';\n\tlet theme;\n\tif (chart && chart.options && chart.options.rawChartOptions) {\n\t\t// eslint-disable-next-line prefer-destructuring\n\t\ttheme = chart.options.rawChartOptions.theme;\n\t\tchartOptions = JSON.stringify(chart.options.rawChartOptions, null, '\\t');\n\t}\n\n\tlet chartTheme = '@carbon/charts/styles.css';\n\tif (theme && theme !== 'default') {\n\t\tchartTheme = `@carbon/charts/styles-${theme}.css`;\n\t}\n\n\tconst indexHtml = `<div id='root'></div>\n`;\n\tconst indexJs\n= `import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ${chartTagMap[chartType]} } from '@carbon/charts-react';\nimport '${chartTheme}';\nimport { css } from 'emotion';\n\nconst app = css\\`\n\tsvg.bx--cc--chart-svg {\n\t\theight: 500px;\n\t\tmin-width: 100%\n\t}\n\\`;\n\nconst options =\n\t${chartOptions};\nclass App extends React.Component {\n\tstate = {\n\tdata:\n\t\t${chartData}\n\t};\n\trender() {\n\treturn (\n\t\t<div className={app}>\n\t\t<${chartTagMap[chartType]}\n\t\t\tdata={this.state.data}\n\t\t\toptions={options}>\n\t\t</${chartTagMap[chartType]}>\n\t\t</div>\n\t);\n\t}\n}\nReactDOM.render(<App />, document.getElementById('root'));\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@carbon/charts': '0.40.11',\n\t\t\t'@carbon/charts-react': '0.40.11',\n\t\t\t'carbon-components': '10.20.0',\n\t\t\t'@carbon/colors': '10.11.0',\n\t\t\td3: '5.12.0',\n\t\t\treact: '16.12.0',\n\t\t\t'react-dom': '16.12.0',\n\t\t\t'react-scripts': '3.0.1',\n\t\t\temotion: '10.0.27'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/index.html': indexHtml,\n\t\t'src/index.js': indexJs,\n\t\t'package.json': packageJson\n\t};\n};\n","// Used to map chart types to corresponding angular tag.\nconst chartTagMap: Record<string, string> = {\n\t'simple-bar-chart': 'ibm-simple-bar-chart',\n\t'grouped-bar-chart': 'ibm-grouped-bar-chart',\n\t'stacked-bar-chart': 'ibm-stacked-bar-Chart',\n\t'line-chart': 'ibm-line-chart',\n\t'area-chart': 'ibm-area-chart',\n\t'stacked-area-chart': 'ibm-stacked-area-chart',\n\t'scatter-chart': 'ibm-scatter-chart',\n\t'pie-chart': 'ibm-pie-chart',\n\t'donut-chart': 'ibm-donut-chart'\n};\n\nexport const createAngularChartApp = (chart: any) => {\n\tconst chartData = JSON.stringify(chart.data, null, '\\t');\n\tconst chartType = `${chart.type}`;\n\tlet chartOptions = '';\n\tlet theme;\n\tif (chart && chart.options && chart.options.rawChartOptions) {\n\t\t// eslint-disable-next-line prefer-destructuring\n\t\ttheme = chart.options.rawChartOptions.theme;\n\t\tchartOptions = JSON.stringify(chart.options.rawChartOptions, null, '\\t');\n\t}\n\n\tlet chartTheme = '@carbon/charts/styles.css';\n\tif (theme && theme !== 'default') {\n\t\tchartTheme = `@carbon/charts/styles-${theme}.css`;\n\t}\n\n\tconst appComponentHtml\n= `<${chartTagMap[chartType]} [data]='data' [options]='options'></${chartTagMap[chartType]}>\n`;\n\tconst appComponentTs\n= `import { Component } from '@angular/core';\nimport '${chartTheme}';\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html'\n})\nexport class AppComponent {\n\tdata = ${chartData};\n\toptions = ${chartOptions};\n}\n`;\n\tconst appModule\n= `import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ChartsModule } from '@carbon/charts-angular';\nimport { AppComponent } from './app.component';\n@NgModule({\n\timports: [BrowserModule, ChartsModule],\n\tdeclarations: [AppComponent],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule {}\n`;\n\n\tconst indexHtml\n= `<!DOCTYPE html>\n<html lang='en'>\n\t<head>\n\t\t<meta charset='utf-8' />\n\t\t<title>Angular</title>\n\t</head>\n\t<body>\n\t\t<app-root></app-root>\n\t</body>\n</html>\n`;\n\n\tconst mainTs\n= `import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nplatformBrowserDynamic()\n\t.bootstrapModule(AppModule)\n\t.catch(err => console.log(err));\n`;\n\n\tconst angularCliJson\n= `{\n\t\"apps\": [\n\t\t{\n\t\t\t\"root\": \"src\",\n\t\t\t\"outDir\": \"dist\",\n\t\t\t\"assets\": [\"assets\", \"favicon.ico\"],\n\t\t\t\"index\": \"index.html\",\n\t\t\t\"main\": \"main.ts\",\n\t\t\t\"polyfills\": \"polyfills.ts\",\n\t\t\t\"prefix\": \"app\",\n\t\t\t\"styles\": [\"styles.css\"],\n\t\t\t\"scripts\": [],\n\t\t\t\"environmentSource\": \"environments/environment.ts\",\n\t\t\t\"environments\": {\n\t\t\t\t\"dev\": \"environments/environment.ts\",\n\t\t\t\t\"prod\": \"environments/environment.prod.ts\"\n\t\t\t}\n\t\t}\n\t]\n}\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@angular/animations': '8.2.14',\n\t\t\t'@angular/common': '8.2.14',\n\t\t\t'@angular/compiler': '8.2.14',\n\t\t\t'@angular/core': '8.2.14',\n\t\t\t'@angular/forms': '8.2.14',\n\t\t\t'@angular/platform-browser': '8.2.14',\n\t\t\t'@angular/platform-browser-dynamic': '8.2.14',\n\t\t\t'@angular/router': '8.2.14',\n\t\t\t'@carbon/charts': '0.40.11',\n\t\t\t'@carbon/charts-angular': '0.40.11',\n\t\t\t'core-js': '3.6.0',\n\t\t\td3: '5.15.0',\n\t\t\trxjs: '6.5.3',\n\t\t\t'zone.js': '0.10.2'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/index.html': indexHtml,\n\t\t'src/main.ts': mainTs,\n\t\t'src/app/app.component.html': appComponentHtml,\n\t\t'src/app/app.component.ts': appComponentTs,\n\t\t'src/app/app.module.ts': appModule,\n\t\t'.angular-cli.json': angularCliJson,\n\t\t'package.json': packageJson\n\t};\n};\n","// Used to map chart types to corresponding vanilla chart tag.\nconst chartTagMap: Record<string, string> = {\n\t'simple-bar-chart': 'SimpleBarChart',\n\t'grouped-bar-chart': 'GroupedBarChart',\n\t'stacked-bar-chart': 'StackedBarChart',\n\t'line-chart': 'LineChart',\n\t'area-chart': 'AreaChart',\n\t'stacked-area-chart': 'StackedAreaChart',\n\t'scatter-chart': 'ScatterChart',\n\t'pie-chart': 'PieChart',\n\t'donut-chart': 'DonutChart'\n};\n\nexport const createVanillaChartApp = (chart: any) => {\n\tconst chartData = JSON.stringify(chart.data, null, '\\t');\n\tconst chartType = `${chart.type}`;\n\tlet chartOptions = '';\n\tlet theme;\n\tif (chart && chart.options && chart.options.rawChartOptions) {\n\t\t// eslint-disable-next-line prefer-destructuring\n\t\ttheme = chart.options.rawChartOptions.theme;\n\t\tchartOptions = JSON.stringify(chart.options.rawChartOptions, null, '\\t');\n\t}\n\n\tlet chartTheme = '@carbon/charts/styles.css';\n\tif (theme && theme !== 'default') {\n\t\tchartTheme = `@carbon/charts/styles-${theme}.css`;\n\t}\n\n\tconst indexHtml\n= `<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Vanilla</title>\n\t\t<meta charset='UTF-8' />\n\t</head>\n\t<body>\n\t\t<div style='height: 500px; min-width: 100%;'>\n\t\t\t<div id='my-chart'></div>\n\t\t</div>\n\t\t<script src='src/index.js'>\n\t\t</script>\n\t</body>\n</html>\n`;\n\n\tconst indexJs\n= `import '${chartTheme}';\nimport { ${chartTagMap[chartType]} } from '@carbon/charts';\n// grab chart holder DOM element\nconst chartHolder = document.getElementById('my-chart');\n// initialize the chart\nnew ${chartTagMap[chartType]}(chartHolder, {\n\tdata: ${chartData},\n\toptions: ${chartOptions},\n});\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@carbon/charts': '0.40.11',\n\t\t\t'carbon-components': '10.20.0',\n\t\t\t'@carbon/colors': '10.11.0',\n\t\t\td3: '5.15.0'\n\t\t}\n\t};\n\n\treturn {\n\t\t'index.html': indexHtml,\n\t\t'src/index.js': indexJs,\n\t\t'package.json': packageJson\n\t};\n};\n","// Used to map chart types to corresponding vue chart tag.\nconst chartTagMap: Record<string, string> = {\n\t'simple-bar-chart': 'ccv-simple-bar-chart',\n\t'grouped-bar-chart': 'ccv-grouped-bar-chart',\n\t'stacked-bar-chart': 'ccv-stacked-bar-Chart',\n\t'line-chart': 'ccv-line-chart',\n\t'scatter-chart': 'ccv-scatter-chart',\n\t'pie-chart': 'ccv-pie-chart',\n\t'donut-chart': 'ccv-donut-chart',\n\t'area-chart': 'ccv-area-chart',\n\t'stacked-area-chart': 'ccv-stacked-area-chart',\n\tdataAndOptions: ':data=\\'data\\' :options=\\'options\\''\n};\n\nexport const createVueChartApp = (chart: any) => {\n\tconst chartData = JSON.stringify(chart.data, null, '\\t');\n\tconst chartType = `${chart.type}`;\n\tlet chartOptions = '';\n\tlet theme;\n\tif (chart && chart.options && chart.options.rawChartOptions) {\n\t\t// eslint-disable-next-line prefer-destructuring\n\t\ttheme = chart.options.rawChartOptions.theme;\n\t\tchartOptions = JSON.stringify(chart.options.rawChartOptions, null, '\\t');\n\t}\n\n\tlet chartTheme = '@carbon/charts/styles.css';\n\tif (theme && theme !== 'default') {\n\t\tchartTheme = `@carbon/charts/styles-${theme}.css`;\n\t}\n\n\tconst chartVue\n= `<script>\n\timport Vue from 'vue';\n\timport '${chartTheme}';\n\timport chartsVue from '@carbon/charts-vue';\n\tVue.use(chartsVue);\n\texport default {\n\t\tname: 'Chart',\n\t\tcomponents: {},\n\t\tdata() {\n\t\t\treturn {\n\t\t\tdata:\n\t\t\t${chartData},\n\t\t\toptions:\n\t\t\t${chartOptions}\n\t\t};\n\t},\n\ttemplate:\n\t\t\"<${chartTagMap[chartType]} :data='data' :options='options'></${chartTagMap[chartType]}>\"\n\t};\n</script>\n`;\n\n\tconst appVue\n= `<template>\n<div id='app' style='height: 500px; min-width: 100%;'>\n<Chart/>\n</div>\n</template>\n<script>\n\timport Chart from './components/chart';\n\texport default {\n\t\tname: 'App',\n\t\tcomponents: {\n\t\t\tChart\n\t\t}\n\t};\n</script>\n`;\n\tconst mainJs\n= `import Vue from 'vue';\nimport App from './App.vue';\nVue.config.productionTip = false;\nnew Vue({\n\trender: h => h(App)\n}).$mount('#app');\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@carbon/charts': '0.40.11',\n\t\t\t'@carbon/charts-vue': '0.40.11',\n\t\t\t'@vue/cli-plugin-babel': '4.1.1',\n\t\t\td3: '5.15.0',\n\t\t\tvue: '2.6.11'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/components/chart.vue': chartVue,\n\t\t'src/App.vue': appVue,\n\t\t'src/main.js': mainJs,\n\t\t'package.json': packageJson\n\t};\n};\n","import React, { useContext } from 'react';\n\nimport { ShareOptionsModals } from '../share-options-modal';\n\nimport { createChartSandbox } from './create-chart-sandbox';\nimport { createReactChartApp } from './frameworks/react-chart';\nimport { createAngularChartApp } from './frameworks/angular-chart';\nimport { createVanillaChartApp } from './frameworks/vanilla-chart';\nimport { createVueChartApp } from './frameworks/vue-chart';\n\nimport {\n\tCodeSnippet,\n\tModal,\n\tTab,\n\tTabs\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { ModalContext, ModalActionType } from '../../../../context/modal-context';\n\nconst codeSnippetWrapper = css`\n    margin-top: 20px;\n    p {\n        margin-bottom: 7px;\n    }\n`;\n\nconst titleWrapper = css`\n    display: flex;\n    margin-top: 30px;\n    a {\n        margin-left: auto;\n    }\n`;\n\nconst codeSnippet = css`\n    .bx--copy-btn {\n        background: white;\n    }\n`;\n\ninterface ExportCodeProps {\n    chart: any,\n    displayedModal: ShareOptionsModals | null,\n    setDisplayedModal: (displayedModal: ShareOptionsModals | null) => void\n}\n\nexport const ExportCode = ({\n\tchart,\n\tdisplayedModal,\n\tsetDisplayedModal\n}: ExportCodeProps) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\n\tconst vanillaCode: any = createVanillaChartApp(chart);\n\tconst reactCode: any = createReactChartApp(chart);\n\tconst angularCode: any = createAngularChartApp(chart);\n\tconst vueCode: any = createVueChartApp(chart);\n\n\tconst generateSandboxUrl = (parameters: any) => (\n\t\t`https://codesandbox.io/api/v1/sandboxes/define?parameters=${parameters}`\n\t);\n\n\treturn (\n\t\t<Modal\n\t\t\thasForm\n\t\t\topen={modalState.ShowModal && displayedModal === ShareOptionsModals.CODE_EXPORTS}\n\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tprimaryButtonText='Done'\n\t\t\tsecondaryButtonText='Back to export options'\n\t\t\tonRequestSubmit={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tonSecondarySubmit={() => { setDisplayedModal(ShareOptionsModals.SHARE_OPTIONS); }}\n\t\t\tmodalHeading={`Export \"${chart.title}\" code`}>\n\t\t\t<Tabs>\n\t\t\t\t<Tab\n\t\t\t\t\tid='vanilla'\n\t\t\t\t\tlabel='Vanilla JS'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Vanilla JS Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createChartSandbox(vanillaCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(vanillaCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? vanillaCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(vanillaCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tid='Angular'\n\t\t\t\t\tlabel='Angular'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Angular Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createChartSandbox(angularCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(angularCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? angularCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(angularCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tid='react'\n\t\t\t\t\tlabel='React'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>React Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createChartSandbox(reactCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(reactCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? reactCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(reactCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tid='vue'\n\t\t\t\t\tlabel='Vue'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Vue Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createChartSandbox(vueCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(vueCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? vueCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(vueCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t</Tabs>\n\t\t</Modal>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { SelectableTile } from 'carbon-components-react';\n\nconst tileFooter = css`\n\tposition: absolute;\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: space-between;\n\tbottom: 15px;\n\tp {\n\t\tfont-weight: bold;\n\t}\n\tspan {\n\t\tmargin-right: 30px;\n\t}\n`;\n\nexport interface SelectionTile {\n\tstyles?: any,\n\tonChange?: any,\n\ticon?: JSX.Element | null,\n\tlabel?: string,\n\tselected?: boolean,\n\ttag?: JSX.Element | null\n}\n\nexport const SelectionTile = (props: SelectionTile) => (\n\t<div className={props.styles}>\n\t\t<SelectableTile\n\t\t\tlight={true}\n\t\t\tonChange={() => {props.onChange();}}\n\t\t\tselected={props.selected}>\n\t\t\t{ props.icon }\n\t\t\t<div className={tileFooter}>\n\t\t\t\t<p>{ props.label }</p>\n\t\t\t\t{ props.tag }\n\t\t\t</div>\n\t\t</SelectableTile>\n\t</div>\n);\n","import { extension } from 'mime-types';\nimport Papa from 'papaparse';\nimport { getGroupNames } from './chart-tools';\n\nconst restoreUploadedJsonData = (chartData: any) => {\n\tlet restoredUploadedData = chartData;\n\n\tlet isDataInvalid = false;\n\n\tconst groupNames = getGroupNames(chartData);\n\tconst controlGroup = chartData.filter((datapoint: any) => datapoint.group === groupNames[0]);\n\tconst uniqueKeys = controlGroup.map((datapoint: any) => datapoint.key);\n\n\tfor (let i = 1; i < groupNames.length; i++) {\n\t\tconst groupName = groupNames[i];\n\t\tconst group = chartData.filter((datapoint: any) => datapoint.group === groupName);\n\n\t\tconst counters: any = {};\n\n\t\tfor (let j = 0; j < group.length; j++) {\n\t\t\tconst { key } = group[j];\n\t\t\tconst groupDuplicateKeys = group.filter((datapoint: any) => datapoint.key === key);\n\t\t\tconst headerDuplicateKeys = uniqueKeys.filter((header: string) => header === key);\n\t\t\t// Count the occurrences.\n\t\t\tif (counters[key] > headerDuplicateKeys.length) {\n\t\t\t\tcounters[key]++;\n\t\t\t\tuniqueKeys.push(key);\n\n\t\t\t\t// If we ever get here it means a group has a key that the control group does not.\n\t\t\t\t// We add `empty` data to the control group with the missing key to prevent a visual\n\t\t\t\t// bug with the table (Adding columns to the left or right).\n\t\t\t\tisDataInvalid = true;\n\t\t\t\trestoredUploadedData = [\n\t\t\t\t\t{\n\t\t\t\t\t\tgroup: groupNames[0],\n\t\t\t\t\t\tkey: group[j].key,\n\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\tdate: null\n\t\t\t\t\t},\n\t\t\t\t\t...restoredUploadedData\n\t\t\t\t];\n\t\t\t} else if (!uniqueKeys.includes(key)) {\n\t\t\t\tuniqueKeys.push(key);\n\t\t\t\tcounters[key] = groupDuplicateKeys.length;\n\n\t\t\t\t// If we ever get here it means a group has a key that the control group does not.\n\t\t\t\t// We add `empty` data to the control group with the missing key to prevent a visual\n\t\t\t\t// bug with the table (Adding columns to the left or right).\n\t\t\t\tisDataInvalid = true;\n\t\t\t\trestoredUploadedData = [\n\t\t\t\t\t{\n\t\t\t\t\t\tgroup: groupNames[0],\n\t\t\t\t\t\tkey: group[j].key,\n\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\tdate: null\n\t\t\t\t\t},\n\t\t\t\t\t...restoredUploadedData\n\t\t\t\t];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcounters[key] = groupDuplicateKeys.length;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\twasDataModified: isDataInvalid,\n\t\tdata: restoredUploadedData\n\t};\n};\n\n\nexport const getFullFileName = (name: string, mimeType: string) => (\n\t`${name}.${extension(mimeType)}`\n);\n\nexport const saveFile = (url: string, fileName: string) => {\n\tconst anchor = document.createElement('a');\n\tanchor.href = url;\n\tanchor.download = fileName;\n\tanchor.click();\n};\n\nexport const saveBlob = (blob: any, fileName: string) => {\n\tconst url = URL.createObjectURL(blob);\n\tsaveFile(url, fileName);\n\n\t// Give it a second to download :)\n\tsetTimeout(() => {\n\t\tURL.revokeObjectURL(url);\n\t}, 1000);\n};\n\nexport const processDataFile = (file: any) => new Promise<any>((resolve, reject) => {\n\t// Handles upload of one file at the moment.\n\tconst reader = new FileReader();\n\treader.onloadend = (event: any) => {\n\t\tif (!file) {\n\t\t\treject('No file was provided');\n\t\t\treturn;\n\t\t}\n\n\t\tif (file.type === 'application/json') {\n\t\t\tconst uploadedData = JSON.parse(event.target.result);\n\t\t\tconst restoredUploadedData = restoreUploadedJsonData(uploadedData);\n\t\t\tresolve({\n\t\t\t\t...restoredUploadedData,\n\t\t\t\toriginalData: uploadedData\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * This takes in csvs in the following format:\n\t\t *\n\t\t * group,\t\tlabel 1,\t\tlabel 2,\t\tlabel 3,\n\t\t * Dataset 1,\t1,\t\t\t\t2,\t\t\t\t3,\n\t\t * Dataset 2,\t4,\t\t\t\t5,\t\t\t\t6,\n\t\t * Dataset 3,\t7,\t\t\t\t8,\t\t\t\t9\n\t\t *\n\t\t * `group` column can be put in any column and they represent the dataset names for each row.\n\t\t * `group` column is not mandatory.\n\t\t *\n\t\t * If you want to add in a date to a datapoint, you can do so by adding a `|` after a value, ie.\n\t\t * 12|[\"2069-08-20T10:26:46.864Z\"].\n\t\t *\n\t\t */\n\t\tif (file.type === 'text/csv') {\n\t\t\tconst result = Papa.parse(event.target.result) as { data: any[] };\n\t\t\tif (!result.data.length) {\n\t\t\t\treject('File does not contain data');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet isDataInvalid = false;\n\t\t\tconst header = result.data[0] as any;\n\n\t\t\t// This makes sure all rows are equal in length.\n\t\t\tconst maxRowLength: any = (result.data as any).reduce((maxLength: number, row: any) => {\n\t\t\t\tisDataInvalid = maxLength !== row.length || isDataInvalid;\n\t\t\t\treturn Math.max(maxLength, row.length);\n\t\t\t}, header.length);\n\n\t\t\t// Fill in missing data if needed.\n\t\t\tif (isDataInvalid) {\n\t\t\t\tresult.data = result.data.map((row: any, rowIndex: number) => {\n\t\t\t\t\t// Fill header with default labels to max row length.\n\t\t\t\t\tif (rowIndex === 0) {\n\t\t\t\t\t\treturn row.concat(\n\t\t\t\t\t\t\t(new Array(maxRowLength - row.length)).fill(0)\n\t\t\t\t\t\t\t\t.map((_, columnIndex: number) => `label ${row.length + columnIndex}`)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Fill dataset rows with null values to max row length.\n\t\t\t\t\treturn row.concat((new Array(maxRowLength - row.length)).fill('null'));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Check if the csv contains the group header indicating that dataset names are provided.\n\t\t\tconst isGrouped = header.some((header: string) => header.toLowerCase() === 'group');\n\t\t\t// If dataset names are provided, this finds the column index of the dataset names.\n\t\t\t// If there are no dataset names provided, this is set to -1 because it is used to slice\n\t\t\t// the row array when creating the dataset data and indexing starts at 1 to remove elements\n\t\t\t// so setting it to -1 and adding one to it prevents the removal of an array element.\n\t\t\tconst groupIndex = isGrouped\n\t\t\t\t? header.findIndex((header: string) => header.toLowerCase() === 'group')\n\t\t\t\t: -1;\n\n\t\t\t// // Create a chart data object from the results.\n\t\t\t// const keys = header.filter((header: string) => header.toLowerCase() !== 'group');\n\t\t\tconst data: any = [];\n\t\t\tresult.data.slice(1).forEach((row: any, rowIndex: number) => {\n\t\t\t\trow.forEach((rowItem: any, columnIndex: number) => {\n\t\t\t\t\tif (columnIndex === groupIndex) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If the array generated from splitting the string with a | delimeter is 2, there\n\t\t\t\t\t// is a date provided in the second index of the array. The date always needs to come\n\t\t\t\t\t// second.\n\t\t\t\t\tconst datapoint = rowItem.split('|');\n\t\t\t\t\t// Humans make first contact with an alien race, the Vulcans, following the\n\t\t\t\t\t// success of Zefram Cochrane's warp drive in the Phoenix launch\n\t\t\t\t\t// earlier in the day (Star Trek: First Contact)\n\t\t\t\t\tlet date = new Date('2063-04-05');\n\t\t\t\t\tlet value: number | null = Number.parseFloat(datapoint[0]);\n\t\t\t\t\tif (datapoint.length === 2) {\n\t\t\t\t\t\tdate = new Date(datapoint[1]);\n\t\t\t\t\t}\n\t\t\t\t\t// If result of given value is not a number, set the value to null.\n\t\t\t\t\tif (Number.isNaN(value)) {\n\t\t\t\t\t\tvalue = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst key = result.data[0][columnIndex];\n\t\t\t\t\t// `rowIndex + 1` because we skipped the first row of keys.\n\t\t\t\t\tconst group = result.data[rowIndex + 1][groupIndex];\n\n\t\t\t\t\tdata.push({\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tdate,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tgroup\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tresolve({\n\t\t\t\tdata,\n\t\t\t\twasDataModified: isDataInvalid\n\t\t\t});\n\t\t}\n\t};\n\treader.onerror = (err) => {\n\t\tconsole.log(err);\n\t\treject(err);\n\t};\n\tif (file) {\n\t\treader.readAsText(file);\n\t}\n});\n\nexport const warningNotificationProps = {\n\tlowContrast: true,\n\trole: 'alert',\n\tnotificationType: 'inline',\n\tkind: 'warning',\n\ttitle: 'Uploaded data has been modified',\n\tsubtitle: 'data did not match expected format so we modified it so you can still use it'\n};\n\nexport const errorNotificationProps = {\n\tlowContrast: true,\n\trole: 'alert',\n\tnotificationType: 'inline',\n\tkind: 'error',\n\ttitle: 'Error',\n\tsubtitle: ''\n};\n","import React, { useState, useContext } from 'react';\nimport { Modal } from 'carbon-components-react';\nimport { Image32, Code32 } from '@carbon/icons-react';\n\nimport { css } from 'emotion';\nimport {\n\tModalActionType,\n\tModalContext\n} from '../../../context/modal-context';\nimport { ExportCode } from './exports/export-code-modal';\nimport { SelectionTile } from '../../../components/selection-tile';\nimport { ExportImageModal } from './exports/export-image-modal';\n\nconst exportOptionTileWrapper = css`\n\twidth: 50%;\n\theight: 200px;\n\t.bx--tile {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tp {\n\t\t\tposition: absolute;\n\t\t\tbottom: 15px;\n\t\t}\n\t}\n`;\n\nconst exportOptionsWrapper = css`\n\tdisplay: flex;\n\tdiv:first-child {\n\t\tmargin-right: 20px;\n\t}\n`;\n\nexport enum ShareOptionsModals {\n\tSHARE_OPTIONS,\n\tCODE_EXPORTS,\n\tIMAGE_EXPORTS\n}\n\nenum Exports {\n\tCODE,\n\tIMAGE\n}\n\ninterface ShareOptionsModalState {\n\tselectedExportOption: Exports | null\n}\n\nexport const ShareOptionsModal = ({ chart }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [displayedModal, setDisplayedModal]\n\t\t= useState<ShareOptionsModals | null>(ShareOptionsModals.SHARE_OPTIONS);\n\n\t// This contains all the states that control the share options modal.\n\tconst [shareOptionsState, setShareOptionsState] = useState<ShareOptionsModalState>({\n\t\tselectedExportOption: null\n\t});\n\n\tconst handleExportSelection = () => {\n\t\tif (shareOptionsState.selectedExportOption === Exports.CODE) {\n\t\t\tsetDisplayedModal(ShareOptionsModals.CODE_EXPORTS);\n\t\t} else if (shareOptionsState.selectedExportOption === Exports.IMAGE) {\n\t\t\tsetDisplayedModal(ShareOptionsModals.IMAGE_EXPORTS);\n\t\t}\n\t};\n\n\tconst shareModalSwitcher = () => {\n\t\tswitch (displayedModal) {\n\t\t\tcase ShareOptionsModals.SHARE_OPTIONS:\n\t\t\t\treturn (\n\t\t\t\t\t<Modal\n\t\t\t\t\t\thasForm\n\t\t\t\t\t\tonRequestSubmit={() => handleExportSelection()}\n\t\t\t\t\t\topen={modalState.ShowModal}\n\t\t\t\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\t\t\t\tprimaryButtonText='Done'\n\t\t\t\t\t\tprimaryButtonDisabled={ shareOptionsState.selectedExportOption === null }\n\t\t\t\t\t\tsecondaryButtonText='Cancel'\n\t\t\t\t\t\tmodalHeading={`Share '${chart.title}'`}>\n\t\t\t\t\t\t<div className={exportOptionsWrapper}>\n\t\t\t\t\t\t\t<SelectionTile\n\t\t\t\t\t\t\t\tstyles={exportOptionTileWrapper}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tsetShareOptionsState({\n\t\t\t\t\t\t\t\t\t\t...shareOptionsState,\n\t\t\t\t\t\t\t\t\t\tselectedExportOption: Exports.CODE\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticon={<Code32 />}\n\t\t\t\t\t\t\t\tselected={shareOptionsState.selectedExportOption === Exports.CODE}\n\t\t\t\t\t\t\t\tlabel='Code' />\n\t\t\t\t\t\t\t<SelectionTile\n\t\t\t\t\t\t\t\tstyles={exportOptionTileWrapper}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tsetShareOptionsState({\n\t\t\t\t\t\t\t\t\t\t...shareOptionsState,\n\t\t\t\t\t\t\t\t\t\tselectedExportOption: Exports.IMAGE\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticon={<Image32 />}\n\t\t\t\t\t\t\t\tselected={shareOptionsState.selectedExportOption === Exports.IMAGE}\n\t\t\t\t\t\t\t\tlabel='Image' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Modal>\n\t\t\t\t);\n\t\t\tcase ShareOptionsModals.CODE_EXPORTS:\n\t\t\t\treturn (\n\t\t\t\t\t<ExportCode\n\t\t\t\t\t\tchart={chart}\n\t\t\t\t\t\tdisplayedModal={displayedModal}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal} />\n\t\t\t\t);\n\t\t\tcase ShareOptionsModals.IMAGE_EXPORTS:\n\t\t\tdefault:\n\t\t\t\treturn <ExportImageModal\n\t\t\t\t\tchart={chart}\n\t\t\t\t\tdisplayedModal={displayedModal}\n\t\t\t\t\tsetDisplayedModal={setDisplayedModal}/>;\n\t\t}\n\t};\n\n\treturn shareModalSwitcher();\n};\n","import React, {\n\tuseState,\n\tuseEffect,\n\tuseRef,\n\tuseContext\n} from 'react';\nimport {\n\tModal,\n\tTextInput,\n\tForm,\n\tSelect,\n\tSelectItem,\n\tCheckbox,\n\tNumberInput,\n\tLoading\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport debounce from 'lodash/debounce';\nimport { saveBlob, getFullFileName } from '../../../../utils/file-tools';\nimport { ShareOptionsModals } from '../share-options-modal';\nimport { ModalContext, ModalActionType } from '../../../../context/modal-context';\nimport { useHistory } from 'react-router';\nimport { ChartsContext } from '../../../../context';\nimport { getChartPreview, RenderProps } from '../../../../utils/chart-tools';\n\nconst exportSettingForm = css`\n\twidth: 23rem;\n`;\nconst exportSettingFormGroup = css`\n\twidth: 320px;\n\tdisplay: flex;\n`;\nconst previewContainer = css`\n\tfloat: left;\n\tbackground-color: #e0e0e0;\n\twidth: 100%;\n\theight: 100%;\n\tmargin-top: 3rem;\n\tmargin-left: 1rem;\n\tdisplay: flex;\n\talign-items: center;\n`;\nconst selectInputWH = css`\n\tmargin-bottom: 1.5rem;\n\tfloat: left;\n\twidth: 150px;\n`;\nconst selectInput = css`\n\tmargin-bottom: 1.5rem;\n\twidth: 320px;\n`;\n\nconst chartImage = css`\n\tmax-height: 100%;\n\tmax-width: 100%;\n\tdisplay: block;\n\tmargin: 0;\n`;\n\nexport interface ExportImageProps {\n\tchart: any,\n\tdisplayedModal: ShareOptionsModals | null,\n\tsetDisplayedModal: (displayedModal: ShareOptionsModals | null) => void\n}\n\nlet updatePreviewUrl = async() => console.log('updatePreviewUrl not initialized yet');\nlet handleResize = () => console.log('handleResize not initialized yet');\nconst doInputChange = debounce(() => updatePreviewUrl(), 400);\nconst doUpdatePreviewSize = debounce(() => handleResize(), 200);\n\nexport const ExportImageModal = (props: ExportImageProps) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [chartState] = useContext(ChartsContext);\n\tconst history = useHistory();\n\tconst location = history.location.pathname;\n\tconst pathSegments = location.split('/');\n\n\tconst id = `${chartState.currentId || pathSegments[pathSegments.length - 1]}`;\n\tconst chart = chartState.charts.find((chart: any) => chart.id === id);\n\n\tconst exportSettings = {\n\t\twidth: 800,\n\t\theight: 400,\n\t\tunit: 'pixels',\n\t\tratioLock: false,\n\t\tchartName: props.chart.title,\n\t\tformat: 'image/png',\n\t\tcurRatio: 0\n\t};\n\tconst [inputs, setInputs] = useState(exportSettings);\n\tconst [previewUrl, setPreviewUrl] = useState(props.chart.preview);\n\tconst [isPerformingAction, setIsPerformingAction] = useState(false);\n\tconst previewContainerRef = useRef<HTMLDivElement>(null);\n\tconst [imageContainerSize, setImageContainerSize] = useState<any>();\n\n\thandleResize = () => {\n\t\tif (!previewContainerRef || !previewContainerRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tsetImageContainerSize({\n\t\t\twidth: previewContainerRef.current.offsetWidth,\n\t\t\theight: previewContainerRef.current.offsetHeight\n\t\t});\n\t};\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', doUpdatePreviewSize);\n\t\tif(previewContainerRef) {\n\t\t\tdoUpdatePreviewSize();\n\t\t}\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', doUpdatePreviewSize);\n\t\t};\n\t}, [previewContainerRef]);\n\n\tconst getPreviewSize = (width: number, height: number) => {\n\t\tlet fitRatio: number;\n\t\tif (width <= height) {\n\t\t\t// preview is square or tall rectangle (mobile)\n\t\t\tfitRatio = imageContainerSize.height / height;\n\t\t} else {\n\t\t\t// preview is long rectangle\n\t\t\tfitRatio = imageContainerSize.width / width;\n\t\t}\n\t\treturn {\n\t\t\twidth: width * fitRatio,\n\t\t\theight: height * fitRatio\n\t\t};\n\t};\n\n\tupdatePreviewUrl = async() => {\n\t\tconst previewSize = getPreviewSize(inputs.width, inputs.height);\n\t\tconst renderProps: RenderProps = {\n\t\t\tid: props.chart.id,\n\t\t\tname: inputs.chartName,\n\t\t\twidth: inputs.width,\n\t\t\theight: inputs.height,\n\t\t\tpreview: {\n\t\t\t\tformat: inputs.format,\n\t\t\t\twidth: previewSize.width,\n\t\t\t\theight: previewSize.height\n\t\t\t}\n\t\t};\n\t\tconst imageBlob = await getChartPreview(chart, renderProps);\n\t\tconst reader = new FileReader();\n\t\treader.readAsDataURL(imageBlob ? imageBlob : new Blob());\n\t\treader.onloadend = () => {\n\t\t\tconst imageUrl: string = reader.result ? reader.result.toString() : '';\n\t\t\tsetPreviewUrl(imageUrl);\n\t\t};\n\t};\n\n\tconst onSubmit = async() => {\n\t\tif (isPerformingAction) {\n\t\t\treturn;\n\t\t}\n\t\tsetIsPerformingAction(true);\n\t\tconst renderProps: RenderProps = {\n\t\t\tid: props.chart.id,\n\t\t\tname: inputs.chartName,\n\t\t\twidth: inputs.width,\n\t\t\theight: inputs.height,\n\t\t\tformat: inputs.format\n\t\t};\n\t\tconst imageBlob = await getChartPreview(chart, renderProps);\n\n\t\tconst fileName = getFullFileName(inputs.chartName, inputs.format);\n\t\tsaveBlob(imageBlob, fileName);\n\t\tsetIsPerformingAction(false);\n\t};\n\n\tconst handleChange = (id: any, value: any) => {\n\t\tsetInputs({\n\t\t\t...inputs,\n\t\t\t[id]: value\n\t\t});\n\t\tdoInputChange();\n\t};\n\n\tuseEffect(() => {\n\t\tdoInputChange();\n\t}, []);\n\n\treturn (\n\t\t<Modal\n\t\t\thasForm\n\t\t\tonRequestSubmit={() => {\n\t\t\t\t// TODO look into whether it's a better user experience to have the\n\t\t\t\t// processing in the background, perhaps with the saving indication\n\t\t\t\tonSubmit().then(dispatchModal({ type: ModalActionType.closeModal }));\n\t\t\t}}\n\t\t\tonSecondarySubmit={() => { props.setDisplayedModal(ShareOptionsModals.SHARE_OPTIONS); }}\n\t\t\topen={modalState.ShowModal && props.displayedModal === ShareOptionsModals.IMAGE_EXPORTS}\n\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tprimaryButtonText='Export'\n\t\t\tsecondaryButtonText='Back to export options'\n\t\t\tmodalHeading={`Export '${props.chart.title}' as image`}>\n\t\t\t<p>\n\t\t\t\tExport a static image of this chart for use in presentation decks or designs.\n\t\t\t</p>\n\t\t\t<div style={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tmarginTop: '3rem'\n\t\t\t}}>\n\t\t\t\t<ExportModalSettings inputs={inputs} handleChange={handleChange} />\n\t\t\t\t<div className={previewContainer} ref={previewContainerRef}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tid=\"previewimg\"\n\t\t\t\t\t\tclassName={chartImage}\n\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\talt={`chart preview: ${props.chart.title}`} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Loading active={isPerformingAction} />\n\t\t</Modal>\n\t);\n};\n\nconst ExportModalSettings = ({ inputs, handleChange }: any) => {\n\t// We assume that a working ratio is never 0 (no 1D charts)\n\tconst getRatio = () => (inputs.width / inputs.height).toFixed(2);\n\n\tconst onDimensionChange = (id: any, value: any) => {\n\t\tif (!id) {\n\t\t\treturn;\n\t\t}\n\t\tif (isNaN(value) || value === 0) {\n\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\tvalue = 1;\n\t\t}\n\t\tif (!inputs.ratioLock) {\n\t\t\thandleChange(id, value);\n\t\t\treturn;\n\t\t}\n\t\tif (inputs.curRatio === 0) {\n\t\t\thandleChange('curRatio', getRatio());\n\t\t}\n\t\thandleChange(id, value);\n\t\tif (id === 'width') {\n\t\t\thandleChange('height', (value / inputs.curRatio).toFixed(0));\n\t\t} else {\n\t\t\thandleChange('width', (value * inputs.curRatio).toFixed(0));\n\t\t}\n\t};\n\tconst numInputOnchange = (event: any) => {\n\t\tonDimensionChange(event.target.id, parseFloat(event.target.value));\n\t};\n\tconst numInputOnClick = (event: any) => {\n\t\tif (event.imaginaryTarget && event.imaginaryTarget.value) {\n\t\t\tonDimensionChange(event.imaginaryTarget.id, parseFloat(event.imaginaryTarget.value));\n\t\t}\n\t};\n\tconst inputChange = (event: any) => {\n\t\thandleChange(event.target.id, event.target.value);\n\t};\n\n\treturn (\n\t\t<Form className={exportSettingForm}>\n\t\t\t<TextInput\n\t\t\t\tclassName={selectInput}\n\t\t\t\tid={'chartName'}\n\t\t\t\tlabelText={'Name'}\n\t\t\t\tplaceholder={'Chart name'}\n\t\t\t\tonChange={inputChange}\n\t\t\t\ttype='text'\n\t\t\t\tdefaultValue={inputs.chartName} />\n\t\t\t<div className={exportSettingFormGroup}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tclassName={selectInputWH}\n\t\t\t\t\tid='width'\n\t\t\t\t\tlabel='Width'\n\t\t\t\t\tvalue={inputs.width}\n\t\t\t\t\tonClick={numInputOnClick}\n\t\t\t\t\tonChange={numInputOnchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tclassName={selectInputWH}\n\t\t\t\t\tid='height'\n\t\t\t\t\tlabel='Height'\n\t\t\t\t\tvalue={inputs.height}\n\t\t\t\t\tonClick={numInputOnClick}\n\t\t\t\t\tonChange={numInputOnchange} />\n\t\t\t</div>\n\t\t\t<Checkbox\n\t\t\t\tclassName={selectInput}\n\t\t\t\tid='ratioLock'\n\t\t\t\tlabelText='Preserve aspect ratio'\n\t\t\t\tdefaultChecked={inputs.ratioLock}\n\t\t\t\tonChange={(event: any) => handleChange('ratioLock', event)} />\n\t\t\t<Select\n\t\t\t\tclassName={selectInput}\n\t\t\t\tvalue={inputs.unit}\n\t\t\t\tid={'unit'}\n\t\t\t\tonChange={inputChange}\n\t\t\t\tlabelText='Units'>\n\t\t\t\t<SelectItem text='pixels' value='pixels' />\n\t\t\t</Select>\n\t\t\t<Select\n\t\t\t\tclassName={selectInput}\n\t\t\t\tvalue={inputs.format}\n\t\t\t\tid={'format'}\n\t\t\t\tonChange={inputChange}\n\t\t\t\tlabelText='Format'>\n\t\t\t\t<SelectItem text='png' value='image/png' />\n\t\t\t\t<SelectItem text='jpeg' value='image/jpeg' />\n\t\t\t\t<SelectItem text='bmp' value='image/bmp' />\n\t\t\t\t<SelectItem text='gif' value='image/gif' />\n\t\t\t</Select>\n\t\t</Form>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tButton,\n\tOverflowMenu,\n\tOverflowMenuItem,\n\tSearch\n} from 'carbon-components-react';\n\nimport {\n\tAdd16,\n\tArrowsVertical16,\n\tCheckmarkFilled16\n\t// 🏗️🏗️🏗️ Under construction, add in later 🏗️🏗️🏗️\n\t// SettingsAdjust16\n} from '@carbon/icons-react';\n\nimport { css } from 'emotion';\n\nconst dashboardSearchWrapper = css`\n\tdisplay: flex;\n\twidth: 100%;\n\n\t// 520px is the point which the search bar becomes too small to display the full text, moves\n\t// the sort, share, and add button below the search bar at this point.\n\t@media screen and (max-width: 520px) {\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nconst searchInput = css`\n\tinput {\n\t\tborder-bottom: none;\n\n\t\t@media screen and (max-width: 520px) {\n\t\t\tmargin-bottom: 15px;\n\t\t}\n\t}\n`;\n\nconst sortButton = css`\n\theight: 3rem;\n\twidth: 3rem;\n\tbackground-color: #f4f4f4;\n`;\n\nconst sortOverflowItem = css`\n\tsvg {\n\t\ttransform: translate(7px, 1.5px);\n\t}\n`;\n\n// 🏗️🏗️🏗️ Under construction, add in later 🏗️🏗️🏗️\n// const shareButton = css`\n// \theight: 3rem;\n// \twidth: 3rem;\n// \tbackground-color: #f4f4f4;\n// `;\n\nexport enum SortDirection {\n\tAscending,\n\tDescending\n}\n\nexport const DashboardSearch = ({\n\tonSearchHandler,\n\tonSortHandler,\n\tdisplayWizard,\n\tsetDisplayWizard,\n\tsortDirection\n}: any) => (\n\t<div className={dashboardSearchWrapper}>\n\t\t<Search\n\t\t\tlabelText='Chart'\n\t\t\tplaceHolderText='Search charts'\n\t\t\tclassName={searchInput}\n\t\t\tonChange={(event: any) => onSearchHandler(event.target.value ? event.target.value : '')} />\n\t\t<OverflowMenu\n\t\t\tclassName={sortButton}\n\t\t\tariaLabel='Sort chart'\n\t\t\trenderIcon = {() => <ArrowsVertical16 />}\n\t\t\tonClick={(event: { stopPropagation: () => void; }) => { event.stopPropagation(); }}>\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText={(\n\t\t\t\t\t<div className={sortOverflowItem}>\n\t\t\t\t\t\tNewest to oldest\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsortDirection === SortDirection.Ascending\n\t\t\t\t\t\t\t\t? <CheckmarkFilled16 />\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tonClick={() => {onSortHandler(SortDirection.Ascending);}} />\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText={(\n\t\t\t\t\t<div className={sortOverflowItem}>\n\t\t\t\t\t\tOldest to newest\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsortDirection === SortDirection.Descending\n\t\t\t\t\t\t\t\t? <CheckmarkFilled16 />\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tonClick={() => {onSortHandler(SortDirection.Descending);}} />\n\t\t</OverflowMenu>\n\t\t{/* 🏗️🏗️🏗️ Under construction, add in later 🏗️🏗️🏗️ */}\n\t\t{/* <Button kind='ghost' className={shareButton}><SettingsAdjust16 /></Button> */}\n\t\t<Button\n\t\t\tonClick={() => { setDisplayWizard(!displayWizard); }}\n\t\t\ttitle='Add new chart'\n\t\t\taria-label='Add new chart'>\n\t\t\tNew chart\n\t\t\t<Add16 className='bx--btn__icon'/>\n\t\t</Button>\n\t</div>\n);\n","import React, { useContext } from 'react';\nimport { NotificationActionType, NotificationContext } from '../../context/notification-context';\nimport { Modal } from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport {\n\tChartActionType,\n\tChartsContext,\n\tuseFetchOne\n} from '../../context/charts-context';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst getUniqueName = (charts: Array<any>, name: string) => {\n\tconst nameRegEx = new RegExp(String.raw`(.*)\\s+(copy)*(\\s+(\\d+))?$`);\n\tconst nameMatch = name.match(nameRegEx);\n\tlet count = 0;\n\n\tlet nameBase = name;\n\t// If match, increment the count and update name base and new name\n\tif (nameMatch) {\n\t\tnameBase = name.replace(nameRegEx, '$1');\n\t\tcount = Number.parseInt(name.replace(nameRegEx, '$4'), 10);\n\t\tif (!count) {\n\t\t\tcount = 0;\n\t\t}\n\t}\n\n\t// Get a list containing names of all duplicates of original chart\n\t// e.g. [ \"Chart copy\", \"Chart copy 1\", \"Chart copy 7\", ...]\n\tconst names: string[] = [];\n\tcharts.forEach((chart) => {\n\t\tif (chart.title.includes(nameBase)) {\n\t\t\tnames.push(chart.title);\n\t\t}\n\t});\n\n\tif (names.length <= 1) {\n\t\t// because the chart we're copying is already in there\n\t\treturn `${nameBase} copy`;\n\t}\n\n\tconst highestNumber = names\n\t\t.map((n) => Number.parseInt(n.replace(nameRegEx, '$4'), 10))\n\t\t.filter((n) => !isNaN(n)).sort((a, b) => b - a)\n\t\t.shift();\n\n\treturn `${nameBase} copy ${highestNumber && count < highestNumber ? highestNumber + 1 : count + 1}`;\n};\n\n// In the case that chart modal is used in the dashboard the full chart containing options and data\n// can't be passed in, so chart id is passed in and `useChart` is used within this component.\nexport const DuplicateChartModal = ({ id }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [, dispatchNotification] = useContext(NotificationContext);\n\tconst [chartsState, dispatch] = useContext(ChartsContext);\n\tuseFetchOne(id, dispatch);\n\tconst history = useHistory();\n\tconst location = useLocation();\n\n\tconst chart = chartsState.charts.find((chart: any) => chart.id === id);\n\n\tconst duplicateChart = () => {\n\t\tif (chartsState.currentlyProcessing) {\n\t\t\treturn;\n\t\t}\n\t\t// copy current chart and change chart title\n\t\tconst chartCopy = JSON.parse(JSON.stringify(chart));\n\t\tchartCopy.title = getUniqueName(chartsState.charts, chartCopy.title);\n\t\t// TODO: get unique id for the chart copy\n\t\tchartCopy.id = `${Math.random().toString().slice(2)}${Math.random().toString().slice(2)}`;\n\n\t\tdispatch({\n\t\t\ttype: ChartActionType.ADD_ONE,\n\t\t\tdata: chartCopy,\n\t\t\tloaded: true\n\t\t});\n\t\tif (location.pathname !== '/') {\n\t\t\thistory.push(`/edit/${chartCopy.id}`);\n\t\t}\n\t\tdispatchNotification({\n\t\t\ttype: NotificationActionType.ADD_NOTIFICATION,\n\t\t\tdata: {\n\t\t\t\tkind: 'success',\n\t\t\t\ttitle: 'Duplication success',\n\t\t\t\tmessage: `'${chartCopy.title}  has been duplicated from '${chart.title}'.`\n\t\t\t}\n\t\t});\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\tsize='sm'\n\t\t\topen={modalState.ShowModal}\n\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tsecondaryButtonText='Cancel'\n\t\t\tmodalHeading='Duplicate chart?'\n\t\t\tprimaryButtonText='Duplicate'\n\t\t\tprimaryButtonDisabled={!!chartsState.currentlyProcessing}\n\t\t\tonRequestSubmit={() => duplicateChart()}>\n\t\t\t<p>\n\t\t\t\tClick <strong>Duplicate</strong> to begin to edit a copy of the current chart\n\t\t\t\tor <strong>Cancel</strong> to continue on this chart.\n\t\t\t</p>\n\t\t</Modal>\n\t);\n};\n","import React, { useContext } from 'react';\n\nimport { Modal } from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport {\n\tChartActionType,\n\tChartsContext,\n\tuseFetchOne\n} from '../../context/charts-context';\nimport { useHistory } from 'react-router-dom';\nimport { NotificationActionType, NotificationContext } from '../../context/notification-context';\n\nexport const DeleteChartModal = ({ id }: any) => {\n\tconst [chartsState, dispatch] = useContext(ChartsContext);\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst history = useHistory();\n\tconst [, dispatchNotification] = useContext(NotificationContext);\n\tconst chart = chartsState.charts.find((chart: any) => chart.id === id);\n\tuseFetchOne(id, dispatch);\n\n\n\tconst deleteChart = () => {\n\t\tdispatch({\n\t\t\ttype: ChartActionType.TOGGLE_VISIBILITY,\n\t\t\tid,\n\t\t\thidden: true,\n\t\t\tloaded: true\n\t\t});\n\t\thistory.push('/');\n\t\tdispatchNotification({\n\t\t\ttype: NotificationActionType.ADD_NOTIFICATION,\n\t\t\tdata: {\n\t\t\t\tkind: 'error',\n\t\t\t\ttitle: 'Chart deleted!',\n\t\t\t\tmessage: `Chart '${chart.title}' has been permanently deleted.`,\n\t\t\t\taction: {\n\t\t\t\t\tactionText: 'Undo',\n\t\t\t\t\tactionFunction: undoHideChart,\n\t\t\t\t\tonNotificationClose: doDeleteChart\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\tconst undoHideChart = () => {\n\t\tdispatch({\n\t\t\ttype: ChartActionType.TOGGLE_VISIBILITY,\n\t\t\tid,\n\t\t\thidden: false,\n\t\t\tloaded: true\n\t\t});\n\t};\n\n\tconst doDeleteChart = () => {\n\t\tdispatch({\n\t\t\ttype: ChartActionType.REMOVE_CHART,\n\t\t\tid,\n\t\t\tloaded: true\n\t\t});\n\t};\n\n\n\treturn (\n\t\t<Modal\n\t\t\tsize='sm'\n\t\t\topen={modalState.ShowModal}\n\t\t\tonRequestClose={() => { dispatchModal({ type: ModalActionType.closeModal }); }}\n\t\t\tsecondaryButtonText='Cancel'\n\t\t\tmodalHeading='Delete this chart?'\n\t\t\tdanger\n\t\t\tprimaryButtonText='Delete'\n\t\t\tonRequestSubmit={() => deleteChart()}>\n\t\t\t<p>\n\t\t\t\tClick <strong>Cancel</strong> to go back to editing your chart\n\t\t\t\tor <strong>Delete</strong> to remove it permanently.\n\t\t\t</p>\n\t\t</Modal>\n\t);\n};\n","import React, { useState, useContext } from 'react';\nimport {\n\tModal,\n\tTextInput,\n\tCheckbox,\n\tTooltipDefinition\n} from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport { ChartActionType, ChartsContext } from '../../context/charts-context';\nimport './chart-modal.scss';\n\nexport const SettingsChartModal = ({ chart }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [, dispatch] = useContext(ChartsContext);\n\n\tconst props = {\n\t\tsize: 'sm',\n\t\topen: modalState.ShowModal,\n\t\tonRequestClose: () => dispatchModal({ type: ModalActionType.closeModal }),\n\t\tsecondaryButtonText: 'Cancel'\n\t};\n\n\tconst [title, setTitle] = useState(chart.title);\n\tconst [isTemplate, setIsTemplate] = useState(chart.labels && chart.labels.includes('template'));\n\n\tconst updateChartSettings = () => {\n\t\tlet labels = chart.labels || [];\n\n\t\t// Add or remove 'template' label for the chart if set template is checked\n\t\tif (isTemplate) {\n\t\t\tif(!labels.includes('template')) {\n\t\t\t\tlabels = [...labels, 'template'];\n\t\t\t}\n\t\t} else {\n\t\t\t// if the set template is unchecked, remove the 'template' label\n\t\t\tlabels = labels.filter((label: string) => label !== 'template');\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: ChartActionType.UPDATE_ONE,\n\t\t\tdata: {\n\t\t\t\t...chart,\n\t\t\t\ttitle,\n\t\t\t\tlabels\n\t\t\t},\n\t\t\tloaded: true\n\t\t});\n\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\t{...props}\n\t\t\thasForm\n\t\t\tmodalHeading='Edit chart settings'\n\t\t\tprimaryButtonText='Save'\n\t\t\tonRequestSubmit={() => updateChartSettings()} >\n\t\t\t<TextInput\n\t\t\t\tid='chartName'\n\t\t\t\tlabelText='Chart name'\n\t\t\t\tdefaultValue={title}\n\t\t\t\tonChange={(event: any) => setTitle(event.target.value)}/>\n\t\t\t<Checkbox\n\t\t\t\tid='setChartAsTemplate'\n\t\t\t\tchecked={isTemplate}\n\t\t\t\tlabelText='Make this chart a &nbsp;'\n\t\t\t\tonChange={(event: any) => setIsTemplate(event)}/>\n\t\t\t<TooltipDefinition\n\t\t\t\ttooltipText='Setting a chart as a template makes it an easy starting point\n\t\t\t\tfor future charts.'\n\t\t\t\tdirection='bottom'>\n\t\t\t\ttemplate\n\t\t\t</TooltipDefinition>\n\t\t</Modal>\n\t);\n};\n","import { ModalType, ModalContext } from '../../context/modal-context';\nimport { ShareOptionsModal } from './share-options/share-options-modal';\nimport { DuplicateChartModal } from './duplicate-chart-modal';\nimport { DeleteChartModal } from './delete-chart-modal';\nimport { SettingsChartModal } from './settings-chart-modal';\nimport React, { useContext } from 'react';\nimport { ChartsContext, useFetchOne } from '../../context/charts-context';\n\n// eslint-disable-next-line react/prop-types\nexport const ChartModal = ({ chart }: any) => {\n\tconst [, dispatch] = useContext(ChartsContext);\n\t// eslint-disable-next-line react/prop-types\n\tuseFetchOne(chart.id, dispatch);\n\tconst [modalState] = useContext(ModalContext);\n\n\tswitch (modalState.ModalType) {\n\t\tcase ModalType.DUPLICATION:\n\t\t\treturn (\n\t\t\t// In the case that chart modal is used in the dashboard the full chart containing options and\n\t\t\t// data can't be passed in, so we use chart id and fetch it\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<DuplicateChartModal id={chart.id}/>\n\t\t\t);\n\t\tcase ModalType.SHARING:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<ShareOptionsModal chart={chart} />\n\t\t\t);\n\t\tcase ModalType.DELETION:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<DeleteChartModal id={chart.id} />\n\t\t\t);\n\t\tcase ModalType.SETTINGS:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<SettingsChartModal chart={chart} />\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, { useContext } from 'react';\nimport { css } from 'emotion';\nimport {\n\tButton,\n\tInlineLoading\n} from 'carbon-components-react';\nimport {\n\tCopy16,\n\tDelete16,\n\tSettings16,\n\tShare16\n} from '@carbon/icons-react';\nimport { ModalContext, ModalActionType } from '../../context/modal-context';\nimport { ChartModal } from './chart-modal';\nimport { ChartsContext } from '../../context';\n\nconst editHeader = css`\n\tleft: 16rem;\n\tmargin-bottom: 16px;\n\tbackground: #fff;\n\t.edit-content {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\t.title-wrap {\n\t\t\theight: 3rem;\n\t\t\tdisplay: flex;\n\t\t\talign-self: center;\n\t\t\tflex-flow: column;\n\t\t}\n\t\t.title-subheading {\n\t\t\tdisplay: inline-flex;\n\t\t\t.bx--inline-loading {\n\t\t\t\twidth: auto;\n\t\t\t\tposition: relative;\n\t\t\t\tmargin-left: 10px;\n\t\t\t\ttop: -10px;\n\t\t\t}\n\t\t\t.date-wrap {\n\t\t\t\tfont-size: 12px;\n\t\t\t\tfont-style: italic;\n\t\t\t\tcolor: black;\n\t\t\t\tpadding-left: 12px;\n\t\t\t}\n\t\t}\n\t\t.chart-title {\n\t\t\twhitespace: nowrap;\n\t\t\tfont-weight: bold;\n\t\t\tpadding-left: 12px;\n\t\t\tpadding-right: 16px;\n\t\t\tfloat: left;\n\t\t}\n\t\t.chart-edit {\n\t\t\tmargin-top: 6px;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n`;\n\nconst toolBarAction = css`\n\tbackground: #f4f4f4;\n\tmargin-right: 13px;\n`;\n\nconst chartEditToolBar = css`\n\tdisplay: flex;\n\tmargin-right: 2rem;\n\tmargin-top: 8px;\n\tmargin-bottom: 8px;\n\tbutton {\n\t\theight: 3rem;\n\t}\n\t.toolBarButtons {\n\t\tmin-width: 13.75rem\n\t}\n`;\n\nexport const EditHeader = ({ chart }: any) => {\n\tconst [, dispatchModal] = useContext(ModalContext);\n\tconst [{ currentlyProcessing }] = useContext(ChartsContext);\n\n\treturn (\n\t\t<header\n\t\t\tclassName={editHeader}\n\t\t\taria-label={`Header for '${chart.title}'`}\n\t\t\trole='banner'\n\t\t\ttabIndex={0}>\n\t\t\t<div className='edit-content'>\n\t\t\t\t<div className='title-wrap'>\n\t\t\t\t\t<p className='chart-title'>{chart.title}</p>\n\n\t\t\t\t\t<div className='title-subheading'>\n\t\t\t\t\t\t<div className='date-wrap'>{`Last modified ${ chart.lastModified}`}</div>\n\t\t\t\t\t\t{!!currentlyProcessing\n\t\t\t\t\t\t\t&& <InlineLoading\n\t\t\t\t\t\t\t\tdescription='Chart is updating...'\n\t\t\t\t\t\t\t\ticonDescription='Active loading indicator'\n\t\t\t\t\t\t\t\tstatus='active' />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={chartEditToolBar}>\n\t\t\t\t\t<div className='toolBarButtons'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Duplicate chart'\n\t\t\t\t\t\t\ttitle='Duplicate chart'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setDuplicationModal,\n\t\t\t\t\t\t\t\tid: chart.id\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tclassName={toolBarAction}>\n\t\t\t\t\t\t\t<Copy16 fill=\"black\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Delete chart'\n\t\t\t\t\t\t\ttitle='Delete chart'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setDeletionModal,\n\t\t\t\t\t\t\t\tid: chart.id\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tclassName={toolBarAction}>\n\t\t\t\t\t\t\t<Delete16 fill=\"black\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Share chart'\n\t\t\t\t\t\t\ttitle='Share chart'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setShareModal,\n\t\t\t\t\t\t\t\tid: chart.id\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tclassName={toolBarAction}>\n\t\t\t\t\t\t\t<Share16 fill=\"black\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Chart settings'\n\t\t\t\t\t\t\ttitle='Chart settings'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setSettingsModal,\n\t\t\t\t\t\t\t\tid: chart.id\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tclassName={toolBarAction}>\n\t\t\t\t\t\t\t<Settings16 fill=\"black\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ChartModal chart={chart} />\n\t\t</header>\n\t);\n};\n","import { getGroupNames } from '../../../utils/chart-tools';\n\nconst findNth = (array: any[], fn: (value: any) => boolean, n = 1) => {\n\tlet i = 0;\n\t// To prevent `no-param-reassign` lint error.\n\tlet counter = n;\n\tfor (i; i < array.length; i++) {\n\t\tconst item = array[i];\n\t\tif (fn(item)) {\n\t\t\tcounter--;\n\t\t}\n\n\t\tif (counter === 0) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (i >= array.length) {\n\t\treturn {\n\t\t\titem: undefined,\n\t\t\tindex: -1\n\t\t};\n\t}\n\treturn {\n\t\titem: array[i],\n\t\tindex: i\n\t};\n};\n\nexport const getTableBody = (chartData: any, headers?: string[]) => {\n\t// To prevent `no-param-reassign` lint error.\n\tlet tableHeaders = headers;\n\n\tif (!tableHeaders) {\n\t\ttableHeaders = getTableHeaders(chartData);\n\t}\n\n\tconst groupNames = getGroupNames(chartData);\n\tconst table: any[] = [];\n\n\t// This needs to be here to avoid Object is possibly 'undefined' compiler error.\n\t// The check in `getTableHeaders` isn't enough.\n\tif (!tableHeaders) {\n\t\treturn table;\n\t}\n\n\tfor (let i = 0; i < groupNames.length; i++) {\n\t\tconst groupName = groupNames[i];\n\t\tconst group = chartData.filter((datapoint: any) => datapoint.group === groupName);\n\n\t\t// Account for duplicate keys.\n\t\tconst counters: any = {};\n\n\t\tconst row = [groupName];\n\n\t\t// Based on the order of the table headers,\n\t\t// place all date/value pairs in the index of its' associated key.\n\t\ttableHeaders.forEach((header: string, headerIndex: number) => {\n\t\t\tconst { item } = findNth(\n\t\t\t\tgroup,\n\t\t\t\t(datapoint: any) => datapoint.key === header, counters[header] ? counters[header] + 1 : 1\n\t\t\t);\n\t\t\tif (item) {\n\t\t\t\tif (counters[header]) {\n\t\t\t\t\tcounters[header]++;\n\t\t\t\t} else {\n\t\t\t\t\tcounters[header] = 1;\n\t\t\t\t}\n\t\t\t\trow[headerIndex + 1] = {\n\t\t\t\t\tvalue: item.value,\n\t\t\t\t\tdate: item.date || null\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\trow[headerIndex + 1] = {\n\t\t\t\t\tvalue: null,\n\t\t\t\t\tdate: null\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\ttable.push(row);\n\t}\n\n\treturn table;\n};\n\nexport const getTableHeaders = (chartData: any) => {\n\tif (!chartData) {\n\t\treturn [];\n\t}\n\tconst groupNames = getGroupNames(chartData);\n\tconst controlGroup = chartData.filter((datapoint: any) => datapoint.group === groupNames[0]);\n\tconst tableHeader = controlGroup.map((datapoint: any) => datapoint.key);\n\n\tfor (let i = 1; i < groupNames.length; i++) {\n\t\tconst groupName = groupNames[i];\n\t\tconst group = chartData.filter((datapoint: any) => datapoint.group === groupName);\n\n\t\t// Account for duplicate keys.\n\t\tconst counters: any = {};\n\n\t\tgroup.forEach(({ key }: any) => {\n\t\t\tconst groupDuplicateKeys = group.filter((datapoint: any) => datapoint.key === key);\n\t\t\tconst headerDuplicateKeys = tableHeader.filter((header: string) => header === key);\n\t\t\t// Count the occurrences.\n\t\t\tif (counters[key] > headerDuplicateKeys.length) {\n\t\t\t\tcounters[key]++;\n\t\t\t\ttableHeader.push(key);\n\t\t\t} else if (!tableHeader.includes(key)) {\n\t\t\t\ttableHeader.push(key);\n\t\t\t\tcounters[key] = groupDuplicateKeys.length;\n\t\t\t} else {\n\t\t\t\tcounters[key] = groupDuplicateKeys.length;\n\t\t\t}\n\t\t});\n\t}\n\n\treturn tableHeader;\n};\n\nexport const addColumn = (\n\tindex: number,\n\tchartData: any[],\n\tcolumn: any[],\n\theaders?: string[],\n\tupdateData?: (newData: any) => void\n) => {\n\t// To prevent `no-param-reassign` lint error.\n\tconst tableHeaders = headers || getTableHeaders(chartData);\n\n\tlet newChartData = chartData;\n\n\tif (index >= tableHeaders.length || !newChartData.length) {\n\t\tnewChartData = [...newChartData, ...column];\n\t\tif (updateData) {\n\t\t\tupdateData(newChartData);\n\t\t}\n\t\treturn newChartData;\n\t}\n\n\tconst key = tableHeaders[index];\n\tconst previousDuplicates = tableHeaders.slice(0, index + 1).filter((header: string) => header === key);\n\n\tconst groupNames = getGroupNames(newChartData);\n\n\t// Find the correct index in `chartData` to insert the new column\n\t// so that its' key will be at the given column index in the table.\n\tfor (let i = 0; i < groupNames.length; i++) {\n\t\tconst groupName = groupNames[i];\n\t\t// Account for duplicate keys.\n\t\tlet counter = previousDuplicates.length;\n\t\tfor (let j = 0; j < newChartData.length; j++) {\n\t\t\tif (newChartData[j].group !== groupName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (tableHeaders[index] === newChartData[j].key) {\n\t\t\t\tif (counter <= 1) {\n\t\t\t\t\tnewChartData = [...newChartData.slice(0, j), ...column, ...newChartData.slice(j)];\n\t\t\t\t\tif (updateData) {\n\t\t\t\t\t\tupdateData(newChartData);\n\t\t\t\t\t}\n\t\t\t\t\treturn newChartData;\n\t\t\t\t}\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (updateData) {\n\t\tupdateData(newChartData);\n\t}\n\n\treturn newChartData;\n};\n\nexport const generateColumn = (chartData: any[]) => {\n\tif (!chartData.length) {\n\t\treturn [{\n\t\t\tgroup: 'Dataset 0',\n\t\t\tkey: 'Label 0',\n\t\t\tvalue: 0,\n\t\t\tdate: new Date('2063-04-05')\n\t\t}];\n\t}\n\tlet labelSuffix = 0;\n\t// Cannot put this in directly in while loop condition because of no-loop-func in eslint:\n\t// `Function declared in a loop contains unsafe references to variable(s)`.\n\tconst findDuplicateKey = (key: string) => (key === `Label ${labelSuffix}`);\n\twhile (chartData.some((datapoint: any) => findDuplicateKey(datapoint.key))) {\n\t\tlabelSuffix++;\n\t}\n\tconst key = `Label ${labelSuffix}`;\n\n\tconst groupNames = getGroupNames(chartData);\n\tconst column = groupNames.map((groupName: string, index: number) => ({\n\t\tgroup: groupName,\n\t\tkey,\n\t\tvalue: index,\n\t\t// Humans make first contact with an alien race, the Vulcans, following the\n\t\t// success of Zefram Cochrane's warp drive in the Phoenix launch\n\t\t// earlier in the day (Star Trek: First Contact)\n\t\tdate: new Date('2063-04-05')\n\t}));\n\n\treturn column;\n};\n\nexport const removeColumn = (\n\tindex: number,\n\tchartData: any[],\n\theaders?: string[],\n\tupdateData?: (newData: any) => void\n) => {\n\t// To prevent `no-param-reassign` lint error.\n\tconst tableHeaders = headers || getTableHeaders(chartData);\n\tlet columnIndex = index;\n\n\tif (!chartData.length) {\n\t\treturn chartData;\n\t}\n\n\tif (columnIndex > tableHeaders.length - 1) {\n\t\tcolumnIndex = tableHeaders.length - 1;\n\t}\n\n\tconst key = tableHeaders[columnIndex];\n\tconst previousDuplicates = tableHeaders.slice(0, columnIndex + 1)\n\t\t.filter((header: string) => header === key);\n\n\tconst groupNames = getGroupNames(chartData);\n\tlet newChartData = chartData;\n\n\t// Remove all datapoints associated with the key that is in the given column index.\n\tgroupNames.forEach((groupName: string) => {\n\t\t// Account for duplicate headers.\n\t\tlet counter = previousDuplicates.length;\n\t\tfor (let i = 0; i < newChartData.length; i++) {\n\t\t\tif (newChartData[i].group !== groupName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (tableHeaders[columnIndex] === newChartData[i].key) {\n\t\t\t\tif (counter <= 1) {\n\t\t\t\t\tnewChartData = [...newChartData.slice(0, i), ...newChartData.slice(i + 1)];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t}\n\t});\n\n\tif (updateData) {\n\t\tupdateData(newChartData);\n\t}\n\n\treturn newChartData;\n};\n\nexport const addRow = (\n\tindex: number,\n\tchartData: any[],\n\trow: any[],\n\tupdateData?: (newData: any) => void\n) => {\n\tlet newChartData = chartData;\n\n\tif (!newChartData.length) {\n\t\tnewChartData = [...row, ...newChartData];\n\t\tif (updateData) {\n\t\t\tupdateData(newChartData);\n\t\t}\n\t\treturn newChartData;\n\t}\n\n\tlet counter = index;\n\n\tconst groupNames = getGroupNames(chartData);\n\n\t// Find the correct index in `chartData` to insert the new row\n\t// so that its' group will be at the given row index in the table.\n\tfor (let i = 0; i < groupNames.length; i++) {\n\t\tconst groupName = groupNames[i];\n\t\tfor (let j = 0; j < chartData.length; j++) {\n\t\t\tif (chartData[j].group !== groupName || counter !== 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnewChartData = [...chartData.slice(0, j), ...row, ...chartData.slice(j)];\n\t\t\tif (updateData) {\n\t\t\t\tupdateData(newChartData);\n\t\t\t}\n\t\t\treturn newChartData;\n\t\t}\n\t\tcounter--;\n\t}\n\n\tnewChartData = [...chartData, ...row];\n\n\tif (updateData) {\n\t\tupdateData(newChartData);\n\t}\n\n\treturn newChartData;\n};\n\nexport const generateRow = (chartData: any[], headers?: string[]) => {\n\t// To prevent `no-param-reassign` lint error.\n\tconst tableHeaders = headers || getTableHeaders(chartData);\n\n\tif (!chartData.length || !tableHeaders) {\n\t\treturn [{\n\t\t\tgroup: 'Dataset 0',\n\t\t\tkey: 'Label 0',\n\t\t\tvalue: 0,\n\t\t\tdate: new Date('2063-04-05')\n\t\t}];\n\t}\n\tlet groupSuffix = 0;\n\t// Cannot put this in directly in while loop condition because of no-loop-func in eslint:\n\t// `Function declared in a loop contains unsafe references to variable(s)`.\n\tconst findDuplicateGroup = (group: string) => (group === `Dataset ${groupSuffix}`);\n\twhile (chartData.some((datapoint: any) => findDuplicateGroup(datapoint.group))) {\n\t\tgroupSuffix++;\n\t}\n\tconst group = `Dataset ${groupSuffix}`;\n\n\tconst row = tableHeaders.map((key: string, index: number) => ({\n\t\tgroup,\n\t\tkey,\n\t\tvalue: index,\n\t\t// Humans make first contact with an alien race, the Vulcans, following the\n\t\t// success of Zefram Cochrane's warp drive in the Phoenix launch\n\t\t// earlier in the day (Star Trek: First Contact)\n\t\tdate: new Date('2063-04-05')\n\t}));\n\n\treturn row;\n};\n\nexport const removeRow = (\n\tindex: number,\n\tchartData: any[],\n\tupdateData?: (newData: any) => void\n) => {\n\t// To prevent `no-param-reassign` lint error.\n\tlet rowIndex = index;\n\n\tif (!chartData.length) {\n\t\treturn chartData;\n\t}\n\n\tif (rowIndex < 0) {\n\t\trowIndex = 0;\n\t}\n\n\tconst groupNames = getGroupNames(chartData);\n\tif (rowIndex > groupNames.length - 1) {\n\t\trowIndex = groupNames.length - 1;\n\t}\n\tconst groupNameToRemove = groupNames[rowIndex];\n\tconst newData = chartData.filter((datapoint: any) => datapoint.group !== groupNameToRemove);\n\n\tif (updateData) {\n\t\tupdateData(newData);\n\t}\n\n\treturn newData;\n};\n\nexport const updateGroup = (\n\tindex: number,\n\tchartData: any[],\n\tnewGroup: string,\n\tupdateData?: (newData: any) => void\n) => {\n\t// To prevent `no-param-reassign` lint error.\n\tlet rowIndex = index;\n\n\tif (!chartData.length) {\n\t\treturn chartData;\n\t}\n\n\tif (rowIndex < 0) {\n\t\trowIndex = 0;\n\t}\n\n\tconst groupNames = getGroupNames(chartData);\n\tif (rowIndex > groupNames.length - 1) {\n\t\trowIndex = groupNames.length - 1;\n\t}\n\tconst groupToUpdate = groupNames[rowIndex];\n\n\tconst newData = chartData.map((datapoint: any) => ({\n\t\t...datapoint,\n\t\tgroup: datapoint.group === groupToUpdate ? newGroup : datapoint.group\n\t}));\n\n\tif (updateData) {\n\t\tupdateData(newData);\n\t}\n\n\treturn newData;\n};\n\nexport const updateKey = (\n\tindex: number,\n\tchartData: any[],\n\tnewKey: string,\n\theaders?: string[],\n\tupdateData?: (newData: any) => void\n) => {\n\t// To prevent `no-param-reassign` lint error.\n\tconst tableHeaders = headers || getTableHeaders(chartData);\n\tlet columnIndex = index;\n\n\tif (!chartData.length || !tableHeaders) {\n\t\treturn chartData;\n\t}\n\n\tif (columnIndex > tableHeaders.length - 1) {\n\t\tcolumnIndex = tableHeaders.length - 1;\n\t}\n\n\tconst key = tableHeaders[columnIndex];\n\tconst previousDuplicates = tableHeaders.slice(0, columnIndex + 1)\n\t\t.filter((header: string) => header === key);\n\n\tconst groupNames = getGroupNames(chartData);\n\tconst newChartData = [...chartData];\n\n\t// Change the keys of all the datapoints associated with the key\n\t// in the given index.\n\tgroupNames.forEach((groupName: string) => {\n\t\t// Account for duplicate keys.\n\t\tlet counter = previousDuplicates.length;\n\t\tfor (let i = 0; i < newChartData.length; i++) {\n\t\t\tif (newChartData[i].group !== groupName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (tableHeaders[columnIndex] === newChartData[i].key) {\n\t\t\t\tif (counter <= 1) {\n\t\t\t\t\tnewChartData[i].key = newKey;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t}\n\t});\n\n\tif (updateData) {\n\t\tupdateData(newChartData);\n\t}\n\n\treturn newChartData;\n};\n\nexport const updateDatapoint = (\n\trowIndex: number,\n\tcolumnIndex: number,\n\tchartData: any[],\n\tnewDatapoint: any,\n\theaders?: string[],\n\tupdateData?: (newData: any) => void\n) => {\n\t// To prevent `no-param-reassign` lint error.\n\tconst tableHeaders = headers || getTableHeaders(chartData);\n\tlet groupIndex = rowIndex;\n\tlet keyIndex = columnIndex;\n\n\tif (!chartData.length || !tableHeaders) {\n\t\treturn chartData;\n\t}\n\n\tif (keyIndex > tableHeaders.length - 1) {\n\t\tkeyIndex = tableHeaders.length - 1;\n\t}\n\n\tconst key = tableHeaders[keyIndex];\n\tconst previousDuplicates = tableHeaders.slice(0, keyIndex + 1).filter((header: string) => header === key);\n\n\tconst groupNames = getGroupNames(chartData);\n\tif (groupIndex > groupNames.length - 1) {\n\t\tgroupIndex = groupNames.length - 1;\n\t}\n\tconst groupToUpdate = groupNames[groupIndex];\n\tconst newChartData = [...chartData];\n\n\t// Account for duplicate keys.\n\tlet counter = previousDuplicates.length;\n\t// Find the correct datapoint associated with the given\n\t// `rowIndex` and `columnIndex` of the table and modify.\n\tfor (let i = 0; i < newChartData.length; i++) {\n\t\tif (newChartData[i].group !== groupToUpdate) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (newChartData[i].key === key) {\n\t\t\tif (counter <= 1) {\n\t\t\t\tnewChartData[i].value = newDatapoint.value;\n\t\t\t\tnewChartData[i].date = newDatapoint.date;\n\t\t\t\tif (updateData) {\n\t\t\t\t\tupdateData(newChartData);\n\t\t\t\t}\n\t\t\t\treturn newChartData;\n\t\t\t}\n\t\t\tcounter--;\n\t\t}\n\t}\n\n\tif (updateData) {\n\t\tupdateData(newChartData);\n\t}\n\n\treturn newChartData;\n};\n","import React from 'react';\n\nimport { OverflowMenu, OverflowMenuItem } from 'carbon-components-react';\nimport {\n\taddColumn,\n\tremoveColumn,\n\tgenerateColumn\n} from '../data-table-tools';\nimport { DataTableState } from '../data-table';\n\nexport interface HeaderOverflowProps {\n\tstate: DataTableState,\n\tupdateData: (chartData: any) => void,\n\tcolumnIndex: number,\n\tchart: any\n}\n\nexport const HeaderOverflow = ({ state, updateData, columnIndex, chart }: HeaderOverflowProps) => (\n\t<OverflowMenu\n\t\tariaLabel='Table options'\n\t\ticonDescription=''\n\t\tonClick={\n\t\t\t(event: { stopPropagation: () => void; }) => { event.stopPropagation(); }\n\t\t}>\n\t\t<OverflowMenuItem\n\t\t\titemText='Add column left'\n\t\t\tonClick={() =>\n\t\t\t\taddColumn(columnIndex, chart.data, generateColumn(chart.data), state.headers, updateData)\n\t\t\t} />\n\t\t<OverflowMenuItem\n\t\t\titemText='Add column right'\n\t\t\tonClick={() =>\n\t\t\t\taddColumn(columnIndex + 1, chart.data, generateColumn(chart.data), state.headers, updateData)\n\t\t\t} />\n\t\t<OverflowMenuItem\n\t\t\tisDelete\n\t\t\titemText='Remove column'\n\t\t\tonClick={() => removeColumn(columnIndex, chart.data, state.headers, updateData)} />\n\t</OverflowMenu>\n);\n","import React from 'react';\n\nimport { HeaderOverflow } from './header-overflow';\n\nimport {\n\tTableHead,\n\tTableHeader,\n\tTableRow,\n\tTextInput\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { updateKey } from '../data-table-tools';\nimport { DataTableState } from '../data-table';\n\nconst labelInput = css`\n\tbackground: #e0e0e0;\n\tmin-width: 200px;\n\tborder: 0px;\n`;\n\nexport interface DataTableHeaderProps {\n\tstate: DataTableState,\n\tupdateData: (chartData: any[]) => void,\n\tchart: any\n}\n\nexport const DataTableHeader = ({ state, updateData, chart }: DataTableHeaderProps) => (\n\t<TableHead>\n\t\t<TableRow>\n\t\t\t<TableHeader />\n\t\t\t{\n\t\t\t\tstate.headers.map((header: string, columnIndex: number) => (\n\t\t\t\t\t<TableHeader key={`header-${state.columnKeys[columnIndex]}`}>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tclassName={labelInput}\n\t\t\t\t\t\t\tlabelText=''\n\t\t\t\t\t\t\tid={`header-input-${state.columnKeys[columnIndex]}`}\n\t\t\t\t\t\t\taria-label='Modify label'\n\t\t\t\t\t\t\tdefaultValue={header}\n\t\t\t\t\t\t\tonChange={(event: any) => updateKey(\n\t\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\t\tchart.data,\n\t\t\t\t\t\t\t\tevent.target.value,\n\t\t\t\t\t\t\t\tstate.headers,\n\t\t\t\t\t\t\t\tupdateData\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<HeaderOverflow\n\t\t\t\t\t\t\tcolumnIndex={columnIndex}\n\t\t\t\t\t\t\tchart={chart}\n\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t\tupdateData={updateData} />\n\t\t\t\t\t</TableHeader>\n\t\t\t\t))\n\t\t\t}\n\t\t</TableRow>\n\t</TableHead>\n);\n","import React from 'react';\n\nimport {\n\tTableCell,\n\tTextInput,\n\tOverflowMenu,\n\tOverflowMenuItem\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport {\n\tupdateGroup,\n\tgenerateRow,\n\tremoveRow,\n\taddRow\n} from '../data-table-tools';\nimport { DataTableState } from '../data-table';\n\nconst datasetInputCell = css`\n\tdisplay: flex;\n\tmin-width: 200px;\n`;\n\nconst datasetInput = css`\n\tborder: 0px;\n\tbackground: white;\n`;\n\nexport interface DatasetInputCellProps {\n\tstate: DataTableState,\n\tvalue: string,\n\tupdateData: (chartData: any[]) => void,\n\trowIndex: number,\n\tchart: any\n}\n\nexport const DatasetInputCell = ({\n\tvalue,\n\tupdateData,\n\tchart,\n\trowIndex,\n\tstate\n}: DatasetInputCellProps) => (\n\t<TableCell className={datasetInputCell} key={`dataset-${state.rowKeys[rowIndex]}`}>\n\t\t<TextInput\n\t\t\tclassName={datasetInput}\n\t\t\tid={`dataset-${state.rowKeys[rowIndex]}`}\n\t\t\taria-label='Modify dataset name'\n\t\t\tlabelText=''\n\t\t\tdefaultValue={value}\n\t\t\tonChange={(event: any) => updateGroup(rowIndex, chart.data, event.target.value, updateData)} />\n\t\t<OverflowMenu\n\t\t\tariaLabel='Table options'\n\t\t\ticonDescription=''\n\t\t\tstyle={{ margin: '0px' }}\n\t\t\tonClick={(event: any) => { event.stopPropagation(); }}>\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText='Add dataset below'\n\t\t\t\tonClick={() => addRow(rowIndex + 1, chart.data, generateRow(chart.data), updateData)} />\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText='Add dataset above'\n\t\t\t\tonClick={() => addRow(rowIndex, chart.data, generateRow(chart.data), updateData)} />\n\t\t\t<OverflowMenuItem\n\t\t\t\tisDelete\n\t\t\t\titemText='Remove row'\n\t\t\t\tonClick={() => removeRow(rowIndex, chart.data, updateData)} />\n\t\t</OverflowMenu>\n\t</TableCell>\n);\n","import React from 'react';\n\nimport {\n\tDatePicker,\n\tDatePickerInput,\n\tTableCell,\n\tTextInput\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { updateDatapoint } from '../data-table-tools';\nimport { DataTableState } from '../data-table';\n\nconst datapointInput = css`\n\twidth: 100%;\n\tborder-bottom: 0px;\n\tbackground: white;\n`;\n\nconst tableDatePicker = css`\n\tinput {\n\t\tbackground: white;\n\t\tborder-top: 1px solid #e0e0e0;\n\t\tborder-bottom: none;\n\t}\n`;\n\nexport interface DatapointInputCellProps {\n\tstate: DataTableState,\n\tdatapoint: any,\n\tupdateData: (chartData: any[]) => void,\n\tchart: any,\n\trowIndex: number,\n\tcolumnIndex: number,\n\tisTimeSeries: boolean\n}\n\nexport const DatapointInputCell = ({\n\tdatapoint,\n\tupdateData,\n\tchart,\n\trowIndex,\n\tcolumnIndex,\n\tisTimeSeries,\n\tstate\n}: DatapointInputCellProps) => (\n\t<TableCell key={`datapoint-${state.rowKeys[rowIndex]}-${state.columnKeys[columnIndex]}`}>\n\t\t<TextInput\n\t\t\tclassName={datapointInput}\n\t\t\taria-label='Modify datapoint value'\n\t\t\tplaceholder='null'\n\t\t\tid={`datapoint-${state.rowKeys[rowIndex]}-${state.columnKeys[columnIndex]}`}\n\t\t\tlabelText=''\n\t\t\tdefaultValue={\n\t\t\t\tdatapoint.value === null || datapoint.value === undefined ? '' : datapoint.value\n\t\t\t}\n\t\t\tonChange={(event: any) => {\n\t\t\t\tupdateDatapoint(\n\t\t\t\t\trowIndex,\n\t\t\t\t\tcolumnIndex,\n\t\t\t\t\tchart.data,\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: Number(event.target.value),\n\t\t\t\t\t\tdate: datapoint.date\n\t\t\t\t\t},\n\t\t\t\t\tstate.headers,\n\t\t\t\t\tupdateData\n\t\t\t\t);\n\t\t\t}} />\n\t\t{\n\t\t\tisTimeSeries\n\t\t\t&& <DatePicker\n\t\t\t\tclassName={tableDatePicker}\n\t\t\t\tid={`datepicker-${state.rowKeys[rowIndex]}-${state.columnKeys[columnIndex]}`}\n\t\t\t\tdatePickerType='single'\n\t\t\t\tvalue={datapoint.date}\n\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\tupdateDatapoint(\n\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\tchart.data,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: Number(datapoint.value),\n\t\t\t\t\t\t\tdate: event\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstate.headers,\n\t\t\t\t\t\tupdateData\n\t\t\t\t\t);\n\t\t\t\t}}>\n\t\t\t\t<DatePickerInput\n\t\t\t\t\tlabelText=''\n\t\t\t\t\taria-label='Modify datapoint date'\n\t\t\t\t\ticonDescription='Open calendar'\n\t\t\t\t\tid={`datepicker-input-${state.rowKeys[rowIndex]}-${state.columnKeys[columnIndex]}`}/>\n\t\t\t</DatePicker>\n\t\t}\n\t</TableCell>\n);\n","import React from 'react';\n\nimport { DatasetInputCell } from './dataset-input-cell';\nimport { DatapointInputCell } from './datapoint-input-cell';\n\nimport { TableBody, TableRow } from 'carbon-components-react';\nimport { DataTableState } from '../data-table';\n\nexport interface DataTableBodyProps {\n\tstate: DataTableState,\n\tupdateData: (chartData: any[]) => void,\n\tchart: any,\n\tisTimeSeries: boolean\n}\n\nexport const DataTableBody = ({\n\tstate,\n\tupdateData,\n\tchart,\n\tisTimeSeries\n}: DataTableBodyProps) => (\n\t<TableBody aria-live='off'>\n\t\t{\n\t\t\tstate.body.map((row: any, rowIndex: number) => {\n\t\t\t\tconst [datasetName] = row;\n\t\t\t\tif (datasetName && !datasetName.toLowerCase().includes(state.filter.toLowerCase())) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<TableRow key={`group-${state.rowKeys[rowIndex]}`}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.map((datapoint: any, columnIndex: number) => {\n\t\t\t\t\t\t\t\tif (columnIndex === 0) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<DatasetInputCell\n\t\t\t\t\t\t\t\t\t\t\tkey={`dataset-cell-${state.rowKeys[rowIndex]}`}\n\t\t\t\t\t\t\t\t\t\t\tvalue={datapoint}\n\t\t\t\t\t\t\t\t\t\t\tupdateData={updateData}\n\t\t\t\t\t\t\t\t\t\t\trowIndex={rowIndex}\n\t\t\t\t\t\t\t\t\t\t\tchart={chart}\n\t\t\t\t\t\t\t\t\t\t\tstate={state} />\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<DatapointInputCell\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line max-len\n\t\t\t\t\t\t\t\t\t\tkey={`datapoint-cell-${state.rowKeys[rowIndex]}-${state.columnKeys[columnIndex]}`}\n\t\t\t\t\t\t\t\t\t\tdatapoint={datapoint}\n\t\t\t\t\t\t\t\t\t\tupdateData={updateData}\n\t\t\t\t\t\t\t\t\t\trowIndex={rowIndex}\n\t\t\t\t\t\t\t\t\t\tisTimeSeries={isTimeSeries}\n\t\t\t\t\t\t\t\t\t\tchart={chart}\n\t\t\t\t\t\t\t\t\t\t// columnIndex - 1 to account for dataset name in row\n\t\t\t\t\t\t\t\t\t\tcolumnIndex={columnIndex - 1}\n\t\t\t\t\t\t\t\t\t\tstate={state} />\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</TableRow>\n\t\t\t\t);\n\t\t\t})\n\t\t}\n\t</TableBody>\n);\n","import React from 'react';\n\nimport {\n\tFileUploaderButton,\n\tTableToolbar,\n\tTableToolbarAction,\n\tTableToolbarContent,\n\tTableToolbarSearch,\n\tTableToolbarMenu\n} from 'carbon-components-react';\nimport { Download32 } from '@carbon/icons-react';\nimport { css } from 'emotion';\nimport {\n\tsaveBlob,\n\tgetFullFileName,\n\tprocessDataFile,\n\twarningNotificationProps,\n\terrorNotificationProps\n} from '../../../utils/file-tools';\nimport { DataTableState } from './data-table';\nconst toolbarContent = css`\n\tbackground: white;\n`;\n\nexport interface DataTableToolbarProps {\n\tstate: DataTableState,\n\tsetState: (state: DataTableState) => void,\n\tupdateData: (chartData: any[]) => void,\n\tsetNotificationState: (notificationState: any) => void,\n\tchart: any,\n\tisTimeSeries: boolean\n}\n\nexport const DataTableToolbar = ({\n\tstate,\n\tsetState,\n\tupdateData,\n\tsetNotificationState,\n\tchart,\n\tisTimeSeries\n}: DataTableToolbarProps) => {\n\tconst generateCsvFile = () => {\n\t\tlet generatedCsvString = `group,${ state.headers.join() }\\n`;\n\n\t\tstate.body.forEach((row: any) => {\n\t\t\tconst datasetString = row.reduce((generatedString: string, datapoint: any, index: number) => {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\treturn generatedString.concat(`${datapoint},`);\n\t\t\t\t}\n\n\t\t\t\tif (datapoint.value !== undefined) {\n\t\t\t\t\tif (datapoint.date !== undefined && isTimeSeries) {\n\t\t\t\t\t\treturn generatedString.concat(`${datapoint.value}|${datapoint.date},`);\n\t\t\t\t\t}\n\t\t\t\t\treturn generatedString.concat(`${datapoint.value},`);\n\t\t\t\t}\n\n\t\t\t\treturn generatedString;\n\t\t\t}, '').replace(/.$/, '\\n');\n\n\t\t\tgeneratedCsvString = generatedCsvString.concat(datasetString);\n\t\t});\n\n\t\t// Remove whitespace from beginning and end of a string.\n\t\tgeneratedCsvString = generatedCsvString.replace(/^\\s+|\\s+$/g, '');\n\n\t\treturn generatedCsvString;\n\t};\n\n\tconst generateJsonFile = () => JSON.stringify(chart.data);\n\n\tconst downloadFile = (fileContent: string, mimeType: string = 'text/csv') => {\n\t\tconst blob = new Blob([fileContent], { type: mimeType });\n\t\tconst fileName = getFullFileName('data', mimeType);\n\t\tsaveBlob(blob, fileName);\n\t};\n\n\tconst handleUpload = (file: FileList) => {\n\t\tconst [fileUploaded] = Array.from(file);\n\t\tprocessDataFile(fileUploaded).then((result: any) => {\n\t\t\tif (result.wasDataModified) {\n\t\t\t\tsetNotificationState({\n\t\t\t\t\tnotificationProps: { ...warningNotificationProps },\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tbackupData: chart.data\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tupdateData(result.data);\n\t\t}).catch((err) => {\n\t\t\tsetNotificationState({\n\t\t\t\tnotificationProps: {\n\t\t\t\t\t...errorNotificationProps,\n\t\t\t\t\tsubtitle: err\n\t\t\t\t},\n\t\t\t\tvisible: true\n\t\t\t});\n\t\t});\n\t};\n\n\treturn (\n\t\t<TableToolbar>\n\t\t\t<TableToolbarContent className={toolbarContent}>\n\t\t\t\t<TableToolbarSearch\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tsetState({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tfilter: event.target.value\n\t\t\t\t\t\t});\n\t\t\t\t\t}} />\n\t\t\t</TableToolbarContent>\n\t\t\t<TableToolbarMenu\n\t\t\t\tstyle={{ background: 'white' }}\n\t\t\t\tariaLabel='Download'\n\t\t\t\ttitle='Download'\n\t\t\t\trenderIcon={() => <Download32 style={{ height: '100%' }} />}>\n\t\t\t\t<TableToolbarAction primaryFocus onClick={() => downloadFile(generateCsvFile(), 'text/csv')}>\n\t\t\t\t\tExport as .csv\n\t\t\t\t</TableToolbarAction>\n\t\t\t\t<TableToolbarAction onClick={() => downloadFile(generateJsonFile(), 'application/json')}>\n\t\t\t\t\tExport as .json\n\t\t\t\t</TableToolbarAction>\n\t\t\t</TableToolbarMenu>\n\t\t\t<FileUploaderButton\n\t\t\t\tsize='small'\n\t\t\t\ttitle='Upload data'\n\t\t\t\tlabelText=\"Upload data\"\n\t\t\t\tmultiple={false}\n\t\t\t\tonChange={(event: any) => { handleUpload(event.target.files); }}>\n\t\t\t</FileUploaderButton>\n\t\t</TableToolbar>\n\t);\n};\n","import React, {\n\tuseState,\n\tuseRef,\n\tuseContext\n} from 'react';\n\nimport { DataTableHeader } from './data-table-header/data-table-header';\nimport { DataTableBody } from './data-table-body/data-table-body';\n\nimport {\n\tTable,\n\tTableContainer,\n\tInlineNotification,\n\tNotificationActionButton\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { warningNotificationProps } from '../../../utils/file-tools';\nimport { ChartActionType, ChartsContext } from '../../../context/charts-context';\nimport { getTableHeaders, getTableBody } from './data-table-tools';\nimport { DataTableToolbar } from './data-table-toolbar';\nimport { debounce } from 'lodash';\n\nconst dataTable = css`\n\ttd, th {\n\t\tpadding: 0;\n\t}\n\ttd, tr {\n\t\tbackground: white;\n\t\theight: auto;\n\t}\n\ttbody tr:hover td {\n\t\tbackground: white;\n\t}\n\t.bx--table-header-label {\n\t\tpadding-bottom: 0;\n\t}\n\t.bx--label {\n\t\tdisplay: none;\n\t}\n\t.bx--table-header-label {\n\t\tdisplay: flex;\n\t}\n`;\n\nconst tableWrapper = css`\n\toverflow-x: scroll;\n\twidth: 100%;\n`;\n\nconst tableContainer = css`\n\tmin-width: 14rem;\n\twidth: 100%;\n\tmargin-top: 1rem;\n\t.bx--data-table-header {\n\t\tbackground: white;\n\t}\n`;\n\n// eslint-disable-next-line no-empty-function\nlet updateData = (newData: any) => {};\nconst doValueChange = debounce((newData: any) => {\n\tupdateData(newData);\n}, 60);\n\nexport interface DataTableState {\n\theaders: string[],\n\tbody: any[],\n\tcolumnKeys: number[],\n\trowKeys: number[],\n\tfilter: string\n}\n\nexport const DataTable = ({ chart }: any) => {\n\tconst [,dispatch] = useContext(ChartsContext);\n\t/**\n\t * Static counter for unique key/id generation for data table inputs.\n\t */\n\tconst inputCounter = useRef(0);\n\n\tconst headers = getTableHeaders(chart.data);\n\tconst body = getTableBody(chart.data, headers);\n\tconst [state, setState] = useState<DataTableState>({\n\t\theaders,\n\t\tbody,\n\t\t// Keys should only change if new columns or rows are added\n\t\tcolumnKeys: headers.map(() => inputCounter.current++),\n\t\trowKeys: body.map(() => inputCounter.current++),\n\t\tfilter: ''\n\t});\n\n\tconst [notificationState, setNotificationState] = useState<any>({\n\t\tnotificationProps: { ...warningNotificationProps },\n\t\tvisible: false,\n\t\tbackupData: []\n\t});\n\n\tupdateData = (newData: any) => {\n\t\tconst headers = getTableHeaders(newData);\n\t\tconst body = getTableBody(newData);\n\t\tsetState({\n\t\t\t...state,\n\t\t\theaders,\n\t\t\tbody,\n\t\t\tcolumnKeys: headers.length === state.columnKeys.length\n\t\t\t\t? state.columnKeys\n\t\t\t\t: headers.map(() => inputCounter.current++),\n\t\t\trowKeys: body.length === state.rowKeys.length\n\t\t\t\t? state.rowKeys\n\t\t\t\t: body.map(() => inputCounter.current++)\n\t\t});\n\n\t\tdispatch({\n\t\t\ttype: ChartActionType.UPDATE_ONE,\n\t\t\tdata: {\n\t\t\t\tid: chart.id,\n\t\t\t\tdata: newData\n\t\t\t}\n\t\t});\n\t};\n\n\tconst isTimeSeries = () => {\n\t\tif (!chart || !chart.options || !chart.options.rawChartOptions.axes) {\n\t\t\treturn false;\n\t\t}\n\t\t// Chart is time series if any axes with the scaleType 'time' exist.\n\t\treturn Object.keys(chart.options.rawChartOptions.axes).some((axisPosition: string) => (\n\t\t\tchart.options.rawChartOptions.axes[axisPosition].scaleType === 'time'\n\t\t));\n\t};\n\n\treturn (\n\t\t<section aria-label={`Data table for '${chart.title}'`} tabIndex={0}>\n\t\t\t{\n\t\t\t\tnotificationState.visible\n\t\t\t\t\t? <InlineNotification\n\t\t\t\t\t\t{ ...notificationState.notificationProps }\n\t\t\t\t\t\tonCloseButtonClick={() => setNotificationState({\n\t\t\t\t\t\t\t...notificationState,\n\t\t\t\t\t\t\tvisible: false\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\tnotificationState.notificationProps.kind === 'warning'\n\t\t\t\t\t\t\t\t&& <NotificationActionButton\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tupdateData(notificationState.backupData);\n\t\t\t\t\t\t\t\t\t\tsetNotificationState({\n\t\t\t\t\t\t\t\t\t\t\t...notificationState,\n\t\t\t\t\t\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\t\t\t\t\t\tbackupData: []\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\tRevert change\n\t\t\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t} />\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\t<TableContainer\n\t\t\t\tclassName={tableContainer}\n\t\t\t\ttitle='Chart data'\n\t\t\t\tdescription='Upload data to populate the table or get started with default data'>\n\t\t\t\t<DataTableToolbar\n\t\t\t\t\tchart={chart}\n\t\t\t\t\tisTimeSeries={isTimeSeries()}\n\t\t\t\t\tupdateData={doValueChange}\n\t\t\t\t\tsetNotificationState={setNotificationState}\n\t\t\t\t\tstate={state}\n\t\t\t\t\tsetState={setState} />\n\t\t\t\t<div className={tableWrapper}>\n\t\t\t\t\t<Table className={dataTable}>\n\t\t\t\t\t\t<DataTableHeader\n\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t\tupdateData={doValueChange}\n\t\t\t\t\t\t\tchart={chart} />\n\t\t\t\t\t\t<DataTableBody\n\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t\tupdateData={doValueChange}\n\t\t\t\t\t\t\tisTimeSeries={isTimeSeries()}\n\t\t\t\t\t\t\tchart={chart} />\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t</TableContainer>\n\t\t</section>\n\t);\n};\n","import { css } from 'emotion';\nimport React from 'react';\nimport { Chart } from './chart';\nimport { ChartOptionsPane } from './chart-options-pane';\n\nconst editChartStyle = css`\n    display: flex;\n    background-color: white;\n`;\n\nexport const EditChart = ({ chart, setChart }: any) => {\n\treturn <div className={editChartStyle}>\n        <ChartOptionsPane chart={chart} setChart={setChart} />\n\t\t<Chart chart={chart} />\n\t</div>;\n};\n","import React, { useContext, useEffect } from 'react';\nimport { css } from 'emotion';\nimport { EditHeader } from './edit-header';\nimport { DataTable } from './data-table/data-table';\nimport { ChartActionType, ChartsContext, useFetchOne } from '../../context/charts-context';\nimport { EditChart } from '../../components/edit-chart';\n\nconst editPageContent = css`\n\tposition: absolute;\n\twidth: 100vw;\n\theight: 100%;\n\ttop: 2rem;\n\tmax-width: 100%;\n\tbackground: #f4f4f4;\n\theight: 100%;\n\tpadding: 1rem 2rem;\n`;\n\nexport const Edit = ({ match }: any) => {\n\tconst [state, dispatch] = useContext(ChartsContext);\n\tuseFetchOne(match.params.id, dispatch);\n\tconst chart = state.charts.find((chart: any) => chart.id === match.params.id);\n\n\tconst setChart = (updatedChart: any) => {\n\t\tdispatch({\n\t\t\ttype: ChartActionType.UPDATE_ONE,\n\t\t\tdata: updatedChart\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tif (chart && chart.title) {\n\t\t\tdocument.title = `Edit \"${chart.title}\"`;\n\t\t} else {\n\t\t\tdocument.title = 'Edit chart';\n\t\t}\n\t}, [chart]);\n\n\treturn (\n\t\t<div\n\t\t\tid='edit-content'\n\t\t\tclassName={editPageContent}>\n\t\t\t{ chart && <EditHeader chart={chart}/> }\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tchart\n\t\t\t\t\t&& <>\n\t\t\t\t\t\t<EditChart chart={chart} setChart={setChart} />\n\t\t\t\t\t\t{ chart.data && <DataTable chart={chart} /> }\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { useState } from 'react';\nimport { css } from 'emotion';\nimport {\n\tButton,\n\tCodeSnippet,\n\tContentSwitcher,\n\tForm,\n\tFormLabel,\n\tSwitch,\n\tTextInput\n} from 'carbon-components-react';\n\nimport {\n\tCol, LinkButton, Main, Row\n} from './../components';\nimport { marginTop } from './../styles';\n\nconst placeholder = css`height: 100px; background: #f3f3f3;`;\n\nconst switchDataType = (name: string) => {\n\tif (name === 'upload') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<TextInput id=\"createTitle\" labelText=\"Title\" placeholder=\"My awesome dataset\" />\n\n\t\t\t\t<FormLabel className={marginTop()}>Files</FormLabel>\n\t\t\t\t<div className={placeholder}>\n\t\t\t\t\tuploader\n\t\t\t\t</div>\n\n\t\t\t\t<FormLabel className={marginTop()}>Mapping</FormLabel>\n\t\t\t\t<div className={placeholder}>\n\t\t\t\t\tmapping of cols/rows to fields\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n\n\tif (name === 'api') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<TextInput id=\"createTitle\" labelText=\"Title\" placeholder=\"My awesome dataset\" />\n\n\t\t\t\t<FormLabel className={marginTop()}>Endpoint</FormLabel>\n\t\t\t\t<CodeSnippet>https://carbon-charts-builder.ibm.com/api/upload/eGVub24gaXMgYXdlc29tZQ==</CodeSnippet>\n\n\t\t\t\t<FormLabel className={marginTop()}>Get started</FormLabel>\n\t\t\t\t<div className={placeholder}>\n\t\t\t\t\thow to use endpoint\n\t\t\t\t</div>\n\n\t\t\t\t<FormLabel className={marginTop()}>Mapping</FormLabel>\n\t\t\t\t<div className={placeholder}>\n\t\t\t\t\tdeclaration of availiable fields\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n\treturn null;\n};\n\nexport const AddData = () => {\n\tconst [type, setType] = useState('upload');\n\n\treturn (\n\t\t<Main>\n\t\t\t<Row>\n\t\t\t\t<h1 className=\"bx--col\">New dataset</h1>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col cols={{ sm: 2 }}>\n\t\t\t\t\t<ContentSwitcher onChange={(event: any) => setType(event.name)}>\n\t\t\t\t\t\t<Switch name=\"upload\" text=\"Upload\"/>\n\t\t\t\t\t\t<Switch name=\"api\" text=\"Endpoint\"/>\n\t\t\t\t\t</ContentSwitcher>\n\t\t\t\t\t<Form className={marginTop()}>\n\t\t\t\t\t\t{switchDataType(type)}\n\n\t\t\t\t\t\t<LinkButton className={marginTop()} kind=\"secondary\" to=\"/data\">Cancel</LinkButton>\n\n\t\t\t\t\t\t<Button className={marginTop()}>Save</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Main>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport { ContentSwitcher, Switch } from 'carbon-components-react';\n\n// keep the enum order same as the switch order so context switcher\n// knows to select the correct one. Shout if you have a cleaner alternative.\nexport enum ChartGroupDisplayed {\n\tAllCharts,\n\tTemplates\n}\n\nconst dashboardHeaderWrapper = css`\n\tdisplay: flex;\n\tmargin: 2rem 0;\n\n\t// 676px is when the content switcher becomes too small to show full text, moves the\n\t// content switcher below the title at this point.\n\t@media screen and (max-width: 676px) {\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nconst chartTitle = css`\n\twidth: 100%;\n`;\n\nconst contentSwitcher = css`\n\twidth: 450px;\n`;\n\nexport const DashboardHeader = ({ onDisplayedSwitchHandler, chartGroupDisplayed }: any) => (\n\t<div className={dashboardHeaderWrapper}>\n\t\t<h2 className={chartTitle}>Charts</h2>\n\t\t<ContentSwitcher\n\t\t\tclassName={contentSwitcher}\n\t\t\tonChange={(event: any) => onDisplayedSwitchHandler(event.name)}\n\t\t\tselectedIndex={chartGroupDisplayed}>\n\t\t\t<Switch name={ChartGroupDisplayed.AllCharts} text='All charts' />\n\t\t\t<Switch name={ChartGroupDisplayed.Templates} text='Templates only' />\n\t\t</ContentSwitcher>\n\t</div>\n);\n","import React, { useState } from 'react';\n\nimport { ChartWizardModals } from './chart-wizard';\n\nimport { Modal } from 'carbon-components-react';\nimport { ChartLineData32, DocumentAdd32 } from '@carbon/icons-react';\nimport { css } from 'emotion';\nimport { SelectionTile } from '../../../components/selection-tile';\n\nconst createChartTiles = css`\n\tdisplay: flex;\n\tmargin-top: 30px;\n\tmargin-left: 15px;\n\tmargin-right: 15px;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n`;\n\nconst createChartTile = css`\n\twidth: 48%;\n\theight: 200px;\n\t.bx--tile {\n\t\theight: 100%;\n\t}\n`;\n\nexport enum CreateOptions {\n\tUPLOAD_DATA,\n\tCHOOSE_TYPE\n}\n\nexport interface CreateChartModalProps {\n\tshouldDisplay: boolean,\n\tsetShouldDisplay: (shouldDisplay: boolean) => void,\n\tsetDisplayedModal: (displayedModal: ChartWizardModals | null) => void,\n\tsetLastVisitedModal: (lastVisitedModal: ChartWizardModals) => void\n}\n\nexport const CreateChartModal = (props: CreateChartModalProps) => {\n\tconst [selectedCreateOption, setSelectedCreateOption] = useState<CreateOptions | null>(null);\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\thasForm\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setShouldDisplay(false);\n\t\t\t\tprops.setLastVisitedModal(ChartWizardModals.CREATE_CHART_MODAL);\n\t\t\t}}\n\t\t\tonRequestSubmit={\n\t\t\t\t() => {\n\t\t\t\t\tprops.setDisplayedModal(\n\t\t\t\t\t\tselectedCreateOption === CreateOptions.UPLOAD_DATA\n\t\t\t\t\t\t\t? ChartWizardModals.UPLOAD_DATA_MODAL\n\t\t\t\t\t\t\t: ChartWizardModals.CHOOSE_CHART_MODAL\n\t\t\t\t\t);\n\t\t\t\t\tprops.setLastVisitedModal(ChartWizardModals.CREATE_CHART_MODAL);\n\t\t\t\t}\n\t\t\t}\n\t\t\tonRequestClose={() => {\n\t\t\t\tprops.setShouldDisplay(false);\n\t\t\t\tprops.setLastVisitedModal(ChartWizardModals.CREATE_CHART_MODAL);\n\t\t\t}}\n\t\t\tmodalHeading='Create new chart'\n\t\t\tprimaryButtonText='Next'\n\t\t\tprimaryButtonDisabled={selectedCreateOption === null}\n\t\t\tsecondaryButtonText='Cancel'>\n\t\t\t<p>Start with uploading the chart data or create a new chart from scratch.</p>\n\t\t\t<div className={createChartTiles}>\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createChartTile}\n\t\t\t\t\tonChange={() => { setSelectedCreateOption(CreateOptions.UPLOAD_DATA); }}\n\t\t\t\t\ticon={<DocumentAdd32 />}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.UPLOAD_DATA}\n\t\t\t\t\tlabel='Upload data'/>\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createChartTile}\n\t\t\t\t\tonChange={() => { setSelectedCreateOption(CreateOptions.CHOOSE_TYPE); }}\n\t\t\t\t\ticon={<ChartLineData32 />}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.CHOOSE_TYPE}\n\t\t\t\t\tlabel='Pick a chart type'/>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { css } from 'emotion';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport {\n\tOverflowMenu,\n\tOverflowMenuItem,\n\tSkeletonText,\n\tTile\n} from 'carbon-components-react';\nimport { ModalContext, ModalActionType } from '../../context/modal-context';\nimport { useEffect } from 'react';\nimport { getChartPreview, RenderProps } from '../../utils/chart-tools';\nimport { useState } from 'react';\n\nconst tileWrapper = css`\n\tmargin: 0.75rem;\n\tpadding: 0;\n\theight: 250px;\n\twidth: 350px;\n\tbox-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.3);\n\tbackground-color: #ffffff;\n\tfloat: left;\n`;\n\nconst tileStyle = css`\n\tpadding: 0;\n\tbackground-color: #ffffff;\n`;\n\nconst tileInnerWrapperBase = css`\n\talign-items: end;\n`;\n\nconst tileInnerWrapper = css`\n\t${tileInnerWrapperBase}\n\tmargin: 8px;\n\th3 {\n\t\tfont-size: 1rem;\n\t\tpadding: 5px;\n\t\tpadding-left: 16px;\n\t}\n\t.dashboard-link {\n\t\tcolor: black;\n\t\ttext-decoration: none;\n\t\ttransition: 0.3s;\n\t}\n\t.dashboard-link:hover {\n\t\topacity: 0.6;\n\t\tcolor: #6f6f6f;\n\t\tcursor: pointer;\n\t}\n\tspan {\n\t\tpadding-left: 16px;\n\t\tfont-style: italic;\n\t\tfont-size: 0.75rem;\n\t}\n`;\n\nconst chartImage = css`\n\twidth: auto;\n\theight: auto;\n\tmax-height: 173px;\n\tmax-width: 333px;\n\tdisplay: block;\n\tpadding-top: 8px;\n`;\nconst chartOverflow = css`\n\tright: 5px;\n\tposition: absolute;\n\tmargin-top: 1rem;\n\tpadding: 5px;\n`;\nconst chartInfo = css`\n\tdisplay: flex;\n`;\n\nexport const ChartTile = ({\n\tchart,\n\ttitle,\n\tto,\n\tlastModified,\n\tsetModalChart\n}: any) => {\n\tconst history = useHistory();\n\tconst [, dispatchModal] = useContext(ModalContext);\n\tconst [previewUrl, setPreviewUrl] = useState('');\n\tconst handleModalState = (modalAction: ModalActionType) => {\n\t\tsetModalChart(chart);\n\t\tdispatchModal({\n\t\t\ttype: modalAction,\n\t\t\tid: chart.id\n\t\t});\n\t};\n\n\tconst renderProps: RenderProps = {\n\t\tid: chart.id,\n\t\tname: chart.title,\n\t\twidth: 800,\n\t\theight: 400,\n\t\tpreview: {\n\t\t\tformat: 'png',\n\t\t\twidth: 330,\n\t\t\theight: 200\n\t\t}\n\t};\n\n\tconst resetPreview = async () => {\n\t\tconst imageBlob = await getChartPreview(chart, renderProps);\n\t\tconst reader = new FileReader();\n\t\treader.readAsDataURL(imageBlob ? imageBlob : new Blob());\n\t\treader.onloadend = () => {\n\t\t\tconst imageUrl: string = reader.result ? reader.result.toString() : '';\n\t\t\tsetPreviewUrl(imageUrl);\n\t\t};\n\t}\n\n\tuseEffect(() => {\n\t\tresetPreview();\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\treturn (\n\t\t<div className={tileWrapper}>\n\t\t\t<Tile className={tileStyle} >\n\t\t\t\t<div className={tileInnerWrapper}>\n\t\t\t\t\t<Link to={to}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tloading='lazy'\n\t\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\t\tclassName={chartImage}\n\t\t\t\t\t\t\talt={`chart preview: ${title}`} />\n\t\t\t\t\t\t\t{/* TODO actual preview images */}\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className={chartInfo}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to={to} className='dashboard-link'>\n\t\t\t\t\t\t\t\t<h3>{title}</h3>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<span>{lastModified ? lastModified : 'Last modified date unknown'}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<OverflowMenu\n\t\t\t\t\t\t\tclassName={chartOverflow}\n\t\t\t\t\t\t\tariaLabel='Chart options'\n\t\t\t\t\t\t\ticonDescription=''\n\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t(event: { stopPropagation: () => void; }) => { event.stopPropagation(); }\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Edit'\n\t\t\t\t\t\t\t\tonClick={() => { history.push(`/edit/${chart.id}`); }}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Export'\n\t\t\t\t\t\t\t\tonClick={() => { handleModalState(ModalActionType.setShareModal); }}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Duplicate'\n\t\t\t\t\t\t\t\tonClick={() => { handleModalState(ModalActionType.setDuplicationModal); }}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Reset preview'\n\t\t\t\t\t\t\t\tonClick={resetPreview}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Remove'\n\t\t\t\t\t\t\t\tonClick={() => { handleModalState(ModalActionType.setDeletionModal); }}\n\t\t\t\t\t\t\t\tisDelete />\n\t\t\t\t\t\t</OverflowMenu>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Tile>\n\t\t</div>\n\t);\n};\n\nexport const SkeletonChartTile = () => (\n\t<div className={tileWrapper}>\n\t\t<Tile>\n\t\t\t<div className={tileInnerWrapperBase}>\n\t\t\t\t<SkeletonText heading width='150px' />\n\t\t\t</div>\n\t\t</Tile>\n\t</div>\n);\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { ChartTile, SkeletonChartTile } from './chart-tile';\n\n// import the img placeholder svg\nimport placeholder from './../../assets/dashboard-empty-state.svg';\n\n// styles for placeholder\nconst svgStyle = css`\n\twidth: 25vw;\n\theight: auto;\n\tmax-width: 400px;\n`;\n\nconst placeholderContainer = css`\n\tmargin-top: 48px;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: calc(100vh - 48px);\n\tpadding: 24px;\n\tpadding-top: 150px;\n\talign-items: center;\n`;\n\nconst chartRowWrapper = css`\n\tmargin-top: 3rem;\n\tbackground: #f4f4f4;\n\tmin-width: 100%;\n\theight: 100%\n`;\n\nexport const ChartTileList = ({ charts, loaded, setModalChart }: any) => {\n\tconst getTilesOrPlaceholder = () => {\n\t\tif ((!charts || charts.length === 0) && loaded) {\n\t\t\treturn (\n\t\t\t\t<div className={placeholderContainer}>\n\t\t\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t\t\t<img alt=\"No charts exist\" src={placeholder} className={svgStyle} />\n\t\t\t\t\t\t<h3>You have no charts here.</h3>\n\t\t\t\t\t\t<p style={{ marginTop: '0.5em' }}>\n\t\t\t\t\t\t\tTo build a new chart, click <strong>New Chart</strong>.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (!loaded) {\n\t\t\t// make a new array and fill it with 0 to 4\n\t\t\tconst count = (new Array(5)).fill(0).map((_, i) => i);\n\t\t\treturn count.map((i) => <SkeletonChartTile key={i}/>);\n\t\t}\n\n\t\treturn charts.map((v: any) => (\n\t\t\t<ChartTile\n\t\t\t\tkey={v.id}\n\t\t\t\t{...v}\n\t\t\t\tchart={v}\n\t\t\t\tto={`/edit/${v.id}`}\n\t\t\t\t{...v.lastModified}\n\t\t\t\tsetModalChart={setModalChart}/>\n\t\t));\n\t};\n\n\treturn (\n\t\t<div className={chartRowWrapper}>\n\t\t\t{getTilesOrPlaceholder()}\n\t\t</div>\n\t);\n};\n","export enum ChartType {\n\tSIMPLE_BAR_CHART = 'simple-bar-chart',\n\tSCATTER_CHART = 'scatter-chart',\n\tDONUT_CHART = 'donut-chart',\n\tSTACKED_BAR_CHART = 'stacked-bar-chart',\n\tLINE_CHART = 'line-chart',\n\tAREA_CHART = 'area-chart',\n\tSTACKED_AREA_CHART = 'stacked-area-chart',\n\tHORIZONTAL_BAR_CHART = 'horizontal-bar-chart',\n\tBUBBLE_CHART = 'bubble-chart',\n\tGROUPED_BAR_CHART = 'grouped-bar-chart',\n\tPIE_CHART = 'pie-chart'\n}\n","import React, { useState } from 'react';\n\nimport { css } from 'emotion';\nimport {\n\tModal,\n\tFileUploaderButton,\n\tFileUploaderItem\n} from 'carbon-components-react';\nimport { ChartWizardModals } from './chart-wizard';\nimport { ChartType } from '../../../interfaces';\nimport { processDataFile } from '../../../utils/file-tools';\nimport { getGroupNames } from '../../../utils/chart-tools';\n\nconst fileUploaderModal = css`\n\tspan.bx--file__selected-file {\n\t\tbackground: white;\n\t\tmargin-top: 10px;\n\t}\n`;\n\nconst fileUploaderHeading = css`\n\tmargin-top: 2rem;\n`;\n\nexport interface UploadDataModalProps {\n\tshouldDisplay: boolean,\n\tsetShouldDisplay: (shouldDisplay: boolean) => void,\n\tsetUploadedData: (uploadedData: any) => void,\n\tsetDisplayedModal: (displayedModal: ChartWizardModals | null) => void,\n\tsetLastVisitedModal: (lastVisitedModal: ChartWizardModals) => void,\n\tsetRecommendedCharts: (recommendedCharts: ChartType[]) => void\n}\n\nexport const UploadDataModal = (props: UploadDataModalProps) => {\n\tconst [uploadedFile, setUploadedFile] = useState<any>(null);\n\tconst [fileErrorState, setFileErrorState] = useState({\n\t\tisFileInvalid: false,\n\t\terrorMessage: ''\n\t});\n\n\tconst generateChartRecommendations = (chartData: any) => {\n\t\tconst chartRecommendations: ChartType[] = [];\n\n\t\tconst groupNames = getGroupNames(chartData);\n\n\t\t// Very basic recommendation right now... work in progress :)\n\t\tif (groupNames.length === 1) {\n\t\t\tchartRecommendations.push.apply(chartRecommendations, [\n\t\t\t\tChartType.DONUT_CHART,\n\t\t\t\tChartType.PIE_CHART\n\t\t\t]);\n\t\t} else if (groupNames.length > 1) {\n\t\t\tchartRecommendations.push.apply(chartRecommendations, [\n\t\t\t\tChartType.SCATTER_CHART,\n\t\t\t\tChartType.SIMPLE_BAR_CHART,\n\t\t\t\tChartType.STACKED_BAR_CHART,\n\t\t\t\tChartType.HORIZONTAL_BAR_CHART,\n\t\t\t\tChartType.GROUPED_BAR_CHART,\n\t\t\t\tChartType.LINE_CHART,\n\t\t\t\tChartType.AREA_CHART,\n\t\t\t\tChartType.STACKED_AREA_CHART\n\t\t\t]);\n\t\t}\n\n\t\tprops.setRecommendedCharts(chartRecommendations);\n\t};\n\n\tconst onFileAdded = (event: FileList) => {\n\t\t// Clears error state which may have lingered from previous file\n\t\tsetFileErrorState({\n\t\t\tisFileInvalid: false,\n\t\t\terrorMessage: ''\n\t\t});\n\t\t// This takes the first file from the fileList, in case multiple files are uploaded.\n\t\tconst [fileUploaded] = Array.from(event);\n\t\tsetUploadedFile(fileUploaded);\n\t};\n\n\tconst onFileDelete = () => {\n\t\tsetFileErrorState({\n\t\t\tisFileInvalid: false,\n\t\t\terrorMessage: ''\n\t\t});\n\t\tsetUploadedFile(null);\n\t};\n\n\tconst handleFileUpload = async() => {\n\t\tprocessDataFile(uploadedFile).then((uploadedData: any) => {\n\t\t\tprops.setUploadedData(uploadedData);\n\t\t\tgenerateChartRecommendations(uploadedData.data);\n\t\t}).then(() => {\n\t\t\tprops.setDisplayedModal(ChartWizardModals.CHOOSE_CHART_MODAL);\n\t\t\tprops.setLastVisitedModal(ChartWizardModals.UPLOAD_DATA_MODAL);\n\t\t}).catch((err) => {\n\t\t\tsetFileErrorState({\n\t\t\t\tisFileInvalid: true,\n\t\t\t\terrorMessage: err\n\t\t\t});\n\t\t});\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\tclassName={fileUploaderModal}\n\t\t\topen={props.shouldDisplay}\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--btn--primary'\n\t\t\tonRequestSubmit={() => handleFileUpload()}\n\t\t\tprimaryButtonDisabled={!uploadedFile}\n\t\t\tonRequestClose={() => { props.setShouldDisplay(false); }}\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setDisplayedModal(ChartWizardModals.CREATE_CHART_MODAL);\n\t\t\t\tprops.setLastVisitedModal(ChartWizardModals.UPLOAD_DATA_MODAL);\n\t\t\t}}\n\t\t\tmodalHeading='Upload chart data'\n\t\t\tprimaryButtonText='Done'\n\t\t\tsecondaryButtonText='Back'>\n\t\t\t<p>\n\t\t\t\tStart with uploading the chart data or create a new chart from scratch.\n\t\t\t</p>\n\t\t\t<div className={fileUploaderHeading}>\n\t\t\t\t<strong className={'bx--file--label'}>Upload data file</strong>\n\t\t\t\t<p className={'bx--label-description'}>Only .json and .csv files</p>\n\t\t\t</div>\n\t\t\t<FileUploaderButton\n\t\t\t\tmultiple={false}\n\t\t\t\taccept={['.json', '.csv']}\n\t\t\t\tonChange={(event: any) => { onFileAdded(event.target.files); }}/>\n\t\t\t{\n\t\t\t\tuploadedFile\n\t\t\t\t\t? <FileUploaderItem\n\t\t\t\t\t\tstatus='edit'\n\t\t\t\t\t\tname={uploadedFile.name}\n\t\t\t\t\t\tinvalid={fileErrorState.isFileInvalid}\n\t\t\t\t\t\terrorSubject={fileErrorState.errorMessage}\n\t\t\t\t\t\tonDelete={() => {\n\t\t\t\t\t\t\tonFileDelete();\n\t\t\t\t\t\t\tprops.setUploadedData({\n\t\t\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\t\t\twasDataModified: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}/>\n\t\t\t\t\t: null\n\t\t\t}\n\t\t</Modal>\n\t);\n};\n","import React, { useState } from 'react';\n\nimport { CreateChartModal } from './create-chart-modal';\nimport { UploadDataModal } from './upload-data-modal';\nimport { ChooseChartModal } from './choose-chart-modal';\nimport { ChartType } from '../../../interfaces';\n\nexport enum ChartWizardModals {\n\tCREATE_CHART_MODAL,\n\tUPLOAD_DATA_MODAL,\n\tCHOOSE_CHART_MODAL\n}\n\nexport const ChartWizard = ({ shouldDisplay, setShouldDisplay, dispatch }: any) => {\n\t// These are states which are shared amongst the three modals.\n\tconst [displayedModal, setDisplayedModal]\n\t\t= useState<ChartWizardModals | null>(ChartWizardModals.CREATE_CHART_MODAL);\n\t// This is used to indicate which modal was last visited and is used to go go back to the\n\t// correct previous modal.\n\tconst [lastVisitedModal, setLastVisitedModal]\n\t\t= useState<ChartWizardModals>(ChartWizardModals.CREATE_CHART_MODAL);\n\tconst [recommendedCharts, setRecommendedCharts] = useState<ChartType[]>([]);\n\tconst [uploadedData, setUploadedData] = useState<any>({});\n\n\tconst modalSwitcher = () => {\n\t\tif (!shouldDisplay) {\n\t\t\treturn null;\n\t\t}\n\t\tswitch(displayedModal) {\n\t\t\tcase ChartWizardModals.CREATE_CHART_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<CreateChartModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal} />\n\t\t\t\t);\n\t\t\tcase ChartWizardModals.UPLOAD_DATA_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<UploadDataModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetUploadedData={setUploadedData}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal}\n\t\t\t\t\t\tsetRecommendedCharts={setRecommendedCharts} />\n\t\t\t\t);\n\t\t\tcase ChartWizardModals.CHOOSE_CHART_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<ChooseChartModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tlastVisitedModal={lastVisitedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal}\n\t\t\t\t\t\trecommendedCharts={recommendedCharts}\n\t\t\t\t\t\tsetRecommendedCharts={setRecommendedCharts}\n\t\t\t\t\t\tuploadedData={uploadedData}\n\t\t\t\t\t\tsetUploadedData={setUploadedData}\n\t\t\t\t\t\tdispatch={dispatch} />\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\treturn modalSwitcher();\n};\n","export const groupedBarData = [\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Qty',\n\t\tvalue: 65000\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'More',\n\t\tvalue: -29123\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Sold',\n\t\tvalue: -35213\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Restocking',\n\t\tvalue: 51213\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Misc',\n\t\tvalue: 16932\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Qty',\n\t\tvalue: 32432\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'More',\n\t\tvalue: -21312\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Sold',\n\t\tvalue: -56456\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Restocking',\n\t\tvalue: -21312\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Misc',\n\t\tvalue: 34234\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Qty',\n\t\tvalue: -12312\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'More',\n\t\tvalue: 23232\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Sold',\n\t\tvalue: 34232\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Restocking',\n\t\tvalue: -12312\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Misc',\n\t\tvalue: -34234\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Qty',\n\t\tvalue: -32423\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'More',\n\t\tvalue: 21313\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Sold',\n\t\tvalue: 64353\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Restocking',\n\t\tvalue: 24134\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Misc',\n\t\tvalue: 24134\n\t}\n];\n\nexport const groupedBarOptions = {\n\ttitle: 'Grouped bar (discrete)',\n\taxes: {\n\t\tleft: { mapsTo: 'value' },\n\t\tbottom: {\n\t\t\tscaleType: 'labels',\n\t\t\tmapsTo: 'key'\n\t\t}\n\t}\n};\n\n\nexport const groupedBarHorizontalOptions = {\n\ttitle: 'Grouped horizontal bar (discrete)',\n\taxes: {\n\t\tleft: {\n\t\t\tscaleType: 'labels',\n\t\t\tmapsTo: 'key'\n\t\t},\n\t\tbottom: {\n\t\t\tscaleType: 'linear',\n\t\t\tmapsTo: 'value'\n\t\t}\n\t}\n};\n\n// Simple bar\nexport const simpleBarData = [\n\t{\n\t\tgroup: 'Dataset 0',\n\t\tkey: 'Qty',\n\t\tvalue: 65000\n\t},\n\t{\n\t\tgroup: 'Dataset 0',\n\t\tkey: 'More',\n\t\tvalue: 29123\n\t},\n\t{\n\t\tgroup: 'Dataset 0',\n\t\tkey: 'Sold',\n\t\tvalue: 35213\n\t},\n\t{\n\t\tgroup: 'Dataset 0',\n\t\tkey: 'Restocking',\n\t\tvalue: 51213\n\t},\n\t{\n\t\tgroup: 'Dataset 0',\n\t\tkey: 'Misc',\n\t\tvalue: 16932\n\t}\n];\n\n\nexport const simpleBarOptions = {\n\ttitle: 'Simple bar (discrete)',\n\taxes: {\n\t\tleft: {\n\t\t\tscaleType: 'linear',\n\t\t\tmapsTo: 'value'\n\t\t},\n\t\tbottom: {\n\t\t\tmapsTo: 'key',\n\t\t\tscaleType: 'labels'\n\t\t}\n\t}\n};\n\nexport const simpleBarHorizontalOptions = {\n\ttitle: 'Simple horizontal bar (discrete)',\n\taxes: {\n\t\tleft: {\n\t\t\tmapsTo: 'key',\n\t\t\tscaleType: 'labels'\n\t\t},\n\t\tbottom: {\n\t\t\tscaleType: 'linear',\n\t\t\tmapsTo: 'value'\n\t\t}\n\t}\n};\n\n// Stacked bar\nexport const stackedBarData = [\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Qty',\n\t\tvalue: 65000\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'More',\n\t\tvalue: 29123\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Sold',\n\t\tvalue: 35213\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Restocking',\n\t\tvalue: 51213\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Misc',\n\t\tvalue: 16932\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Qty',\n\t\tvalue: 32432\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'More',\n\t\tvalue: 21312\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Sold',\n\t\tvalue: 56456\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Restocking',\n\t\tvalue: 21312\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Misc',\n\t\tvalue: 34234\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Qty',\n\t\tvalue: 12312\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'More',\n\t\tvalue: 23232\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Sold',\n\t\tvalue: 34232\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Restocking',\n\t\tvalue: 12312\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Misc',\n\t\tvalue: 34234\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Qty',\n\t\tvalue: 32423\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'More',\n\t\tvalue: 21313\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Sold',\n\t\tvalue: 64353\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Restocking',\n\t\tvalue: 24134\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Misc',\n\t\tvalue: 32423\n\t}\n];\n\nexport const stackedBarOptions = {\n\ttitle: 'Stacked bar (discrete)',\n\taxes: {\n\t\tleft: {\n\t\t\tmapsTo: 'value',\n\t\t\tstacked: true\n\t\t},\n\t\tbottom: {\n\t\t\tmapsTo: 'key',\n\t\t\tscaleType: 'labels'\n\t\t}\n\t}\n};\n\nexport const stackedBarHorizontalOptions = {\n\ttitle: 'Stacked horizontal bar (discrete)',\n\taxes: {\n\t\tleft: {\n\t\t\tscaleType: 'labels',\n\t\t\tmapsTo: 'key'\n\t\t},\n\t\tbottom: {\n\t\t\tstacked: true,\n\t\t\tscaleType: 'linear',\n\t\t\tmapsTo: 'value'\n\t\t}\n\t}\n};\n","export const pieData = [\n\t{\n\t\tgroup: 'Dataset 0',\n\t\tkey: '2V2N 9KYPM version 1',\n\t\tvalue: 20000\n\t},\n\t{\n\t\tgroup: 'Dataset 0',\n\t\tkey: 'L22I P66EP L22I P66EP L22I P66EP',\n\t\tvalue: 65000\n\t},\n\t{\n\t\tgroup: 'Dataset 0',\n\t\tkey: 'JQAI 2M4L1',\n\t\tvalue: 75000\n\t},\n\t{\n\t\tgroup: 'Dataset 0',\n\t\tkey: 'J9DZ F37AP',\n\t\tvalue: 1200\n\t},\n\t{\n\t\tgroup: 'Dataset 0',\n\t\tkey: 'YEL48 Q6XK YEL48',\n\t\tvalue: 10000\n\t},\n\t{\n\t\tgroup: 'Dataset 0',\n\t\tkey: 'Misc',\n\t\tvalue: 25000\n\t}\n];\n\nexport const pieOptions = {\n\ttitle: 'Pie',\n\tresizable: true,\n\tdata: { groupMapsTo: 'key' },\n\tlegend: { position: 'left' }\n};\n","import { pieData } from './pie';\n\nexport const donutData = pieData;\n\nexport const donutOptions = {\n\ttitle: 'Donut',\n\tresizable: true,\n\tdata: { groupMapsTo: 'key' },\n\tdonut: { center: { label: 'Browsers' } },\n\tlegend: { position: 'left' }\n};\n","export const lineData = [\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Qty',\n\t\tvalue: 34200\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'More',\n\t\tvalue: 23500\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Sold',\n\t\tvalue: 53100\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Restocking',\n\t\tvalue: 42300\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Misc',\n\t\tvalue: 12300\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Qty',\n\t\tvalue: 34200\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'More',\n\t\tvalue: 53200\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Sold',\n\t\tvalue: 42300\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Restocking',\n\t\tvalue: 21400\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Misc',\n\t\tvalue: 0\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Qty',\n\t\tvalue: 41200\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'More',\n\t\tvalue: 18400\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Sold',\n\t\tvalue: 34210\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Restocking',\n\t\tvalue: 1400\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Misc',\n\t\tvalue: 42100\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Qty',\n\t\tvalue: 22000\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'More',\n\t\tvalue: 1200\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Sold',\n\t\tvalue: 9000\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Restocking',\n\t\tvalue: 24000,\n\t\taudienceSize: 10\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Misc',\n\t\tvalue: 3000,\n\t\taudienceSize: 10\n\t}\n];\n\nexport const lineOptions = {\n\ttitle: 'Line (discrete)',\n\taxes: {\n\t\tbottom: {\n\t\t\ttitle: '2019 Annual Sales Figures',\n\t\t\tmapsTo: 'key',\n\t\t\tscaleType: 'labels'\n\t\t},\n\t\tleft: {\n\t\t\tmapsTo: 'value',\n\t\t\ttitle: 'Conversion rate',\n\t\t\tscaleType: 'linear'\n\t\t}\n\t}\n};\n","export const areaData = [\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tdate: '2019-01-01T05:00:00.000Z',\n\t\tvalue: 0\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tdate: '2019-01-06T05:00:00.000Z',\n\t\tvalue: -37312\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tdate: '2019-01-08T05:00:00.000Z',\n\t\tvalue: -22392\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tdate: '2019-01-15T05:00:00.000Z',\n\t\tvalue: -52576\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tdate: '2019-01-19T05:00:00.000Z',\n\t\tvalue: 20135\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tdate: '2019-01-01T05:00:00.000Z',\n\t\tvalue: 47263\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tdate: '2019-01-05T05:00:00.000Z',\n\t\tvalue: 14178\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tdate: '2019-01-08T05:00:00.000Z',\n\t\tvalue: 23094\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tdate: '2019-01-13T05:00:00.000Z',\n\t\tvalue: 45281\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tdate: '2019-01-19T05:00:00.000Z',\n\t\tvalue: -63954\n\t}\n];\n\nexport const areaOptions = {\n\ttitle: 'Area (time series - natural curve)',\n\taxes: {\n\t\tbottom: {\n\t\t\ttitle: '2019 Annual Sales Figures',\n\t\t\tmapsTo: 'date',\n\t\t\tscaleType: 'time'\n\t\t},\n\t\tleft: {\n\t\t\tmapsTo: 'value',\n\t\t\tscaleType: 'linear'\n\t\t}\n\t},\n\tcurve: 'curveNatural'\n};\n\nexport const stackedAreaData = [\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tdate: '2019-01-01T05:00:00.000Z',\n\t\tvalue: 10000\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tdate: '2019-01-05T05:00:00.000Z',\n\t\tvalue: 65000\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tdate: '2019-01-08T05:00:00.000Z',\n\t\tvalue: 10000\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tdate: '2019-01-13T05:00:00.000Z',\n\t\tvalue: 49213\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tdate: '2019-01-17T05:00:00.000Z',\n\t\tvalue: 51213\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tdate: '2019-01-01T05:00:00.000Z',\n\t\tvalue: 20000\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tdate: '2019-01-05T05:00:00.000Z',\n\t\tvalue: 25000\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tdate: '2019-01-08T05:00:00.000Z',\n\t\tvalue: 60000\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tdate: '2019-01-13T05:00:00.000Z',\n\t\tvalue: 30213\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tdate: '2019-01-17T05:00:00.000Z',\n\t\tvalue: 55213\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tdate: '2019-01-01T05:00:00.000Z',\n\t\tvalue: 30000\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tdate: '2019-01-05T05:00:00.000Z',\n\t\tvalue: 20000\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tdate: '2019-01-08T05:00:00.000Z',\n\t\tvalue: 40000\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tdate: '2019-01-13T05:00:00.000Z',\n\t\tvalue: 60213\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tdate: '2019-01-17T05:00:00.000Z',\n\t\tvalue: 25213\n\t}\n];\n\nexport const stackedAreaOptions = {\n\ttitle: 'Stacked area (time series)',\n\taxes: {\n\t\tleft: {\n\t\t\tstacked: true,\n\t\t\tmapsTo: 'value'\n\t\t},\n\t\tbottom: {\n\t\t\tscaleType: 'time',\n\t\t\tmapsTo: 'date'\n\t\t}\n\t},\n\tcurve: 'curveMonotoneX'\n};\n","export const scatterData = [\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Qty',\n\t\tvalue: 34200\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'More',\n\t\tvalue: 23500\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Sold',\n\t\tvalue: 53100\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Restocking',\n\t\tvalue: 42300\n\t},\n\t{\n\t\tgroup: 'Dataset 1',\n\t\tkey: 'Misc',\n\t\tvalue: 12300\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Qty',\n\t\tvalue: 34200\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'More',\n\t\tvalue: 53200\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Sold',\n\t\tvalue: 42300\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Restocking',\n\t\tvalue: 21400\n\t},\n\t{\n\t\tgroup: 'Dataset 2',\n\t\tkey: 'Misc',\n\t\tvalue: 0\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Qty',\n\t\tvalue: 41200\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'More',\n\t\tvalue: 18400\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Sold',\n\t\tvalue: 34210\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Restocking',\n\t\tvalue: 1400\n\t},\n\t{\n\t\tgroup: 'Dataset 3',\n\t\tkey: 'Misc',\n\t\tvalue: 42100\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Qty',\n\t\tvalue: 22000\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'More',\n\t\tvalue: 1200\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Sold',\n\t\tvalue: 9000\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Restocking',\n\t\tvalue: 24000\n\t},\n\t{\n\t\tgroup: 'Dataset 4',\n\t\tkey: 'Misc',\n\t\tvalue: 3000\n\t}\n];\n\nexport const scatterOptions = {\n\ttitle: 'Scatter (discrete)',\n\taxes: {\n\t\tbottom: {\n\t\t\ttitle: '2019 Annual Sales Figures',\n\t\t\tscaleType: 'labels',\n\t\t\tmapsTo: 'key'\n\t\t},\n\t\tleft: { mapsTo: 'value' }\n\t}\n};\n","\nimport * as barDemos from './placeholder-data/bar';\nimport * as pieDemos from './placeholder-data/pie';\nimport * as donutDemos from './placeholder-data/donut';\nimport * as lineDemos from './placeholder-data/line';\nimport * as areaDemos from './placeholder-data/area';\nimport * as scatterDemos from './placeholder-data/scatter';\nimport { ChartType } from '../../../interfaces';\nimport { chartsVersion } from '../../../charts.version';\nimport { restoreChartData } from '../../../utils/chart-tools';\nimport merge from 'lodash/merge';\n\nconst defaultOptions = {\n\taxes: {\n\t\tleft: {\n\t\t\tprimary: true,\n\t\t\tmapsTo: 'value'\n\t\t},\n\t\tbottom: {\n\t\t\tscaleType: 'labels',\n\t\t\tsecondary: true,\n\t\t\tmapsTo: 'key'\n\t\t}\n\t}\n};\n\nexport const generateNewChart = (\n\tchartType: ChartType | null,\n\tdata: any = [],\n\thorizontal = false\n) => {\n\tlet chartData: any;\n\tlet chartOptions: any;\n\tlet type: string;\n\t// TODO: get unique id for the generated chart.\n\tconst chartID = `${Math.random().toString().slice(2)}${Math.random().toString().slice(2)}`;\n\tconst chartName = 'New chart';\n\n\tchartData = data;\n\n\t// Generate create base chart options.\n\tswitch(chartType) {\n\t\tcase ChartType.SCATTER_CHART:\n\t\t\tchartOptions = scatterDemos.scatterOptions;\n\t\t\ttype = 'scatter-chart';\n\t\t\t// If no data is given, this sets chart data to default data.\n\t\t\tif (chartData.length === 0) {\n\t\t\t\tchartData = restoreChartData(scatterDemos.scatterData);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ChartType.DONUT_CHART:\n\t\t\tchartOptions = donutDemos.donutOptions;\n\t\t\ttype = 'donut-chart';\n\t\t\t// If no data is given, this sets chart data to default data.\n\t\t\tif (chartData.length === 0) {\n\t\t\t\tchartData = restoreChartData(donutDemos.donutData);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ChartType.LINE_CHART:\n\t\t\tchartOptions = lineDemos.lineOptions;\n\t\t\ttype = 'line-chart';\n\t\t\t// If no data is given, this sets chart data to default data.\n\t\t\tif (chartData.length === 0) {\n\t\t\t\tchartData = restoreChartData(lineDemos.lineData);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ChartType.AREA_CHART:\n\t\t\tchartOptions = areaDemos.areaOptions;\n\t\t\ttype = 'area-chart';\n\t\t\t// If no data is given, this sets chart data to default data.\n\t\t\tif (chartData.length === 0) {\n\t\t\t\tchartData = restoreChartData(areaDemos.areaData);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ChartType.STACKED_AREA_CHART:\n\t\t\tchartOptions = areaDemos.stackedAreaOptions;\n\t\t\ttype = 'stacked-area-chart';\n\t\t\t// If no data is given, this sets chart data to default data.\n\t\t\tif (chartData.length === 0) {\n\t\t\t\tchartData = restoreChartData(areaDemos.stackedAreaData);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ChartType.STACKED_BAR_CHART:\n\t\t\tchartOptions = barDemos.stackedBarOptions;\n\t\t\tif (horizontal) {\n\t\t\t\tchartOptions = barDemos.stackedBarHorizontalOptions;\n\t\t\t}\n\t\t\ttype = 'stacked-bar-chart';\n\t\t\t// If no data is given, this sets chart data to default data.\n\t\t\tif (chartData.length === 0) {\n\t\t\t\tchartData = restoreChartData(barDemos.stackedBarData);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ChartType.GROUPED_BAR_CHART:\n\t\t\tchartOptions = barDemos.groupedBarOptions;\n\t\t\tif (horizontal) {\n\t\t\t\tchartOptions = barDemos.groupedBarHorizontalOptions;\n\t\t\t}\n\t\t\ttype = 'grouped-bar-chart';\n\t\t\t// If no data is given, this sets chart data to default data.\n\t\t\tif (chartData.length === 0) {\n\t\t\t\tchartData = restoreChartData(barDemos.groupedBarData);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ChartType.PIE_CHART:\n\t\t\tchartOptions = pieDemos.pieOptions;\n\t\t\ttype = 'pie-chart';\n\t\t\t// If no data is given, this sets chart data to default data.\n\t\t\tif (chartData.length === 0) {\n\t\t\t\tchartData = restoreChartData(pieDemos.pieData);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ChartType.SIMPLE_BAR_CHART:\n\t\tdefault:\n\t\t\tchartOptions = barDemos.simpleBarOptions;\n\t\t\tif (horizontal) {\n\t\t\t\tchartOptions = barDemos.simpleBarHorizontalOptions;\n\t\t\t}\n\t\t\ttype = 'simple-bar-chart';\n\t\t\t// If no data is given, this sets chart data to default data.\n\t\t\tif (chartData.length === 0) {\n\t\t\t\tchartData = restoreChartData(barDemos.simpleBarData);\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tchartOptions = merge({}, defaultOptions, chartOptions);\n\n\treturn {\n\t\tid: chartID,\n\t\tlastModified: new Date().toISOString(),\n\t\ttitle: chartName,\n\t\ttype,\n\t\toptions: {\n\t\t\tchartsVersion,\n\t\t\trawChartOptions: chartOptions\n\t\t},\n\t\tdata: chartData,\n\t\tlabels: []\n\t};\n};\n","import React, { useState, useContext } from 'react';\n\nimport { css } from 'emotion';\nimport {\n\tModal,\n\tTag,\n\tInlineNotification,\n\tNotificationActionButton\n} from 'carbon-components-react';\nimport { ChartWizardModals } from './chart-wizard';\nimport { ChartType } from '../../../interfaces';\nimport { generateNewChart } from './generate-new-chart';\n\n// Chart tile icons\nimport stackedBarIcon from './icons/stacked-bar-icon.svg';\nimport donutIcon from './icons/donut-icon.svg';\nimport groupedBarIcon from './icons/grouped-bar-icon.svg';\nimport groupedBarHorizontalIcon from './icons/grouped-bar-horizontal-icon.svg';\nimport scatterIcon from './icons/scatter-icon.svg';\nimport simpleBarIcon from './icons/simple-bar-icon.svg';\nimport stackedBarHorizontalIcon from './icons/stacked-bar-horizontal-icon.svg';\nimport simpleBarHorizontalIcon from './icons/simple-bar-horizontal-icon.svg';\nimport pieIcon from './icons/pie-icon.svg';\nimport lineIcon from './icons/line-icon.svg';\nimport areaIcon from './icons/area-icon.svg';\nimport stackedAreaIcon from './icons/stacked-area-icon.svg';\n\nimport {\n\tChartActionType,\n\tChartAction,\n\tChartState,\n\tChartsContext\n} from '../../../context';\nimport { useHistory } from 'react-router-dom';\nimport { SelectionTile } from '../../../components/selection-tile';\nimport { warningNotificationProps } from '../../../utils/file-tools';\n\nconst chartOptions = css`\n\tmargin-left: 30px;\n\tmargin-right: 30px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n\n\t// This is the viewport width that causes the selection tiles to overlap.\n\t@media screen and (max-width: 45rem) {\n\t\tflex-direction: column;\n\t}\n`;\n\nconst chartOptionTile = css`\n\twidth: 48%;\n\tmax-height: 17.3125rem;\n\timg, span {\n\t\tmax-height: 17.3125rem;\n\t}\n\ttext-align: center;\n\t.bx--tile {\n\t\tpadding-right: 16px;\n\t}\n\tmargin-top: 12px;\n\tmargin-bottom: 12px;\n\n\t// This is the viewport width that causes the selection tiles to overlap.\n\t@media screen and (max-width: 45rem) {\n\t\twidth: 100%;\n\t}\n`;\n\nexport interface ChooseChartModalProps {\n\tshouldDisplay: boolean,\n\tsetShouldDisplay: (shouldDisplay: boolean) => void,\n\tsetDisplayedModal: (displayedModal: ChartWizardModals | null) => void,\n\tsetLastVisitedModal: (lastVisitedModal: ChartWizardModals) => void,\n\tlastVisitedModal: ChartWizardModals,\n\trecommendedCharts: ChartType[],\n\tsetRecommendedCharts: (recommendedCharts: ChartType[]) => void,\n\tuploadedData: any,\n\tsetUploadedData: (uploadedData: any) => void,\n\tdispatch: (chartAction: ChartAction) => ChartState\n}\n\nexport const ChooseChartModal = (props: ChooseChartModalProps) => {\n\tconst [selectedChartType, doSetSelectedChartType] = useState<ChartType | null>(null);\n\tconst [horizontal, setHorizontal] = useState(false);\n\tconst [, dispatch] = useContext(ChartsContext);\n\n\tconst setSelectedChartType = (chartType: ChartType, horizontal = false) => {\n\t\tdoSetSelectedChartType(chartType);\n\t\tsetHorizontal(horizontal);\n\t};\n\tconst history = useHistory();\n\n\tconst isRecommended = (chartType: ChartType) => (\n\t\tprops.recommendedCharts.some((recommendation: ChartType) => recommendation === chartType)\n\t);\n\n\tconst generateChart = () => {\n\t\tconst generatedChart = generateNewChart(\n\t\t\tselectedChartType,\n\t\t\tprops.uploadedData.data,\n\t\t\thorizontal\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: ChartActionType.ADD_ONE,\n\t\t\tdata: generatedChart\n\t\t});\n\t\thistory.push(`/edit/${generatedChart.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tgenerateChart();\n\t\t\t\tprops.setLastVisitedModal(ChartWizardModals.CHOOSE_CHART_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => { props.setShouldDisplay(false); }}\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setDisplayedModal(props.lastVisitedModal);\n\t\t\t\tprops.setLastVisitedModal(ChartWizardModals.CHOOSE_CHART_MODAL);\n\t\t\t}}\n\t\t\thasForm\n\t\t\tmodalHeading='Create new chart'\n\t\t\tprimaryButtonText='Done'\n\t\t\tsecondaryButtonText='Back'\n\t\t\tprimaryButtonDisabled={selectedChartType === null}>\n\t\t\t{\n\t\t\t\tprops.uploadedData.wasDataModified\n\t\t\t\t\t? <InlineNotification\n\t\t\t\t\t\t{ ...warningNotificationProps }\n\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<NotificationActionButton\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tprops.setUploadedData({\n\t\t\t\t\t\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\t\t\t\t\t\twasDataModified: false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tprops.setRecommendedCharts([]);\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\tUse demo data\n\t\t\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tprops.uploadedData && props.uploadedData.originalData\n\t\t\t\t\t\t\t\t\t&& <NotificationActionButton\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tprops.setUploadedData({\n\t\t\t\t\t\t\t\t\t\t\t\tdata: props.uploadedData.originalData,\n\t\t\t\t\t\t\t\t\t\t\t\twasDataModified: false\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tprops.setRecommendedCharts([]);\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\tUse unmodified data\n\t\t\t\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t} />\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\t<p>Choose a type of chart and click done to start editing your new chart</p>\n\t\t\t<div className={chartOptions}>\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.SIMPLE_BAR_CHART); }}\n\t\t\t\t\ticon={<img alt=\"\" src={simpleBarIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.SIMPLE_BAR_CHART && !horizontal}\n\t\t\t\t\tlabel='Simple bar chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.SIMPLE_BAR_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.SIMPLE_BAR_CHART, true); }}\n\t\t\t\t\ticon={<img alt=\"\" src={simpleBarHorizontalIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.SIMPLE_BAR_CHART && horizontal}\n\t\t\t\t\tlabel='Simple horizontal bar chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.SIMPLE_BAR_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.SCATTER_CHART); }}\n\t\t\t\t\ticon={<img alt=\"\" src={scatterIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.SCATTER_CHART}\n\t\t\t\t\tlabel='Scatter chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.SCATTER_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.DONUT_CHART); }}\n\t\t\t\t\ticon={<img alt=\"\" src={donutIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.DONUT_CHART}\n\t\t\t\t\tlabel='Donut chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.DONUT_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.STACKED_BAR_CHART); }}\n\t\t\t\t\ticon={<img alt=\"\" src={stackedBarIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.STACKED_BAR_CHART && !horizontal}\n\t\t\t\t\tlabel='Stacked bar chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.STACKED_BAR_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.STACKED_BAR_CHART, true); }}\n\t\t\t\t\ticon={<img alt=\"\" src={stackedBarHorizontalIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.STACKED_BAR_CHART && horizontal}\n\t\t\t\t\tlabel='Horizontal stacked bar chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.STACKED_BAR_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.LINE_CHART); }}\n\t\t\t\t\ticon={<img alt=\"\" src={lineIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.LINE_CHART}\n\t\t\t\t\tlabel='Line chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.LINE_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.AREA_CHART); }}\n\t\t\t\t\ticon={<img alt=\"\" src={areaIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.AREA_CHART}\n\t\t\t\t\tlabel='Area chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.AREA_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.STACKED_AREA_CHART); }}\n\t\t\t\t\ticon={<img alt=\"\" src={stackedAreaIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.STACKED_AREA_CHART}\n\t\t\t\t\tlabel='Stacked area chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.STACKED_AREA_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.GROUPED_BAR_CHART); }}\n\t\t\t\t\ticon={<img alt=\"\" src={groupedBarIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.GROUPED_BAR_CHART && !horizontal}\n\t\t\t\t\tlabel='Grouped bar chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.GROUPED_BAR_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.GROUPED_BAR_CHART, true); }}\n\t\t\t\t\ticon={<img alt=\"\" src={groupedBarHorizontalIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.GROUPED_BAR_CHART && horizontal}\n\t\t\t\t\tlabel='Horizontal grouped bar chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.GROUPED_BAR_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={chartOptionTile}\n\t\t\t\t\tonChange={() => { setSelectedChartType(ChartType.PIE_CHART); }}\n\t\t\t\t\ticon={<img alt=\"\" src={pieIcon} />}\n\t\t\t\t\tselected={selectedChartType === ChartType.PIE_CHART}\n\t\t\t\t\tlabel='Pie chart'\n\t\t\t\t\ttag={\n\t\t\t\t\t\tisRecommended(ChartType.PIE_CHART)\n\t\t\t\t\t\t\t? <Tag type='blue'>Recommended</Tag>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t} />\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","export const chartsVersion = '0.24.1'; // TODO regenerate this file on postinstall\n","import React, {\n\tuseState,\n\tuseContext,\n\tuseEffect\n} from 'react';\nimport { css } from 'emotion';\nimport { DashboardSearch, SortDirection } from './dashboard-search';\nimport { ChartGroupDisplayed, DashboardHeader } from './dashboard-header';\n\nimport {\n\tCol,\n\tMain,\n\tRow\n} from './../../components';\nimport { ChartTileList } from './chart-tile-list';\nimport { ChartWizard } from './chart-wizard/chart-wizard';\nimport { ChartModal } from '../edit/chart-modal';\nimport { ChartsContext, ChartActionType } from '../../context';\n\nconst chartSort = (sortDirection: SortDirection) => function(a: any, b: any) {\n\tif (sortDirection === SortDirection.Descending) {\n\t\treturn Date.parse(a.lastModified) - Date.parse(b.lastModified);\n\t}\n\treturn Date.parse(b.lastModified) - Date.parse(a.lastModified);\n};\n\n// styles for the header (title and content switcher)\n// to override carbon styling for <main>\nconst headerRowSyles = css`\n\tbackground: white;\n\tpadding: 0 2rem;\n\tmargin: 0 -2rem;\n\tpadding-top: 2rem;\n\tmargin-top: -2rem;\n\t.bx--col {\n\t\tpadding: 0;\n\t}\n`;\n\n// additional styles for the search row\nconst searchRowStyles = css`\n\tpadding-right: 0;\n\tpadding-left: 1rem;\n\tmargin: 0 -2rem;\n\tborder-bottom: 1px solid #d6d6d6;\n\t.bx--col {\n\t\tpadding-right: 0;\n\t}\n`;\n\nexport const Dashboard = () => {\n\tconst [{ charts, loaded }, dispatch] = useContext(ChartsContext);\n\tconst [chartGroupDisplayed, setChartGroupDisplayed] = useState(ChartGroupDisplayed.AllCharts);\n\tconst [chartTitleFilter, setChartTitleFilter] = useState('');\n\tconst [sortDirection, setSortDirection] = useState(SortDirection.Ascending);\n\tconst [displayWizard, setDisplayWizard] = useState(false);\n\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: ChartActionType.UPDATE_ALL,\n\t\t\tdata: charts,\n\t\t\tloaded: true\n\t\t});\n\t// we don't want to run this effect when charts change because it creates a loop\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [dispatch]);\n\n\tuseEffect(() => {\n\t\tdocument.title = 'Carbon Charts Builder';\n\t}, []);\n\n\tconst filterCharts = (charts: any) => charts.filter((chart: any) => chart.title.toLowerCase()\n\t\t.includes(chartTitleFilter.toLowerCase()) && !chart.hidden)\n\t\t.sort(chartSort(sortDirection));\n\n\tlet displayedCharts;\n\n\tswitch (chartGroupDisplayed) {\n\t\tcase ChartGroupDisplayed.Templates: {\n\t\t\tdisplayedCharts = filterCharts(\n\t\t\t\tcharts.filter((chart: any) => chart.labels && chart.labels.includes('template'))\n\t\t\t);\n\t\t\tbreak;\n\t\t}\n\t\tcase ChartGroupDisplayed.AllCharts:\n\t\tdefault:\n\t\t\tdisplayedCharts = filterCharts(charts);\n\t\t\tbreak;\n\t}\n\tconst [modalChart, setModalChart] = useState<any>(null);\n\n\treturn (\n\t\t<>\n\t\t\t<Main style={{ marginLeft: '0px' }}>\n\t\t\t\t<Row styles={headerRowSyles}>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<DashboardHeader\n\t\t\t\t\t\t\tonDisplayedSwitchHandler={setChartGroupDisplayed}\n\t\t\t\t\t\t\tchartGroupDisplayed={chartGroupDisplayed} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row styles={searchRowStyles}>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<DashboardSearch\n\t\t\t\t\t\t\tonSearchHandler={setChartTitleFilter}\n\t\t\t\t\t\t\tonSortHandler={setSortDirection}\n\t\t\t\t\t\t\tsortDirection={sortDirection}\n\t\t\t\t\t\t\tdisplayWizard={displayWizard}\n\t\t\t\t\t\t\tsetDisplayWizard={setDisplayWizard} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!loaded\n\t\t\t\t\t\t\t\t? 'Loading...'\n\t\t\t\t\t\t\t\t: <ChartTileList\n\t\t\t\t\t\t\t\t\tcharts={displayedCharts}\n\t\t\t\t\t\t\t\t\tloaded={loaded}\n\t\t\t\t\t\t\t\t\tsetModalChart={setModalChart} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Main>\n\t\t\t<ChartWizard\n\t\t\t\tshouldDisplay={displayWizard}\n\t\t\t\tsetShouldDisplay={setDisplayWizard} />\n\t\t\t{modalChart && <ChartModal chart={modalChart} />}\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Button } from 'carbon-components-react';\nimport { useHistory } from 'react-router-dom';\nimport { Header } from '../components/header';\n// import the img placeholder svg\nimport placeholder from '../assets/chart-404.svg';\n\n// styles for placeholder\nconst svgStyle = css`\n\twidth: 25vw;\n\theight: auto;\n\tmax-width: 400px;\n`;\n\nconst placeholderContainer = css`\n\tmargin-top: 48px;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: calc(100vh - 48px);\n\tpadding: 24px;\n\tpadding-top: 64px;\n\talign-items: center;\n`;\n\nexport const NotFound = () => {\n\tconst history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<div className={placeholderContainer}>\n\t\t\t\t<img alt=\"Chart not found\" src={placeholder} className={svgStyle} />\n\t\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t\t<h3>404: Not found</h3>\n\t\t\t\t\t<p style={{ marginTop: '0.5em' }}>\n\t\t\t\t\t\tThis page does not exist, click  <strong>Go back</strong><br /> to return.\n\t\t\t\t\t</p>\n\t\t\t\t\t<Button style={{ marginTop: '1rem' }} onClick={() => history.goBack()}>Go back</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { ErrorInfo } from 'react';\nimport { NotFound } from './not-found';\n\n/* Currently, there lacks react hooks with equivalent\neffect of getDerivedStateFromError and componentDidCatch,\ncurrent component based on: https://gist.github.com/andywer/800f3f25ce3698e8f8b5f1e79fed5c9c,\nthis should be written once the above hooks mentioned above are released.\n*/\n\ntype ErrorHandler = (error: Error, info: ErrorInfo) => void\ntype ErrorHandlingComponent<Props> = (props: Props, error?: Error) => React.ReactNode\n\ntype ErrorState = { error?: Error }\n\nfunction Catch<Props extends {}>(\n\tcomponent: ErrorHandlingComponent<Props>,\n\terrorHandler?: ErrorHandler\n): React.ComponentType<Props> {\n\treturn class Boundary extends React.Component<Props, ErrorState> {\n\t\tstate: ErrorState = { error: undefined }\n\n\t\tstatic getDerivedStateFromError(error: Error) {\n\t\t\treturn { error };\n\t\t}\n\n\t\tcomponentDidCatch(error: Error, info: React.ErrorInfo) {\n\t\t\tif (errorHandler) {\n\t\t\t\terrorHandler(error, info);\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\treturn component(this.props, this.state.error);\n\t\t}\n\t};\n}\n\ntype Props = {\n\tchildren: React.ReactNode\n}\n\nexport const ErrorBoundary = Catch((props: Props, error?: Error) => {\n\tif (error) {\n\t\treturn <NotFound />;\n\t}\n\treturn <>{props.children}</>;\n});\n","import React, { useState } from 'react';\nimport { HeaderContainer } from 'carbon-components-react';\nimport { Header } from '../components/index';\n\nexport const UIShell = () => {\n\tconst [isSideNavExpanded, setIsSideNavExpanded] = useState(false);\n\n\treturn (\n\t\t<HeaderContainer\n\t\t\trender={() => (\n\t\t\t\t<>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tisSideNavExpanded={isSideNavExpanded}\n\t\t\t\t\t\tsetIsSideNavExpanded={setIsSideNavExpanded} />\n\t\t\t\t</>\n\t\t\t)} />\n\t);\n};\n","import React from 'react';\nimport {\n\tRoute, BrowserRouter as Router, Switch\n} from 'react-router-dom';\nimport { Notification } from './components/index';\nimport {\n\tDashboard,\n\tEdit,\n\tErrorBoundary,\n\tNotFound\n} from './routes';\nimport { ChartsContextProvider } from './context/charts-context';\nimport { ModalContextProvider } from './context/modal-context';\nimport { NotificationContextProvider } from './context/notification-context';\nimport { UIShell } from './components/ui-shell';\nimport { css } from 'emotion';\n\n\nconst app = css`\n\tnav.bx--side-nav--expanded + div#edit-content {\n\t\tpadding-left: calc(2.25rem + 16rem);\n\t}\n\t// This is the viewport width that causes the edit header items to overlap\n\t@media screen and (max-width: 38.75rem) {\n\t\tnav.bx--side-nav--expanded + div#edit-content {\n\t\t\tpadding-left: 36px;\n\t\t}\n\t}\n`;\n\nexport const App = () => (\n\t<Router>\n\t\t<div className={app}>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<ChartsContextProvider>\n\t\t\t\t\t<NotificationContextProvider>\n\t\t\t\t\t\t<UIShell />\n\t\t\t\t\t\t<Notification />\n\t\t\t\t\t\t<ModalContextProvider>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path='/' exact component={Dashboard} />\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath={['/edit', '/edit/:id']}\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tcomponent={Edit} />\n\t\t\t\t\t\t\t\t<Route path=\"*\" component={NotFound} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</ModalContextProvider>\n\t\t\t\t\t</NotificationContextProvider>\n\t\t\t\t</ChartsContextProvider>\n\t\t\t</ErrorBoundary>\n\t\t</div>\n\t</Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n// disable eslint beacuse reasons\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.UI_BASE_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if UI_BASE_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.UI_BASE_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './app';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line\nconst render = (Component: any) => ReactDOM.render(<Component/>, document.getElementById('root'));\n\nrender(App);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) {\n\tmodule.hot.accept('./app', () => {\n\t\tconsole.info('App updated');\n\t\tconst Next = require('./app').App;\n\t\trender(Next);\n\t});\n}\n"],"sourceRoot":""}